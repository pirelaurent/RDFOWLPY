<?xml version="1.0" encoding="UTF-8"?>
<model xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../ild-modelling-tools/data/mm.xsd">
   <notes>
      <name>IBACS</name>
      <title>Modèle de Données IBACS</title>
      <description lang="fr">Modèle de Données IBACS.
      
Ce modèle sert à générer :
- la documentation associée (qui doit être complétée d'autres documents pour tout ce qui n'est pas couvert ici)
- du code : 
    - le code d'accès aux données,
    - l'essentiel du code métier (qui doit être complété des algorithmes, non décrits par ce modèle), 
    - le code de génération des bases miroir (typiquement Access),
    - ...
- divers fichiers de configuration de l'application :
    - paramétrage JPA,
    - DAOs,
    - configuration du code d'imports/exports XML (pour les sauvegardes),
    - configuration des exports/imports avancés (définis par les utilisateurs)
    - ... 
- etc.

Le modèle est découpé en domaines fonctionnels. Ces domaines dépendent les uns des autres.

On cherche systématiquement à éviter les cycles dans le graphe des dépendences entre domaines.

Par ailleurs, ce modèle décrit également les bases de données associées.</description>
   </notes>

   <database name="Configuration">
      <domain>Configuration</domain>
      <element>da.ibacs.DataChange</element>
      <element>da.ibacs.EntityExternalRef</element>
      <element>da.ibacs.TagTargetTag</element>
   </database>

   <database name="DocIpc">
      <description lang="fr">Base dédiée à la documentation (Data Modules, Cartes de Travail, ...) et à l'IPC.
Normalement, cette base ne peut qu'être chargée à partir de sources de données externes, et ne peut pas être directement modifiée par les utilisateurs.</description>
      <domain>Impacts</domain>
      <domain>Explanations</domain>
      <domain>Doc</domain>
      <domain>Ipc</domain>
      <element>da.ibacs.DataChange</element>
      <element>da.ibacs.EntityExternalRef</element>
      <element>da.ibacs.TagTargetTag</element>
   </database>

   <database name="Ft">
      <description lang="fr">Base contenant un extrait du Fichier Technique.
Cette base ne peut pas être modifiée par les utilisateurs.</description>
      <domain>Impacts</domain>
      <domain>Ftr</domain>
      <element>da.ibacs.DataChange</element>
      <element>da.ibacs.EntityExternalRef</element>
      <element>da.ibacs.TagTargetTag</element>
   </database>

   <database name="Gse">
      <description lang="fr">Base dédiée à la gestion des Moyens de Soutien.
Cette base est multi-avion.</description>
      <domain>Impacts</domain>
      <domain>Explanations</domain>
      <domain>Gse</domain>
      <element>da.ibacs.DataChange</element>
      <element>da.ibacs.EntityExternalRef</element>
      <element>da.ibacs.TagTargetTag</element>
   </database>

   <database name="Hums">
      <domain>Impacts</domain>
      <domain>Explanations</domain>
      <domain>Hums</domain>
      <element>da.ibacs.DataChange</element>
      <element>da.ibacs.EntityExternalRef</element>
      <element>da.ibacs.TagTargetTag</element>
   </database>

   <database name="Lsa">
      <description lang="fr">Base dédiée à la gestion des opérations de maintenance.
Il pourrait y avoir plusieurs bases de ce type, du moins c'est ce qui était imaginé au départ.
Le choix a finalement été fait de n'en gérer qu'une seule, en permettant de définir des variantes de Sous-Tâches.</description>
      <domain>Impacts</domain>
      <domain>Explanations</domain>
      <domain>Lsa-Operations</domain>
      <element>da.ibacs.DataChange</element>
      <element>da.ibacs.EntityExternalRef</element>
      <element>da.ibacs.TagTargetTag</element>
   </database>

   <database name="Management">
      <description lang="fr">Base dédiée au management de projet.</description>
      <domain>Impacts</domain>
      <domain>Explanations</domain>
      <domain>Management</domain>
      <element>da.ibacs.EntityAttribute</element>
      <element>da.ibacs.EntityAttribute_EnumValue</element>
      <element>da.ibacs.DataChange</element>
      <element>da.ibacs.EntityExternalRef</element>
      <element>da.ibacs.TagTargetTag</element>
   </database>

   <database name="Mms">
      <domain>Impacts</domain>
      <domain>Maintenance-Management-Systems</domain>
      <element>da.ibacs.DataChange</element>
      <element>da.ibacs.EntityExternalRef</element>
      <element>da.ibacs.TagTargetTag</element>
   </database>

   <database name="Pmi">
      <description lang="fr">Base dédiée à l'ordonnancement des visites de maintenances.</description>
      <domain>Impacts</domain>
      <domain>Explanations</domain>
      <domain>Progressive-Maintenance-Inspections</domain>
      <element>da.ibacs.DataChange</element>
      <element>da.ibacs.EntityExternalRef</element>
      <element>da.ibacs.TagTargetTag</element>
   </database>

   <database name="Resource">
      <description lang="fr">Base dédiée à la gestion des ressources partagées (le backbone).
 Il y a une seule base de ce type.</description>
      <domain>Impacts</domain>
      <domain>Explanations</domain>
      <domain>Traceability</domain>
      <domain>Business-Refs</domain>
      <domain>Resources</domain>
      <domain>Indicators</domain>
      <domain>Lsa-Resources</domain>
      <domain>Patchs</domain>
      <element>da.ibacs.DataChange</element>
      <element>da.ibacs.EntityExternalRef</element>
      <element>da.ibacs.TagTargetTag</element>
   </database>

   <database name="Rmp">
      <description lang="fr">Base dédiée à la gestion des Plans de Maintenance.
Il y a une seule base de ce type pour couvrir tous les clients.</description>
      <domain>Impacts</domain>
      <domain>Explanations</domain>
      <domain>Maintenance-Plans</domain>
      <element>da.ibacs.DataChange</element>
      <element>da.ibacs.EntityExternalRef</element>
      <element>da.ibacs.TagTargetTag</element>
   </database>

   <database name="Sew">
      <domain>Impacts</domain>
      <domain>Explanations</domain>
      <domain>Sew</domain>
      <element>da.ibacs.DataChange</element>
      <element>da.ibacs.EntityExternalRef</element>
      <element>da.ibacs.TagTargetTag</element>
   </database>

   <database name="Sf">
      <domain>Impacts</domain>
      <domain>Explanations</domain>
      <domain>SymptomFiltering</domain>
      <element>da.ibacs.DataChange</element>
      <element>da.ibacs.EntityExternalRef</element>
      <element>da.ibacs.TagTargetTag</element>
   </database>
   
   <database name="TechnicalRef">
      <description lang="fr">Base dédiée au stockage de données de référence documentaires.
Les documents peuvent être aussi bien à l'extérieur qu'à l'intérieur d'IBACS.
De même, la nature des documents référencés est libre.
__TODO__</description>
      <domain>Impacts</domain>
      <element>da.ibacs.Attribute</element>
      <element>da.ibacs.AttributeGroup</element>
      <element>da.ibacs.AttributeGroup_Attribute</element>
      <element>da.ibacs.DataChange</element>
      <element>da.ibacs.EntityExternalRef</element>
      <element>da.ibacs.TagTargetTag</element>
      <element>da.ibacs.Tag</element>
      <element>da.ibacs.Metadata</element>
      <element>da.ibacs.MetaEnumValue</element>
      <element>da.ibacs.ExternalRef</element>
      <element>da.ibacs.ExternalRefLocation</element>
      <element>da.ibacs.ExternalRefType</element>
      <element>da.ibacs.ExternalRef_ExternalRefType</element>
   </database>

   <database name="TrblAnalysis">
      <description lang="fr">Base dédiée à la gestion du cœur des études de diagnostic.
 Cette base contient toutes les données nécessaire à l'analyse de testatbilité (AnalysisSet, FailureSet, TrblLruFmNodes...)</description>
      <domain>Impacts</domain>
      <domain>Explanations</domain>
      <domain>Troubleshooting-Analyses</domain>
      <element>da.ibacs.DataChange</element>
      <element>da.ibacs.EntityExternalRef</element>
      <element>da.ibacs.TagTargetTag</element>
   </database>

   <database name="TrblAnalysisRef">
      <description lang="fr">Base dédiée à la gestion du cœur des études de diagnostic.
Elle contient les données de références telles que les ConstituentTemplates et les FailureModes</description>
      <domain>Impacts</domain>
      <domain>Explanations</domain>
      <domain>Troubleshooting-Analyses-Ref</domain>
      <element>da.ibacs.DataChange</element>
      <element>da.ibacs.EntityExternalRef</element>
      <element>da.ibacs.TagTargetTag</element>
   </database>

   <database name="TrblResources">
      <description lang="fr">Base dédiée à la gestion des ressources. Elle contient tous les symptomes ainsi que les modifications</description>
      <domain>Impacts</domain>
      <domain>Troubleshooting-Resources</domain>
      <element>da.ibacs.DataChange</element>
      <element>da.ibacs.EntityExternalRef</element>
      <element>da.ibacs.TagTargetTag</element>
   </database>

   <database name="Workshop">
      <domain>Workshops</domain>
      <domain>Impacts</domain>
      <element>da.ibacs.DataChange</element>
      <element>da.ibacs.EntityExternalRef</element>
      <element>da.ibacs.TagTargetTag</element>
   </database>

   <domain name="Attributes">
      <depends-on>Commons</depends-on>
      <interface type="da.ibacs.Attribuable" referenceable="true">
         <description lang="fr">Interface implémentée par les classes des objets qui peuvent avoir des attributs.</description>
         <method name="getAttributeGroup" type="da.ibacs.business.AttributeGroup"/>
      </interface>

      <element type="da.ibacs.Attribuable_AttributeGroup" read-only="true" definition="SECONDARY" purpose="DOCUMENTATION">
         <description lang="fr">Relation associant un Groupe d'attributs à une entité.</description>
         <type-id name="Attribuable -- AttributeGroup"/>
         <tip role="Entity" type="da.ibacs.Attribuable" multiplicity="*" dependency="DEFINED"/>
         <tip role="AttributeGroup" type="da.ibacs.AttributeGroup" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.Attribute">
         <description lang="fr">Classe d'un attribut.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <id type="da.ibacs.business.ids.AttributeId" implemented-as="String" length="16">
            <description lang="fr">Identificateur d'un attribut.
Correspond au Code.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
            <arg name="TypeName" optional="true"/>
         </constructor>
         <property name="Code" type="String" definition="SECONDARY" read-only="true" length="16">
            <description lang="fr">Sert à identifier un attribut.</description>
         </property>
         <property name="Label" type="String" length="255">
            <description lang="fr">Valeur en clair que l'on associe à chaque attribut.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="EffectiveLabel" type="String" length="255" definition="SECONDARY" read-only="true">
            <description lang="fr">Retour le label s'il est défini, sinon le code.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="TypeName" type="String" length="16" read-only="true">
            <description lang="fr">Sert à identifier un type d'attribut.</description>
         </property>
      </element>

      <element type="da.ibacs.AttributeGroup">
         <description lang="fr">Groupe d'attributs.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <id type="da.ibacs.business.ids.AttributeGroupId" implemented-as="String" length="16">
            <description lang="fr">Identificateur d'un groupe d'attributs.
Correspond au Code.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <property name="Code" type="String" definition="SECONDARY" read-only="true" length="16">
            <description lang="fr">Sert à identifier un groupe d'attributs.</description>
         </property>
         <property name="Label" type="String" length="255">
            <description lang="fr">Valeur en clair que l'on associe à chaque groupe d'attributs.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="EffectiveLabel" type="String" length="255" definition="SECONDARY" read-only="true">
            <description lang="fr">Retour le label s'il est défini, sinon le code.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
      </element>

      <element type="da.ibacs.AttributeGroup_Attribute">
         <description lang="fr">Relation permettant de définir un Groupe d'attributs.</description>
         <type-id name="AttributeGroup -- Attribute"/>
         <tip role="Group" type="da.ibacs.AttributeGroup" multiplicity="*" dependency="DEFINED"/>
         <tip role="Attribute" type="da.ibacs.Attribute" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.EntityAttribute">
         <description lang="fr">Association d'un Attribut à une Entité.
Cette relation porte la valeur de l'attribut (MetaEnumvalue ou String).</description>
         <type-id name="Entity -- Attribute"/>
         <id type="da.ibacs.business.ids.EntityAttributeId" implemented-as="da.ibacs.impl.jpa.EntityAttributeKey">
            <field name="Attribute"/>
            <field name="Entity"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <tip role="Entity" type="da.ibacs.Attribuable" multiplicity="*" navigable="false" dependency="DEFINED"/>
         <tip role="Attribute" type="da.ibacs.Attribute" multiplicity="*" navigable="false" dependency="USED_WEAK"/>
         <property name="Value" type="String" length="255"/>
      </element>

      <element type="da.ibacs.EntityAttribute_EnumValue" definition="SECONDARY">
         <description lang="fr">Association d'une valeur à un attribut.</description>
         <type-id name="EntityAttribute -- MetaEnumValue (EnumValue)"/>
         <life-cycle created-by="AUTO" updated-by="AUTO" removed-by="AUTO"/>
         <tip role="EntityAttribute" type="da.ibacs.EntityAttribute" multiplicity="*" dependency="DEFINED"/>
         <tip role="EnumValue" type="da.ibacs.MetaEnumValue" multiplicity="0..1" navigable="false" dependency="USED_WEAK"/>
      </element>
   </domain>

   <domain name="Business-Refs">
      <description lang="fr">Domaine contenant des données de référence métier.</description>
      <depends-on>Commons</depends-on>
      <depends-on>Impacts-Interface</depends-on>


      <!-- On enleve -->
      <!-- <element type="da.ibacs.Ata" purpose="DOCUMENTATION"> <description lang="fr">Définition d'un code Ata.</description> <description lang="en">Definition of an Ata code.</description> <id type="da.ibacs.business.ids.AtaId"> <description lang="fr">Identificateur du code ATA.</description> </id>
         <constructor name="CONSTRUCTOR"> <arg name="Id"/> </constructor> <property name="Designation" type="String"> <description lang="fr">Désignations associées au code ATA.</description> <index type="da.ibacs.business.Language" name="Language" values="FRENCH ENGLISH"/> </property> </element> -->

      <element type="da.ibacs.Business" dao-hint="EAGER">
         <description lang="fr">Définition d'une Affaire.
Au niveau IBACS, une Affaire est décrite par très peu de choses.
Une Affaire peut être utilisée pour traiter un client potentiel (prospection), selon des hypothèses variées.
C'est le cas avec les Indicateurs et les Plans de Maintenance.</description>
         <description lang="fr">__TODO :__ ajouter composition d'Affaires ?</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.LifeStatusSetter</implements>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.BusinessId" implemented-as="int">
            <description lang="fr">Identification de l'Affaire. Il s'agit d'un autonum.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
            <arg name="StartingDate" optional="true"/>
            <arg name="EndingDate" optional="true"/>
            <arg name="Title" optional="true"/>
         </constructor>
         <property name="LifeStatus" type="da.ibacs.business.enums.EntityLifeStatus" implemented-as="String" length="1" nullable="false" packed="EXTERNAL_TYPE">
            <description lang="fr">État de définition du cycle de vie standard (Vivant, Déprécié, Mort, ...) de l'affaire.</description>
         </property>
         <property name="Comment" type="String" length="1052">
            <description lang="fr">Commentaire explicatif (En français et en anglais) sur l'Affaire.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="StartingDate" type="java.util.Date" date-type="DATE">
            <description lang="fr">Date de début de l'Affaire.</description>
         </property>
         <property name="EndingDate" type="java.util.Date" date-type="DATE">
            <description lang="fr">Date de fin de l'Affaire.</description>
         </property>
         <property name="Title" type="String" length="255">
            <description lang="fr">Titre de l'Affaire.</description>
         </property>
      </element>

      <element type="da.ibacs.Business_Country">
         <description lang="fr">Relation d'association d'une Affaire à un Pays.</description>
         <type-id name="Business -- Country"/>
         <tip role="Business" type="da.ibacs.Business" multiplicity="*" dependency="DEFINED"/>
         <tip role="Country" type="da.ibacs.Country" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.Country" dao-hint="EAGER">
         <description lang="fr">Définition d'un Pays suivant la norme ISO 3166-1.
Une hypothèse forte d'IBACS est qu'une Version est liée à au plus un (normalement un) Pays.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.Describable</implements>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.CountryId" implemented-as="String" length="32">
            <description lang="fr">Identification du Pays.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <property name="Description" type="String" length="255">
            <description lang="fr">Description (En français et en anglais) du Pays.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
      </element>


      <!-- enlevé <element type="da.ibacs.EngineeringZone" purpose="DOCUMENTATION"> <description lang="fr">Zone BE.</description> <id type="da.ibacs.business.ids.EngineeringZoneId"/> </element> -->

      <element type="da.ibacs.Manufacturer">
         <description lang="fr">Définition d'un Fabricant d'articles.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.Describable</implements>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.ManufacturerId" implemented-as="String" length="5">
            <description lang="fr">Identificateur du Fabricant. C'est une chaine de 5 caractères.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <property name="Name" type="String" length="255">
            <description lang="fr">Nom du Fabricant.</description>
         </property>
         <property name="Description" type="String" length="255">
            <description lang="fr">Description (En français et en anglais) du Fabricant.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Validity" type="da.ibacs.business.enums.ManufacturerValidity" implemented-as="String" length="1" packed="EXTERNAL_TYPE">
            <description lang="fr">Validité du Fabricant. Normalement les Fabricants ne sont pas créés dans IBACS.
Ils sont issus d'une application dédiée. Ceux qui proviennent de cette application sont valides par hypothèse.</description>
            <description lang="fr">__TODO :__ dans quels cas invalide ?</description>
         </property>
      </element>

      <element type="da.ibacs.Standard">
         <description lang="fr">Définition d'un Standard Avion (ou plus généralement d'un Standard Système).
Dans le cas du Rafale ce serait par exemple F1, F2, F3, etc.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.Describable</implements>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.StandardId" implemented-as="String" length="255"/>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
            <arg name="SystemType"/>
         </constructor>
         <property name="Description" type="String" length="1052">
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
      </element>

      <element type="da.ibacs.StandardSet" dao-hint="EAGER">
         <description lang="fr">Représente une collection de Standards.
Il s'agit d'un objet valeur, qui ne peut pas être modifié.
Un StandardSet est utilisée à chaque fois qu'il y a besoin de configurer un élément par un ensemble de Standards.</description>
         <life-cycle created-by="REQUEST" updated-by="AUTO" removed-by="AUTO"/>
         <id type="da.ibacs.business.ids.StandardSetId" implemented-as="String" length="255">
            <description lang="fr">Identification d'un Standard set.
Pour en faciliter la lecture, construite par concaténation de la liste ordonnée des identificateurs des Standards.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
      </element>

      <interface type="da.ibacs.StandardSetGetter" purpose="CODE_REUSE">
         <description lang="fr">Interface implémentée par les classes des objets auxquels est associé un ensemble consultable de standards.</description>
         <method name="getStandardSet" type="da.ibacs.business.StandardSet"/>
      </interface>

      <element type="da.ibacs.StandardSet_Standard" read-only="true">
         <description lang="fr">Cette relation sert à définir une Configuration de standards.
L'identificateur de la Configuration doit refléter fidèlement l'ensemble des Standards qui lui sont liées.</description>
         <type-id name="StandardSet -- Standard"/>
         <life-cycle created-by="AUTO" updated-by="AUTO" removed-by="AUTO"/>
         <tip role="StandardSet" type="da.ibacs.StandardSet" multiplicity="*" dependency="DEFINED"/>
         <tip role="Standard" type="da.ibacs.Standard" navigable="false" multiplicity="*" dependency="USED_WEAK"/>
      </element>

      <element type="da.ibacs.Standard_SystemType" read-only="true">
         <description lang="fr">Cette relation sert à décrire à quel Type de Système un Standard correspond.
Elle doit être renseignée lors de la création d'un Standard, et ne peut plus être modifiée par la suite.</description>
         <type-id name="Standard -- SystemType"/>
         <tip role="Standard" type="da.ibacs.Standard" multiplicity="*" dependency="DEFINED"/>
         <tip role="SystemType" type="da.ibacs.SystemType" multiplicity="1" dependency="USED_WEAK"/>
      </element>

      <element type="da.ibacs.SystemType">
         <description lang="fr">Définition d'un Type de Système.
Ce peut être le Rafale, le Mirage 2000, ou autre chose qu'un avion.
Certains Types de Systèmes sont gérés au niveau société et ont un code officiel. Par exemple R pour le Rafale.
Il est possible que l'on ait à créer d'autres Types de Systèmes, spécifiques à IBACS, par exemple pour des optionnels.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.Describable</implements>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.SystemTypeId" implemented-as="String" length="3">
            <description lang="fr">Code IBACS, sur au plus 3 lettres, d'identification du Type de Système.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <property name="Description" type="String" length="255">
            <description lang="fr">Description (En français et en anglais) du Type de Système.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Trigram" type="String" length="3">
            <description lang="fr">Le trigramme du Type de Système sur 3 caractères.</description>
         </property>
      </element>

      <element type="da.ibacs.Unit">
         <description lang="fr">Définition d'une unité de mesure.
Plusieurs systèmes d'unités sont gérables.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.Describable</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.UnitId" implemented-as="String" length="32">
            <description lang="fr">Identification d'une unité.
La première partie correspond au type d'unité (ASL, Indicateur...).
La seconde partie est le code de l'unité (MN, HR...)</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <static name="INDICATOR_UNIT_TYPE" type="da.ibacs.business.UnitType.Value" value="UnitType.INSTANCE.createOrFind(&quot;IndicatorUnit&quot;)"/>
         <static name="LSA_UNIT_TYPE" type="da.ibacs.business.UnitType.Value" value="UnitType.INSTANCE.createOrFind(&quot;LsaUnit&quot;)"/>
         <static name="EACH_ID" type="da.ibacs.business.ids.UnitId" value="UnitId.create(LSA_UNIT_TYPE,&quot;EA&quot;)"/>
         <static name="MINUTE_UNIT_ID" type="da.ibacs.business.ids.UnitId" value="UnitId.create(LSA_UNIT_TYPE,&quot;MN&quot;)"/>
         <static name="HOUR_UNIT_ID" type="da.ibacs.business.ids.UnitId" value="UnitId.create(LSA_UNIT_TYPE,&quot;HR&quot;)"/>
         <static name="MAN_MINUTE_UNIT_ID" type="da.ibacs.business.ids.UnitId" value="UnitId.create(LSA_UNIT_TYPE,&quot;MAN.MN&quot;)"/>
         <static name="MAX_UNIT_ID" type="da.ibacs.business.ids.UnitId" value="UnitId.create(LSA_UNIT_TYPE,&quot;MAX&quot;)"/>
         <property name="Description" type="String" length="255">
            <description lang="fr">Description de l'unité de mesure.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
      </element>

      <element type="da.ibacs.Version">
         <description lang="fr">Définition d'une Version de Système.
Une version a un identificateur société et un nom d'usage.
Par exemple, la version M du Rafale (nom d'usage) a pour clé société RAM.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.Describable</implements>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.VersionId" implemented-as="String" length="6">
            <description lang="fr">Identificateur société de la Version.
Cet identificateur est 'absolu' pour Dassault. Il est globalement unique et implique donc un type de Système.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
            <arg name="SystemType"/>
            <arg name="MarketingCode" optional="true"/>
         </constructor>
         <property name="LifeStatus" type="da.ibacs.business.enums.EntityLifeStatus" implemented-as="String" length="1" nullable="false" packed="EXTERNAL_TYPE">
            <description lang="fr">État de définition du cycle de vie de la version (Vivant, Déprécié, Mort, ...) de la version.</description>
         </property>
         <property name="ContractStatus" type="da.ibacs.business.enums.ContractStatus" implemented-as="String" length="1" nullable="false" packed="EXTERNAL_TYPE">
            <description lang="fr">Indique s'il s'agit d'une version de prospection.</description>
         </property>
         <property name="Description" type="String" length="255">
            <description lang="fr">Description (En français et en anglais) de la Version.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="MarketingCode" type="String" length="6">
            <description lang="fr">Nom officiel de la version.
Par exemple M, B ou C pour le Rafale France.</description>
         </property>
         <property name="Priority" type="int" nullable="false">
            <description lang="fr">The priority order to display versions</description>
         </property>
      </element>

      <element type="da.ibacs.VersionSet" dao-hint="EAGER">
         <description lang="fr">Représente une collection de Versions.
Il s'agit d'un objet valeur, qui ne peut pas être modifié.
Un VersionSet est utilisée à chaque fois qu'il y a besoin de configurer un élément par un ensemble de Versions.</description>
         <life-cycle created-by="REQUEST" updated-by="AUTO" removed-by="AUTO"/>
         <id type="da.ibacs.business.ids.VersionSetId" implemented-as="String" length="255">
            <description lang="fr">Identification d'un VersionSet.
Pour en faciliter la lecture, construite par concaténation de la liste ordonnée des identificateurs des versions.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
      </element>

      <interface type="da.ibacs.VersionSetGetter" purpose="CODE_REUSE">
         <description lang="fr">Interface implémentée par les classes des objets auxquels est associé un ensemble consultable de versions.</description>
         <method name="getVersionSet" type="da.ibacs.business.VersionSet"/>
      </interface>

      <interface type="da.ibacs.VersionSetSetter" purpose="CODE_REUSE">
         <description lang="fr">Interface implémentée par les classes des objets auxquels est associé un ensemble modifiable de versions.</description>
         <extends>da.ibacs.VersionSetGetter</extends>
         <method name="setVersionSet" type="void">
            <arg name="value" type="da.ibacs.business.VersionSet"/>
         </method>
      </interface>

      <element type="da.ibacs.VersionSet_Version" read-only="true">
         <description lang="fr">Cette relation sert à définir les Versions qui constituent un Ensemble de Versions.
L'identificateur de l'Ensemble de Versions doit refléter fidèlement l'ensemble des Versions qui lui sont liées.</description>
         <type-id name="VersionSet -- Version"/>
         <life-cycle created-by="AUTO" updated-by="AUTO" removed-by="AUTO"/>
         <tip role="VersionSet" type="da.ibacs.VersionSet" multiplicity="*" dependency="DEFINED"/>
         <tip role="Version" type="da.ibacs.Version" navigable="false" multiplicity="*" dependency="USED_WEAK"/>
      </element>

      <element type="da.ibacs.VersionStandard">
         <description lang="fr">Cette relation sert à définir une paire (Version, Standard) valide.</description>
         <type-id name="VersionStandard"/>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.VersionStandardId" implemented-as="da.ibacs.impl.jpa.VersionStandardKey">
            <field name="Standard"/>
            <field name="Version"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <tip role="Version" type="da.ibacs.Version" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
         <tip role="Standard" type="da.ibacs.Standard" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
         <property name="RankApplicability" type="da.RangeSet" implemented-as="String" length="30">
            <description lang="fr">Plage de rangs pour lesquels cette association est valide.</description>
         </property>
      </element>

      <element type="da.ibacs.Version_Country">
         <description lang="fr">Cette relation sert à indiquer à quel Pays correspond une Version.
Dans les hypothèses IBACS (en fait Dassault Aviation), une Version est associée à un et un seul Pays.</description>
         <type-id name="Version -- Country"/>
         <tip role="Version" type="da.ibacs.Version" multiplicity="*" dependency="DEFINED"/>
         <tip role="Country" type="da.ibacs.Country" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.Version_SystemType" read-only="true">
         <description lang="fr">Cette relation sert à décrire à quel Type de Système une Version correspond.
Elle doit être renseignée lors de la création d'une Version, et ne peut plus être modifiée par la suite.</description>
         <type-id name="Version -- SystemType"/>
         <life-cycle created-by="USER" updated-by="NOBODY" removed-by="NOBODY"/>
         <tip role="Version" type="da.ibacs.Version" multiplicity="*" dependency="DEFINED"/>
         <tip role="SystemType" type="da.ibacs.SystemType" multiplicity="1" dependency="USED_WEAK"/>
      </element>

      <element type="da.ibacs.WorkshopType">
         <description lang="fr">Définition d'un Type d'Atelier.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.Describable</implements>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.WorkshopTypeId" implemented-as="int">
            <description lang="fr">Identification du Type d'Atelier.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
         </constructor>
         <property name="Name" type="String" length="128">
            <description lang="fr">Nom du Type d'Atelier.</description>
         </property>
         <property name="Description" type="String" length="255">
            <description lang="fr">Description (En français et en anglais) du Type d'Atelier.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
      </element>
   </domain>

   <domain name="Commons">
      <element type="da.ibacs.DataChange" dao-hint="LAZY">
         <description lang="fr">Objet technique utilisé pour mémoriser des informations limitées sur le cycle de vie de certains objets.
En pratique, pour un objet et pour un utilisateur donnés, au plus 1 événement peut être stockés chaque jour.
Seule la date de la dernière modification (du jour et par utilisateur) est conservée.
De plus, on ne stocke aucun détail sur la nature des changements.
Ce mécanisme ne permet donc pas de dire quel attribut a changé. Il ne permet même pas de dire qu'un attribut a changé !
En effet, quand on touche à une relation, c'est sur un des objets liés par cette relation que l'événement est généré.
Le détail de l'historique des modifications est géré par un autre mécanisme : l'export textuel des bases et la mise en configuration de cet export, dans un outil dédié.</description>
         <life-cycle created-by="AUTO" updated-by="AUTO" removed-by="NOBODY"/>
         <id type="da.ibacs.business.ids.DataChangeId" implemented-as="da.ibacs.impl.jpa.DataChangeKey">
            <description lang="fr">L'identification d'un datachange est la composition de la cible du datachange, de la date, du type de changement et de l'id de l'utilisateur.</description>
            <field name="Target"/>
            <field name="Day"/>
            <field name="DataChangeType"/>
            <field name="UserId"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <tip role="Target" type="da.ibacs.DataChangeTarget" multiplicity="*" navigable="false" dependency="DEFINED">
            <description lang="fr">Identification de l'objet auquel se rapporte l'événement.</description>
         </tip>
         <property name="Day" type="java.util.Date" date-type="DATE" read-only="true">
            <description lang="fr">Date (Année + Mois + Jour) de l'événement.</description>
         </property>
         <property name="DataChangeType" type="da.ibacs.business.enums.DataChangeType" implemented-as="String" length="16" read-only="true">
            <description lang="fr">Type de l'événement (Création, Modification ou Destruction).</description>
         </property>
         <property name="UserId" type="da.users.UserId" implemented-as="String" length="16" read-only="true">
            <description lang="fr">Identification de la personne à l'origine de l'événement.</description>
         </property>
         <property name="LastModified" type="java.util.Date" date-type="TIME">
            <description lang="fr">Heure (Heure + Minutes + Secondes) de l'événement dans la journée.</description>
         </property>
         <property name="FullDate" type="java.util.Date" date-type="TIMESTAMP" definition="SECONDARY" read-only="true">
            <description lang="fr">Datation complète de l'événement. Issue de sa date et de son heure.</description>
         </property>
      </element>

      <interface type="da.ibacs.DataChangeTarget" referenceable="true">
         <description lang="fr">Interface implémentée par les classes des objets qui ont des DataChanges.</description>
      </interface>

      <interface type="da.ibacs.Describable" purpose="CODE_REUSE">
         <description lang="fr">Interface implémentée par les classes des objets qui ont une description modifiable.</description>
         <extends>da.ibacs.Described</extends>
         <method name="setDescription" type="void">
            <description lang="fr">Modification de la description dans une langue donnée.</description>
            <arg name="language" type="da.ibacs.business.Language"/>
            <arg name="value" type="String"/>
         </method>
      </interface>

      <interface type="da.ibacs.Described" purpose="CODE_REUSE">
         <description lang="fr">Interface implémentée par les classes des objets qui ont une description consultable.</description>
         <method name="getDescription" type="String">
            <description lang="fr">Récupération de la description dans une langue donnée.</description>
            <arg name="language" type="da.ibacs.business.Language"/>
         </method>
      </interface>

      <interface type="da.ibacs.LifeStatusGetter" purpose="CODE_REUSE">
         <description lang="fr">Interface implémentée par les classes des objets qui ont un statut générique de cycle de vie consultable.</description>
         <method name="getLifeStatus" type="da.ibacs.business.enums.EntityLifeStatus">
            <description lang="fr">Récupération du statut.</description>
         </method>
      </interface>

      <interface type="da.ibacs.LifeStatusSetter" purpose="CODE_REUSE">
         <description lang="fr">Interface implémentée par les classes des objets qui ont un statut générique de cycle de vie modifiable.</description>
         <extends>da.ibacs.LifeStatusGetter</extends>
         <method name="setLifeStatus" type="void">
            <description lang="fr">Modification du statut.</description>
            <arg name="status" type="da.ibacs.business.enums.EntityLifeStatus"/>
         </method>
      </interface>

      <element type="da.ibacs.MetaEnumValue">
         <description lang="fr">Il s'agit d'une entité permettant de définir des listes de choix multiples configurables.</description>
         <description lang="fr">__TODO__ Renommer en EnumValue ?</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <id type="da.ibacs.business.ids.MetaEnumValueId" implemented-as="String" length="100">
            <description lang="fr">Identificateur d'un élément de liste.
Correspond au couple (TypeName, Code), c'est-à-dire (Identifiant de liste, Identifiant d'élément dans la liste).</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <static name="META_ENUM_ATA_CHAPTER" type="da.ibacs.business.MetaEnumType.Value" value="MetaEnumType.INSTANCE.createOrFind(&quot;AtaChapter&quot;)">
            <description lang="fr">Type énuméré correspondant aux chapitres ATA.</description>
         </static>
         <static name="META_ENUM_USE_PROFILE" type="da.ibacs.business.MetaEnumType.Value" value="MetaEnumType.INSTANCE.createOrFind(&quot;UseProfile&quot;)"/>
         <property name="TypeName" type="String" definition="SECONDARY" read-only="true" length="16">
            <description lang="fr">Sert à identifier une liste.</description>
         </property>
         <property name="Code" type="String" definition="SECONDARY" read-only="true" length="16">
            <description lang="fr">Sert à identifier un élément d'une liste.</description>
         </property>
         <property name="Label" type="String" length="255">
            <description lang="fr">Valeur en clair que l'on associe à chaque élement d'une liste.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="EffectiveLabel" type="String" length="255" definition="SECONDARY" read-only="true">
            <description lang="fr">Retour le label s'il est défini, sinon le code.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
      </element>

      <element type="da.ibacs.Metadata">
         <description lang="fr">Entité technique permettant d'associer une chaine de caractères à une clé.
L'interprétation de la clé et de la valeur ne sont pas définies a priori.
Peut être utilisé par exemple pour stocker une date de livraison, une version d'import, etc.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <id type="da.ibacs.business.ids.MetadataId" implemented-as="String" length="64">
            <description lang="fr">Identification de la méta information : c'est sa clé.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <property name="Value" type="String" length="1024">
            <description lang="fr">Valeur associée à la clé.</description>
         </property>
      </element>

      <interface type="da.ibacs.OriginGetter" purpose="CODE_REUSE"/>

      <element type="da.ibacs.Tag">
         <description lang="fr">Une Étiquette est un objet technique associable à n'importe quel objet métier.
Sur le principe, une Étiquette ressemble à ce qui est utilisé dans les logiciels de classement de photos.
On peut définir autant d'Étiquettes que nécessaire, en leur donnant un nom approprié, et en associer autant que nécessaire aux objets métier.
Cela permet ensuite de retrouver les objets métier portant une Étiquette donnée.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.Describable</implements>
         <id type="da.ibacs.business.ids.TagId" implemented-as="String" length="10">
            <description lang="fr">Identification de l'Étiquette.
Ce peut être une chaine relativement quelconque.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <property name="Description" type="String" length="255">
            <description lang="fr">Description (En français et en anglais) de l'Étiquette.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
      </element>

      <interface type="da.ibacs.TagTarget" referenceable="true">
         <description lang="fr">Interface implémentée par les entités auxquelles on peut associer une Etiquette.</description>
      </interface>

      <element type="da.ibacs.TagTargetTag" dao-hint="LAZY">
         <description lang="fr">Association d'une Étiquette à un Objet Etiqueté.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="USER"/>
         <id type="da.ibacs.business.ids.TagTargetTagId" implemented-as="da.ibacs.impl.jpa.TagTargetTagKey">
            <description lang="fr">Identification de la relation entre Etiquette et Object Etiqueté.</description>
            <field name="Tag"/>
            <field name="TagTarget"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <tip role="TagTarget" type="da.ibacs.TagTarget" multiplicity="*" dependency="DEFINED" navigable="false"/>
         <tip role="Tag" type="da.ibacs.Tag" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>

      <interface type="da.ibacs.Titled" purpose="CODE_REUSE">
         <description lang="fr">Interface implémentée par les classes des objets qui ont un titre modifiable français/anglais.</description>
      </interface>
   </domain>

   <domain name="Configuration" prefix="Cfg">
      <description lang="fr">1) Ce domaine contient ce qui permet de définir une Applicabilité et une Politique de Configuration associée.  
Une Applicabilité est une Expression construite à base de Propriétés et de Valeurs.  
On a représenté uniquement pour information la manière dont une Expression est construite.  
En pratique, la structure des Expressions ne sera pas exposée en base.

2) Le Domaine Configuration contient aussi les concepts de base utilisés pour définir les Applicabilités :
    - les Propriétés,
    - les Types.

On considère qu'un Produit (ex. Rafale) est caractérisé par des Propriétés (ex. Rang, Version, Standard, ...).
Chaque Propriété d'une instance de Produit (ex. Rafale 201, Rafale 2012, ...) est valorisée avec une Valeur choisie parmi toutes celles possibles.
Un Type est un ensemble de Valeurs possibles d'une Propriété.
Seuls les Types discrets sont utilisés pour gérer les Applicabilités.
- Les Types énumérés sont des Types discrets définis en extension, en listant explicitement toutes les valeurs possibles.
- Le Types entiers sont des Types discrets définis en intension (par définition).

Un Type peut être nommé ou anonyme.
- Un Type nommé est autonome et est utilisable pour typer plusieurs Propriétés.
- Un Type anonyme est défini dans le cadre d'une Propriété et n'est utilisé que pour typer cette Propriété.

3) Domaine dédié aux configurations pour NewAppro.
   CfgProperty, CfgType(CfgEnumeratedType et CfgNaturalType), CfgTypeRef.
      </description>
      <description lang="en">This domain manages all entities involved in an APPLICABILITY and a associated Configuration.
An Applicability is an expression built form Properties and values.
The structure of expression is NOT exposed in the database.</description>
      <depends-on>Commons</depends-on>


      <interface type="da.business.expressions.policies.Alias" external="true" purpose="CODE_REUSE">
         <!-- THM 16/01/2017 GENERATE_OK -->
         <!--
            THM 16/01/2017 Je ne sais p as à quoi peut servir ce espace de déclaration, car les méthodes sont déjà décrites en java dans Alias.java
            Une subtilité que je dois voir avec Guillaume ou Damien..
            Question: Peut-être peut on décrire un einterface comme ça en XML. Pourquoi pas, on peut tout faire avec XML ...
            <method name="getName" type="String"/>
            <method name="getExpression" type="da.business.expressions.Expression"/>
            <method name="dansTonpopotinTest" type="Integer"/>
         -->
         <!-- TODO -->
      </interface>

      <interface type="da.business.expressions.policies.EnumeratedType" external="true" purpose="CODE_REUSE">
         <!-- TODO -->
      </interface>

      <interface type="da.business.expressions.policies.EnumerationValue" external="true" purpose="CODE_REUSE">
         <!-- TODO -->
      </interface>

      <interface type="da.business.expressions.policies.NaturalType" external="true" purpose="CODE_REUSE">
         <!-- TODO -->
      </interface>

      <interface type="da.business.expressions.policies.Policy" external="true" purpose="CODE_REUSE">
         <!-- THM 16/01/2017 GENERATE_OK??? -->
         <!-- TODO -->
      </interface>

      <interface type="da.business.expressions.policies.Property" external="true" purpose="CODE_REUSE">
         <!-- TODO -->
      </interface>

      <interface type="da.business.expressions.policies.Registry" external="true" purpose="CODE_REUSE">
         <!-- TODO -->
      </interface>

      <interface type="da.business.expressions.policies.Type" external="true" purpose="CODE_REUSE">
         <!-- TODO -->
      </interface>


      <element type="da.ibacs.CfgAlias">
         <description lang="fr">Expression Nommée, réutilisable pour construire d'autres Expressions (via les Macros).  
Elle est définie par  (un Nom + une Expression).  
Exemples de CfgAlias :
- Nom--> "Rafale France"      Expression --> "Version = M ou Version = B ou Version = C"
- nom--> "Rafale Export"      Expression --> "Version != M et Version != B et Version != C" (en logique négative, si on l'autorise)
- nom--> "Rafale Monoplace"   Expression --> "Version = M ou Version = C ou Version = EM"
- nom--> "Rafale Biplace"     Expression --> "Version = B ou Version = DM"

En utilisant les opérateurs ensemblistes, on pourrait également écrire (@ représentant le symbole d'appartenance) :
- Rafale France ::= Version @ {M, B, C}
- Rafale Export ::= Version !@ {M, B, C} (en logique négative, si on l'autorise)
- Rafale Monoplace ::= Version @ {M, C, EM}
- Rafale Biplace ::= Version @ {B, DM}</description>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.business.expressions.policies.Alias</implements>
         <id type="da.ibacs.business.ids.CfgAliasId" implemented-as="String" length="70"/>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
            <arg name="Registry"/>
         </constructor>
         <tip role="Registry" type="da.ibacs.CfgRegistry" multiplicity="*"/>
         <property name="Name" type="String" definition="SECONDARY" length="100" read-only="true" persistence="TRANSIENT">
            <description lang="fr">Nom donné à l'Expression. Doit être unique.</description>
            <description lang="en">Name of Expression. Must ne unique.</description>
         </property>
         <property name="Expression" type="da.business.expressions.Expression" implemented-as="String" length="1024">
            <description lang="fr">Expression associée au nom.</description>
         </property>
         <property name="Comment" type="String" length="256">
            <description lang="fr">Commentaire explicatif sur l'expression.</description>
            <description lang="en">Describe the named expression.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
      </element>

      <element type="da.ibacs.CfgAssertion">
         <description lang="fr">Assertion, définie dans le cadre d'un Régistre de Configuration.</description>
         <description lang="en">Assertion, defined in a Configuraton Registry.</description>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <id type="da.ibacs.business.ids.CfgAssertionId" implemented-as="int"/>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
            <arg name="Registry"/>
         </constructor>
         <tip role="Registry" type="da.ibacs.CfgRegistry" multiplicity="*" dependency="DEFINED"/>
         <property name="Expression" type="da.business.expressions.Expression" implemented-as="String" length="1024">
            <description lang="fr">Expression associée à l'Assertion.</description>
         </property>
         <property name="Comment" type="String" length="256">
            <description lang="fr">Commentaire explicatif sur l'Assertion.</description>
            <description lang="en">Describe the Assertion.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
      </element>


      <interface type="da.ibacs.CfgConfigurable" referenceable="true">
         <description lang="fr">Interface implémentée par les objets configurables, ceux auxquels on peut associer une Applicabilité.</description>
         <property name="Applicability" type="da.business.expressions.Expression">
            <description lang="fr">Applicabilité de l'objet configurable.</description>
         </property>
      </interface>

      <element type="da.ibacs.CfgEnumeratedType" extends="da.ibacs.CfgType" discriminator="ENU">
         <description lang="fr">Définition en extension des valeurs d'un type énuméré.</description>
         <description lang="en">Défine in extension values from an Enumarated type.</description>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.business.expressions.policies.EnumeratedType</implements>
         <id type="da.ibacs.business.ids.CfgEnumeratedTypeId" implemented-as="String"/>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
         </constructor>
         <method name="getValues" type="Iterable&lt;? extends da.business.expressions.policies.EnumerationValue&gt;"/>
         <method name="getValue" type="EnumerationValue">
            <arg name="literal" type="String"/>
         </method>

      </element>

      <element type="da.ibacs.CfgEnumerationValue">
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.business.expressions.policies.EnumerationValue</implements>
         <id type="da.ibacs.business.ids.CfgEnumerationValueId" implemented-as="String"/>
         <constructor name="CONSTRUCTOR">
            <arg name="Id"/> 
            <arg name="Type"/>
            <arg name="Literal" optional="true"/>
            <arg name="ShortLiteral" optional="true"/>
            <arg name="Ordinal" optional="true"/>
         </constructor>

         <tip role="Type" type="da.ibacs.CfgEnumeratedType" multiplicity="*" navigable="true"/>
         <property name="Literal" type="String" length="32"/>
         <property name="ShortLiteral" type="String" length="16"/>
         <property name="Ordinal" type="int"/>
         <!--<method name="isValidValue" type="boolean">
            <arg name="literal" type="String"/>
            </method>
         -->
      </element>


      <element type="da.ibacs.CfgNaturalType" extends="da.ibacs.CfgType" discriminator="NAT">
         <description lang="fr">Définition en intension des valeurs d'un type naturel, sous forme d'intervale.</description>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.business.expressions.policies.NaturalType</implements>
         <id type="da.ibacs.business.ids.CfgNaturalTypeId" implemented-as="String"/>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
         </constructor>
         <property type="int" name="Min">
            <description lang="fr">Valeur minimale autorisée.</description>
         </property>
         <property type="int" name="Max">
            <description lang="fr">Valeur maximale autorisée.</description>
         </property>
         <method name="getRanges" type="Iterable&lt;? extends da.business.expressions.policies.NaturalRange&gt;"/>
         <method name="isValidValue" type="boolean">
            <arg name="value" type="int"/>
         </method>
         <method name="isValidRange" type="boolean">
            <arg name="value" type="da.business.expressions.policies.NaturalRange"/>
         </method>
      </element>

      <element type="da.ibacs.CfgPolicy">
         <description lang="fr">Politique de Configuration.  
Elle est définie par :
- Un ensemble de Propriétés que les Expressions conformes à la Politique peuvent utiliser.
- Des contraintes (assertions) que les Expressions conformes à la Politique doivent respecter.
- Des restrictions sur les opérateurs que les Expressions conformes à la Politique peuvent utiliser.
Par exemple, on peut vouloir interdire l'utilisation de la négation dans Applicabilités.</description>
         <description lang="en">Configuration Policy.  
A CfgPolicy is defined:
- A set of properties that each Expression, according to Policy, can use.
- A set of constraints (assertions) that each Expression according to the policy, must respect.</description>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.business.expressions.policies.Policy</implements>
         <id type="da.ibacs.business.ids.CfgPolicyId" implemented-as="int"/>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
            <arg name="Registry"/>
         </constructor>
         <tip role="Registry" type="da.ibacs.CfgRegistry" multiplicity="*"/>
         <!-- <tip type="da.ibacs.CfgRegistry" role="Registry" multiplicity="*" dependency="DEFINED"/> -->
         <property name="Name" type="String" length="100"/>
         <property name="MustBeInDisjunctiveNormalForm" type="boolean"/>
         <property name="MustFollowValuesOrder" type="boolean"/>
         <property name="MustFollowPropertiesOrder" type="boolean"/>
         <property name="CanUseNegation" type="boolean"/>
         <property name="CanUseDeepTautology" type="boolean"/>
         <property name="CanUseContradiction" type="boolean"/>
         <property name="CanUseImplicationOrEquivalence" type="boolean"/>
      </element>


      <element type="da.ibacs.CfgPolicy_AllowedType">
         <description lang="fr">Relation permettant de définir l'ensemble des Types utilisables par une Politique de Configuration.</description>
         <tip role="Policy" type="da.ibacs.CfgPolicy" multiplicity="*" dependency="DEFINED"/>
         <tip role="AllowedType" type="da.ibacs.CfgType" multiplicity="*" navigable="false" dependency="USED_WEAK"/>
      </element>

      <element type="da.ibacs.CfgPolicy_ExplicitlyAllowedProperty">
         <description lang="fr">Relation permettant de définir l'ensemble des Propriétés utilisables par une Politique de Configuration.</description>
         <description lang="en">Relationship defining the set of Properties that a Configuration's Policy can use.</description>
         <tip role="Policy" type="da.ibacs.CfgPolicy" multiplicity="*" dependency="DEFINED"/>
         <tip role="ExplicitlyAllowedProperty" plural="ExplicitlyAllowedProperties" type="da.ibacs.CfgProperty" multiplicity="*" navigable="false" dependency="USED_WEAK"/>
      </element>

      <element type="da.ibacs.CfgProperty">
         <description lang="fr">Propriété pour la configuration New Appro. Elle a un Type, nommé ou anonyme.</description>
         <description lang="en">Property for Config of New Appro. It has a Type, nammed or anonymous.</description>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.business.expressions.policies.Property</implements>
         <id type="da.ibacs.business.ids.CfgPropertyId" implemented-as="String" length="32">
            <description lang="fr">Identificateur de notre Propriété.</description>
            <description lang="en">Id of our property.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
            <arg name="Registry"/>
            <arg name="Type"/>
         </constructor>
         <tip role="Registry" type="da.ibacs.CfgRegistry" multiplicity="*" navigable="true" dependency="DEFINED"/>
         <tip role="Type" type="da.ibacs.CfgType" multiplicity="*" navigable="false" dependency="USED_WEAK"/>
         <property name="Comment" type="String" length="2048">
            <description lang="fr">Texte explicatif sur notre Propriété.</description>
            <description lang="en">Exlains our Property.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Group" type="String" definition="SECONDARY" read-only="true" length="100" persistence="TRANSIENT">
            <description lang="fr">Contexte de la Propriété (dérivé de Id).
Permet de differencier des Proriétés de meêm nom (local) utilisées dans des programmes différents.</description>
         </property>
         <property name="Name" type="String" definition="SECONDARY" read-only="true" length="100" persistence="TRANSIENT">
            <description lang="fr">Nom de la Propriété (dérivé de Id).
Exemple, "Rang" ou "Version" ou "Standard" ou "StatutFicheMod".</description>
            <description lang="fr">__TOOD__ Prise en compte du fait que 2 programmes peuvent vouloiir utiliser le même nom local de propriété, avec 2 significations differentes.
Notion de cointext ?</description>
         </property>
      </element>

      <element type="da.ibacs.CfgRegistry">
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.business.expressions.policies.Registry</implements>
         <id type="da.ibacs.business.ids.CfgRegistryId" implemented-as="int"/>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
         </constructor>

         <property name="Name" type="String" length="100"/>
      </element>

      <!-- <element type="da.ibacs.CfgRegistry_Policy">
         <description lang="fr">Relation permettant d'associer des Policy à un Registry.
         Un Article appartient à au plus un Groupe de Composition.</description>
         <tip role="Registry" type="da.ibacs.CfgRegistry" multiplicity="0..1" dependency="DEFINED"/>
         <tip role="Policy" type="da.ibacs.CfgPolicy" multiplicity="*" dependency="USED_WEAK">
         </tip>
         </element>
      -->

      <element type="da.ibacs.CfgType" abstract="true" inheritance-strategy="JOINED" discriminator-length="3">
         <description lang="fr">Type de Propriété. C'est un ensemble de Valeurs possibles de Propriétés.
- Il peut être nommé ou anonyme.  
- Il peut être défini en extension (Type énuméré:CfgEnumeratedType) ou en intension (Type entier:CfgNaturalType).    
- Un Type nommé (anonymous=false) peut servir à typer plusieurs Propriétés. 

A l'opposé, un Type anonyme (anonymous=true) est associé à une seule Propriété.  
Exemples de Types de Propriétés :
- Rang ::= [1..999]  
- Version ::= { M, B, C, DM, EM, ... }
- Standard ::= { F1, F2, F3, ...}
- Statut de Fiche de Modification ::= { Non Applicable, Applicable, Appliqué, Non Appliqué }

Exemples de Propriétés :
- Rang : Rang 
- Version : Version
- Standard : Standard
- M1 : Statut de Fiche de Modification
- M2 : Statut de Fiche de Modification
- M2 : Statut de Fiche de Modification
- Les types Rang, Version et Standard n'ont peut-être pas d'autre utilisation que pour les propriétés Rang, Version et Standard.  

On pourrait donc les considérer comme des types anonymes.  
En revanche, le type Statut de Fiche de Modification a plusieurs emplois et doit donc être considéré comme un type nommé.  
Cette différence nommé / anonyme se manifeste dans la manière de déclarer les choses.  

Sous une forme textuelle on aurait :
- FicheModification ::= { Non Applicable, Applicable, Appliqué, Non Appliqué }
- Rang : [1..999]
- Version : { M, B, C, DM, EM, ... }
- Standard : { F1, F2, F3, ...}
- M1 : Fiche de Modification
- M2 : Fiche de Modification
- M2 : Fiche de Modification

Un Type peut correspondre à une Référence définie par ailleurs. 
Dans ce cas, l'ensemble des valeurs du Type doit correspondre à celui de sa Référence.
__Note :__ Il doit être possible d'unifier Type et TypeRef.</description>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.business.expressions.policies.Type</implements>
         <implements>da.ibacs.TagTarget</implements>
         <id type="da.ibacs.business.ids.CfgTypeId" implemented-as="String" length="100">
            <description lang="fr">Identification du type de Configuration. Peut etre Enumere(CfgEnumeratedTypeId) ou entier(CfgNaturalTypeId).</description>
            <description lang="en">Identification of the type of Configuration. Can either be Enumerated/Explicte(CfgEnumeratedTypeId) or Integer/implicit(CfgNaturalTypeId).</description>
         </id>
         <property name="Name" type="String" length="32">
            <description lang="fr">Nom de ce CfgType</description>
            <description lang="en">Name of this CfgType</description>
         </property>
         <property name="Definition" type="String" read-only="true" definition="SECONDARY" persistence="TRANSIENT"/>
         <method name="isValidValue" type="boolean">
            <arg name="literal" type="String"/>
         </method>
      </element>
   </domain>


   <domain name="Doc">
      <description lang="fr">Domaine dédié à la documentation.</description>
      <depends-on>Business-Refs</depends-on>
      <depends-on>Commons</depends-on>
      <depends-on>Impacts-Interface</depends-on>
      <depends-on>Troubleshooting-Interface</depends-on>

      <element type="da.ibacs.DataModule">
         <description lang="fr">Représentant dans IBACS d'un Module Documentaire.
Au niveau IBACS ces objets sont uniquement consultables.
On ne stocke que peu de choses sur un DocModule : son identifiant, sont titre et quelques autres informations.
Le vrai DocModule n'est pas géré dans IBACS. Son représentant permet d'établir des liens avec d'autres objets du soutien.</description>
         <life-cycle created-by="AUTO" updated-by="AUTO" removed-by="AUTO"/>
         <implements>da.ibacs.DocModule</implements>
         <implements>da.ibacs.VersionSetGetter</implements>
         <implements>da.ibacs.StandardSetGetter</implements>
         <implements>da.ibacs.LifeStatusGetter</implements>
         <implements>da.ibacs.OriginGetter</implements>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.DataModuleId" implemented-as="String" length="30">
            <description lang="fr">Identification du DataModule.
Il s'agit d'une chaine de caractères de longueur fixe, contenant plusieurs sections (Modèle, Variant, Chapitre ATA, ...).
Correspond au DMC (DataModule Code)</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <static name="META_ENUM_RPC" type="da.ibacs.business.MetaEnumType.Value" value="MetaEnumType.INSTANCE.createOrFind(&quot;DocModuleRpc&quot;)">
            <description lang="fr">Cf. relation DocModule_Rpc</description>
         </static>
         <property name="LifeStatus" type="da.ibacs.business.enums.EntityLifeStatus" implemented-as="String" length="1" definition="SECONDARY" read-only="true" nullable="false">
            <description lang="fr">État de définition du cycle de vie standard (Vivant, Déprécié, Mort, ...) du DocModule.</description>
         </property>
         <property name="Origin" type="da.ibacs.business.enums.EntityOrigin" implemented-as="String" length="1" nullable="false">
            <description lang="fr">État unifié IBACS de l'origine du DocModule.</description>
         </property>
         <property name="Language" type="da.ibacs.business.Language" implemented-as="String" length="2" nullable="false">
            <description lang="fr">Langue du data module.</description>
         </property>
         <property name="Dtd" type="da.ibacs.business.enums.DataModuleDtd" implemented-as="String" length="9" packed="EXTERNAL_TYPE">
            <description lang="fr">Type de la DTD du DocModule (Description, Procedural, ...).</description>
         </property>
         <property name="InfoName" type="String" length="255">
            <description lang="fr">Définit le type d’information en cohérence avec le code d'information du DMC (caractères 13 à 15)</description>
         </property>
         <property name="TechName" type="String" length="255">
            <description lang="fr">Caractérise le sujet et est normalement cohérent avec le code sujet du DMC (caractères 1 à 12). </description>
         </property>
         <property name="IssueNumberType" type="da.ibacs.business.enums.DataModuleIssueNumberType" implemented-as="String" length="1" packed="EXTERNAL_TYPE">
            <description lang="fr">Statut du DocModule (Deleted, New, ...).</description>
         </property>
         <property name="IssueNumber" type="int">
            <description lang="fr">N° de révision du DM</description>
         </property>
         <property name="Restriction" type="da.ibacs.business.enums.DataModuleRestriction" implemented-as="String" length="24" packed="EXTERNAL_TYPE">
            <description lang="fr">Spécial France (PARTIEL, TOTAL)</description>
         </property>
         <property name="Security" type="da.ibacs.business.enums.DataModuleSecurity" implemented-as="String" length="2" packed="EXTERNAL_TYPE">
            <description lang="fr">Classification</description>
         </property>
         <property name="Airworthiness" type="boolean">
            <description lang="fr">DM impactant la Navigabilité</description>
         </property>
         <property name="NuclearSafety" type="boolean">
            <description lang="fr">DM impactant la sureté nucléaire</description>
         </property>
      </element>

      <element type="da.ibacs.DataModuleInterLink" dao-hint="LAZY">
         <description lang="fr">Relation permettant de décrire les liens (appels) entre Modules Documentaires.
Ces liens sont automatiquement extraits de l'analyse de la documentation.
Tout comme le reste des éléments documentaires, ils sont uniquement consultables dans IBACS.</description>
         <type-id name="DataModule -- DataModule (HyperLink: Source -- Target)"/>
         <life-cycle created-by="AUTO" updated-by="AUTO" removed-by="AUTO"/>
         <id type="da.ibacs.business.ids.DataModuleInterLinkId" implemented-as="da.ibacs.impl.jpa.DataModuleInterLinkKey">
            <field name="Source"/>
            <field name="Target"/>
            <field name="SourceAnchor"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <tip role="Source" type="da.ibacs.DataModule" multiplicity="*" dependency="DEFINED" navigable="false">
            <xml target-export-mode="ATTACHED"/>
         </tip>
         <tip role="Target" type="da.ibacs.DataModule" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
         <property name="SourceAnchor" type="da.ibacs.business.enums.DataModuleSection" length="16" implemented-as="String" read-only="true"/>
      </element>

      <element type="da.ibacs.DataModuleLogistic" dao-hint="LAZY">
         <description lang="fr">Relation permettant d'associer de la logistique (ressources) à un Module Documentaire.</description>
         <type-id name="DataModuleLogistic"/>
         <life-cycle created-by="AUTO" updated-by="AUTO" removed-by="AUTO"/>
         <id type="da.ibacs.business.ids.DataModuleLogisticId" implemented-as="int"/>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
            <arg name="DataModule"/>
            <arg name="Resource"/>
         </constructor>
         <tip role="DataModule" type="da.ibacs.DataModule" multiplicity="*" dependency="DEFINED">
            <xml target-export-mode="ATTACHED"/>
         </tip>
         <tip role="Resource" type="da.ibacs.DataModuleResource" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
         <property name="Designation" type="String" length="255">
            <description lang="fr">Description de la ressource.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Type" type="da.ibacs.business.enums.DataModuleResourceType" implemented-as="String" length="5" packed="EXTERNAL_TYPE">
            <description lang="fr">Type de la ressource : SPARE, MISC, GSE, TOOL</description>
         </property>
         <property name="Usage" type="da.ibacs.business.enums.DataModuleLogisticUsage" implemented-as="String" length="1" packed="EXTERNAL_TYPE">
            <description lang="fr">Usage de la logistique du DocModule (SYSTEMATIC, UNSYSTEMATIC).</description>
         </property>
         <property name="Quantity" type="String" length="16"></property>
      </element>

      <element type="da.ibacs.DataModulePublication" dao-hint="LAZY">
         <description lang="fr">Relation permettant d'associer une publication à un Module Documentaire.</description>
         <type-id name="DataModulePublication"/>
         <life-cycle created-by="AUTO" updated-by="AUTO" removed-by="AUTO"/>
         <id type="da.ibacs.business.ids.DataModulePublicationId" implemented-as="da.ibacs.impl.jpa.DataModulePublicationKey">
            <field name="DataModule"/>
            <field name="Publication"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <tip role="DataModule" type="da.ibacs.DataModule" multiplicity="*" dependency="DEFINED"/>
         <tip role="Publication" type="da.ibacs.DocPublication" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
         <property name="PublicID" type="String" length="255"/>
      </element>

      <element type="da.ibacs.DataModuleResource">
         <description lang="fr">Définition d'une ressource documentaire, quel que soit son type.
Au niveau IBACS ces objets sont uniquement consultables.
Il s'agit ici directement des ressources telles que définies dans la documentation.</description>
         <life-cycle created-by="AUTO" updated-by="AUTO" removed-by="AUTO"/>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.DataModuleResourceId" implemented-as="String" length="255">
            <description lang="fr">Identification d'une ressource documentaire.
Constituée d'un préfixe fonction du type de la ressource, et de données spécifiques.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <property name="Designation" type="String" length="255" read-only="true">
            <description lang="fr">Description de la ressource.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Nature" type="da.ibacs.business.enums.DataModuleResourceIdType" implemented-as="String" length="3" read-only="true" definition="SECONDARY">
            <description lang="fr">Nature de la ressource.
Ce peut être un couple (MFR, PNR), un couple (IPP, CSN), un triplet (IPP, CSN, ISN) ou n'importe quoi d'autre !</description>
         </property>
         <property name="TypeMask" type="da.ibacs.business.enums.DataModuleResourceTypeMask" implemented-as="String" length="20" read-only="true">
            <description lang="fr">Type de la ressource : SPARE, MISC, GSE, TOOL</description>
         </property>
         <property name="Reference" type="da.rids.RawId" implemented-as="String" length="255" read-only="true" definition="SECONDARY">
            <description lang="en">Referenced element</description>
         </property>
      </element>

      <element type="da.ibacs.DataModule_RefProductDoc" read-only="true">
         <description lang="fr">Relation, native ou dérivée, entre un Module Documentaire et un Article Documentaire.</description>
         <description lang="fr">__TODO :__ cibler Product ?</description>
         <type-id name="DataModule -- RefProductDoc"/>
         <tip role="DataModule" type="da.ibacs.DataModule" multiplicity="*" dependency="DEFINED"/>
         <tip role="RefProductDoc" type="da.ibacs.RefProductDoc" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.DataModule_RefProductDocApplicability">
         <description lang="fr">Applicabilité d'un Module Documentaire à un Produit.</description>
         <description lang="fr">__TODO :__ cibler Product ?</description>
         <type-id name="DataModule -- RefProductDocApplicability"/>
         <tip role="DataModule" type="da.ibacs.DataModule" multiplicity="*" dependency="DEFINED"/>
         <tip role="Applicability" plural="Applicabilities" type="da.ibacs.RefProductDoc" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.DataModule_Rpc">
         <description lang="fr">Responsable du DocModule.</description>
         <type-id name="DataModule -- MetaEnumValue (Rpc)"/>
         <life-cycle created-by="AUTO" updated-by="AUTO" removed-by="AUTO"/>
         <tip role="DataModule" type="da.ibacs.DataModule" multiplicity="*" dependency="DEFINED"/>
         <tip role="Rpc" type="da.ibacs.MetaEnumValue" multiplicity="0..1" navigable="false" dependency="USED_WEAK"/>
      </element>

      <element type="da.ibacs.DataModule_StandardSet">
         <description lang="fr">Relation permettant de décrire l'applicabilité en termes de standards d'un Module Documentaire.</description>
         <type-id name="DataModule -- StandardSet"/>
         <life-cycle created-by="AUTO" updated-by="AUTO" removed-by="AUTO"/>
         <tip role="DataModule" type="da.ibacs.DataModule" multiplicity="*" dependency="DEFINED"/>
         <tip role="StandardSet" type="da.ibacs.StandardSet" multiplicity="0..1" navigable="false" dependency="USED_WEAK"/>
      </element>

      <element type="da.ibacs.DataModule_VersionSet">
         <description lang="fr">Relation permettant de décrire l'applicabilité en termes de versions d'un Module Documentaire.</description>
         <type-id name="DataModule -- VersionSet"/>
         <life-cycle created-by="AUTO" updated-by="AUTO" removed-by="AUTO"/>
         <tip role="DataModule" type="da.ibacs.DataModule" multiplicity="*" dependency="DEFINED"/>
         <tip role="VersionSet" type="da.ibacs.VersionSet" multiplicity="0..1" navigable="false" dependency="USED_WEAK"/>
      </element>

      <interface type="da.ibacs.DocModule" referenceable="true">
         <description lang="fr">Interface regroupant les différents types de documentations (DataModule, WorkCard, ServiceBulletin)</description>
         <method name="getId" type="da.ibacs.business.ids.DocModuleId"/>
         <method name="getOrigin" type="da.ibacs.business.enums.EntityOrigin"/>
         <method name="setOrigin" type="void">
            <arg name="type" type="da.ibacs.business.enums.EntityOrigin"/>
         </method>
         <method name="getTitle" type="String">
            <arg name="language" type="da.ibacs.business.Language"/>
         </method>
      </interface>

      <element type="da.ibacs.DocPublication">
         <description lang="fr">Publication documentaire.
Au niveau IBACS ces objets sont uniquement consultables.</description>
         <life-cycle created-by="AUTO" updated-by="AUTO" removed-by="AUTO"/>
         <id type="da.ibacs.business.ids.DocPublicationId" implemented-as="String" length="255">
            <description lang="fr">Identification d'une publication documentaire.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <property name="Designation" type="String" length="255">
            <description lang="fr">Nom de la publication.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Type" type="da.ibacs.business.enums.DocPublicationType" implemented-as="String" length="20">
            <description lang="fr">Type de la publication.</description>
         </property>
      </element>

      <element type="da.ibacs.RefProductDoc">
         <description lang="fr">Produit de Référence issu de la Documentation.</description>
         <life-cycle created-by="AUTO" updated-by="AUTO" removed-by="AUTO"/>
         <implements>da.ibacs.LifeStatusSetter</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.RefProductDocId" implemented-as="String" length="43">
            <description lang="fr">Identification d'un produit documentaire (idem identifiant produit).</description>
            <field name="Product"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <tip role="Product" type="da.ibacs.Product" multiplicity="0..1" dependency="USED_WEAK" navigable="false">
            <type-id name="RefProductDoc -- Product"/>
         </tip>
         <property name="Designation" type="String" length="255">
            <description lang="fr">Désignation (En français et en anglais) du RefProductDoc.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="LifeStatus" type="da.ibacs.business.enums.EntityLifeStatus" implemented-as="String" length="1" nullable="false" packed="EXTERNAL_TYPE">
            <description lang="fr">État de définition du cycle de vie standard (Vivant, Déprécié, Mort, ...) d'un Produit documentaire.</description>
         </property>
         <property name="FullSourceMask" type="da.ibacs.business.enums.RefProductTypeMask" implemented-as="String" length="4" definition="SECONDARY" read-only="true">
            <description lang="fr">Propriété dérivée récupérant le FullSourceMask du Product Ibacs.
__TODO__ A supprimer, utilisé seulement dans l'IHM</description>
         </property>
         <property name="Nature" type="da.ibacs.business.enums.RefProductDocNature" length="18" implemented-as="String" packed="EXTERNAL_TYPE"/>
      </element>

      <element type="da.ibacs.RefProductDoc_Manufacturer" read-only="true" definition="SECONDARY">
         <description lang="fr">Relation entre un Article Documentaire et un Fabricant.</description>
         <type-id name="RefProductDoc -- Manufacturer"/>
         <tip role="RefProductDoc" type="da.ibacs.RefProductDoc" multiplicity="*" dependency="DEFINED"/>
         <tip role="Manufacturer" type="da.ibacs.Manufacturer" multiplicity="1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.Rfd">
         <description lang="fr">Définition d'un REG (Repère Électrique Généralisé). Correspond à la notion de CFI dans le civil.
Non éditable dans IBACS.</description>
         <life-cycle created-by="AUTO" updated-by="AUTO" removed-by="AUTO"/>
         <implements>da.ibacs.VersionSetGetter</implements>
         <implements>da.ibacs.Described</implements>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <implements>da.ibacs.TrblElementTarget</implements>
         <id type="da.ibacs.business.ids.RfdId" implemented-as="String" length="10"/>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <property name="Description" type="String" length="255">
            <description lang="fr">Description (En français et en anglais) du Rfd.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
      </element>

      <element type="da.ibacs.RfdRefProductIpc">
         <description lang="fr">Cette relation permet de décrire à quels REG un article correspond.</description>
         <type-id name="Rfd -- RefProductIpc"/>
         <id type="da.ibacs.business.ids.RfdRefProductIpcId" implemented-as="da.ibacs.impl.jpa.RfdRefProductIpcKey">
            <field name="RefProductIpc"/>
            <field name="Rfd"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <tip role="Rfd" type="da.ibacs.Rfd" multiplicity="*" dependency="DEFINED" navigable="false"/>
         <tip role="RefProductIpc" type="da.ibacs.RefProductIpc" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.Rfd_Rfd">
         <description lang="fr">Relation de composition entre Rfd.</description>
         <type-id name="Rfd -- Rfd (Composition: Parent -- Child)"/>
         <tip role="Parent" type="da.ibacs.Rfd" multiplicity="0..1" dependency="DEFINED" navigable="false"/>
         <tip role="Child" plural="Children" type="da.ibacs.Rfd" dependency="USED_WEAK" multiplicity="*"/>
      </element>

      <element type="da.ibacs.Rfd_VersionSet">
         <description lang="fr">Relation permettant d'associer un Ensemble de Versions à un REG.</description>
         <type-id name="Rfd -- VersionSet"/>
         <tip role="Rfd" type="da.ibacs.Rfd" multiplicity="*" dependency="DEFINED"/>
         <tip role="VersionSet" type="da.ibacs.VersionSet" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.SbServiceBulletin" dao-hint="LAZY">
         <description lang="fr">Définition d'un Service Bulletin</description>
         <life-cycle created-by="AUTO" updated-by="AUTO" removed-by="AUTO"/>
         <implements>da.ibacs.DocModule</implements>
         <implements>da.ibacs.LifeStatusGetter</implements>
         <implements>da.ibacs.OriginGetter</implements>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.SbServiceBulletinId" implemented-as="String" length="30">
            <description lang="fr">Numéro du Service Bulletin</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <arg name="Id"/>
            <arg name="Type"/>
         </constructor>
         <property name="Subject" type="String" length="255">
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Purpose" type="String" length="2048">
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="CreationDate" type="java.util.Date" date-type="DATE">
            <description lang="fr">Date de création du Service Bulletin dans l'application</description>
         </property>
         <property name="Origin" type="da.ibacs.business.enums.EntityOrigin" implemented-as="String" length="1" nullable="false">
            <description lang="fr">État unifié IBACS de l'origine du DocModule.</description>
         </property>
         <property name="Type" type="da.ibacs.business.enums.SbServiceBulletinType" implemented-as="String" length="5" nullable="false">
            <description lang="fr">Indique le type, qui peux prendre es valeur "BS" ou "IT"</description>
         </property>
         <property name="Status" type="da.ibacs.business.enums.SbServiceBulletinStatus" implemented-as="String" length="1" nullable="false">
            <description lang="fr">Statut du Service Bulletin</description>
         </property>
         <property name="LifeStatus" type="da.ibacs.business.enums.EntityLifeStatus" implemented-as="String" length="1" nullable="false" read-only="true" definition="SECONDARY" packed="EXTERNAL_TYPE">
            <description lang="fr">État de définition du cycle de vie standard (Vivant, Déprécié, Mort, ...) d'une référence externe.</description>
         </property>
         <property name="TargetDate" type="java.util.Date" date-type="DATE">
            <description lang="fr">Date objective du Service Bulletin</description>
         </property>
      </element>

      <element type="da.ibacs.WorkCard" dao-hint="LAZY">
         <description lang="fr">Définition d'un Service Bulletin</description>
         <life-cycle created-by="AUTO" updated-by="AUTO" removed-by="AUTO"/>
         <implements>da.ibacs.DocModule</implements>
         <implements>da.ibacs.LifeStatusGetter</implements>
         <implements>da.ibacs.OriginGetter</implements>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.WorkCardId" implemented-as="String" length="30">
            <description lang="fr">Identifiant d'une carte de travail</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <arg name="Id"/>
         </constructor>
         <property name="Title" type="String" length="255">
            <description lang="fr">Titre (En français et en anglais) de la carte de travail.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="LifeStatus" type="da.ibacs.business.enums.EntityLifeStatus" implemented-as="String" length="1" nullable="false" packed="EXTERNAL_TYPE">
            <description lang="fr">État de définition du cycle de vie standard (Vivant, Déprécié, Mort, ...) d'une carte de travail.</description>
         </property>
         <property name="Origin" type="da.ibacs.business.enums.EntityOrigin" implemented-as="String" length="1" nullable="false">
            <description lang="fr">État unifié IBACS de l'origine de la carte de travail.</description>
         </property>
      </element>
   </domain>

   <domain name="Explanations">
      <description lang="fr">Domaine contenant les éléments permettant d'expliquer les évolutions subies par un objet, quel qu'il soit.</description>
      <depends-on>Commons</depends-on>
      <depends-on>External-Refs</depends-on>
      <depends-on>Management</depends-on>

      <interface type="da.ibacs.Explained" purpose="CODE_REUSE">
         <description lang="fr">Interface implémentée par les classes des objets auxquels sont attachées des explications, avec héritage de celles-ci.</description>
         <method name="getInheritedExplanations" type="Set&lt;da.ibacs.business.Explanation&gt;">
            <description lang="fr">Méthode permettant de récupérer l'ensemble des Explications héritées associées à l'objet porteur d'Explications.</description>
         </method>
      </interface>

      <element type="da.ibacs.Explanation" dao-hint="LAZY">
         <description lang="fr">Permet d'ajouter des Explications (liées à un changement, une évolution) à toute entité d'IBACS.
La relation entre une Explication et l'élément sur lequel elle porte n'est actuellement pas explicitement modélisable avec le formalisme IBACS.
Pour l'instant, cette relation est directement portée par l'Explication.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="USER"/>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.EntityExternalRefSource</implements>
         <id type="da.ibacs.business.ids.ExplanationId" implemented-as="String" length="128">
            <description lang="fr">Identifiant de l'Explication. Il permet de savoir sur quel élément porte l'Explication.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true">
               <description lang="fr">Identifiant de l'Explication. S'il n'est pas spécifié, une identifiant libre sera recherché.</description>
            </arg>
            <arg name="Item"/>
            <arg name="CreationDate" optional="true"/>
         </constructor>
         <static name="META_ENUM_EXPLANATION_DOMAIN" type="da.ibacs.business.MetaEnumType.Value" value="MetaEnumType.INSTANCE.createOrFind(&quot;ExplDomain&quot;)">
            <description lang="fr">Identifiant permettant de filtrer les Enums correspondant au Domaine d'une Explication.</description>
         </static>
         <static name="META_ENUM_EXPLANATION_DETAIL" type="da.ibacs.business.MetaEnumType.Value" value="MetaEnumType.INSTANCE.createOrFind(&quot;ExplDetail&quot;)">
            <description lang="fr">Identifiant permettant de filtrer les Enums correspondant aux détails d'une Explication.</description>
         </static>
         <property name="Item" type="da.rids.RawId" implemented-as="String" length="64" definition="SECONDARY" read-only="true">
            <description lang="fr">Identifiant de l'élément sur lequel porte l'Explication.  
Il est permet de retrouver sur quel élément porte l'Explication.</description>
         </property>
         <property name="CreationDate" type="java.util.Date" read-only="true" date-type="TIMESTAMP">
            <description lang="fr">Date de création de l'Explication. Automatiquement renseignée à la création de l'Explication.</description>
         </property>
         <property name="LastModificationDate" type="java.util.Date" date-type="TIMESTAMP">
            <description lang="fr">Date de dernière modification de l'Explication.  
Peut, pour des raisons particulières, être modifié à la main.</description>
         </property>
         <property name="Author" type="String" length="32">
            <description lang="fr">Nom de l'auteur de l'Explication.</description>
         </property>
         <property name="PublicComment" type="String" length="2048">
            <description lang="fr">Commentaire public (en Français et en Anglais, exportable sans restriction), décrivant le changement.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="PrivateComment" type="String" length="2048">
            <description lang="fr">Commentaire privé (monolingue, non exportable, réservé à un usage interne), décrivant le changement.</description>
         </property>
         <method name="updateLastModificationDate" type="void"/>
      </element>

      <element type="da.ibacs.ExplanationDetail">
         <description lang="fr">Association d'une Nature (MetaEnumvalue) à une Explication.</description>
         <type-id name="Explanation -- MetaEnumValue (Detail)"/>
         <tip role="Explanation" type="da.ibacs.Explanation" multiplicity="*" dependency="DEFINED"/>
         <tip role="Detail" type="da.ibacs.MetaEnumValue" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.ExplanationDomain" dao-hint="LAZY">
         <description lang="fr">Association d'un Domaine (MetaEnumvalue) à une Explication.  
Cette relation porte une information d'impact.  
Cela permet d'indiquer qu'un Changement (via son Explication) impacte ou pas un Domaine donné.</description>
         <type-id name="Explanation -- MetaEnumValue (Domain)"/>
         <id type="da.ibacs.business.ids.ExplanationDomainId" implemented-as="da.ibacs.impl.jpa.ExplanationDomainKey">
            <description lang="fr">Identifiant de la relation.</description>
            <field name="Domain"/>
            <field name="Explanation"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <tip role="Explanation" type="da.ibacs.Explanation" multiplicity="*" dependency="USED_STRONG">
            <xml target-export-mode="ATTACHED"/>
         </tip>
         <tip role="Domain" type="da.ibacs.MetaEnumValue" multiplicity="*" navigable="false" dependency="USED_WEAK"/>
         <property name="ChangeImpact" type="da.ibacs.business.enums.ChangeImpact" implemented-as="String" length="1">
            <description lang="fr">Nature de l'impact du changement sur le domaine.</description>
         </property>
      </element>

      <element type="da.ibacs.Explanation_MgtFlask">
         <description lang="fr">Association d'une Tâche/Flot de Pilotage à une Explication.</description>
         <type-id name="Explanation -- MgtFlask"/>
         <tip role="Explanation" type="da.ibacs.Explanation" multiplicity="*" dependency="DEFINED"/>
         <tip role="Flask" type="da.ibacs.MgtFlask" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>
   </domain>

   <domain name="External-Refs">
      <description lang="fr">Domaine dédié au stockage des références menant aux documents de management de projet (FT, ...).</description>
      <depends-on>Commons</depends-on>
      <depends-on>Impacts-Interface</depends-on>

      <element type="da.ibacs.EntityExternalRef">
         <description lang="fr">Permet d'associer une Référence Documentaire (Document, Data Sheet ou Remarque) à toute Entité.
Il s'agit en fait d'une relation (pas encore modélisable directement dans IBACS).</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <id type="da.ibacs.business.ids.EntityExternalRefId" implemented-as="da.ibacs.impl.jpa.EntityExternalRefKey">
            <field name="ExternalRef"/>
            <field name="Source"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <tip role="ExternalRef" type="da.ibacs.ExternalRef" multiplicity="*" dependency="USED_WEAK" navigable="false">
            <type-id name="EntityExternalRef -- ExternalRef"/>
         </tip>
         <tip role="Source" type="da.ibacs.EntityExternalRefSource" multiplicity="*" dependency="DEFINED" navigable="false">
            <type-id name="EntityExternalRef -- EntityExternalRefSource"/>
         </tip>
         <!-- property name="Source" type="da.rids.RawId" read-only="true" read-only="true" implemented-as="String" length="255"/> -->
         <!-- <property name="Target" type="da.ibacs.business.ids.ExternalRefId" read-only="true" read-only="true"/> -->
      </element>

      <interface type="da.ibacs.EntityExternalRefSource" referenceable="true">
         <description lang="fr">Interface implémentée par les classes des objets qui ont des ExternalRef.</description>
      </interface>

      <element type="da.ibacs.ExternalRef">
         <description lang="fr">Représentant, dans IBACS, d'un Document (au sens large du terme).
Le Document est généralement géré dans un outil / environnement dédié.
On importe le minimum d'information sur un Document : ce qui permet de l'identifier et de retrouver le bon.
Si on veut des détails, il faut aller dans le moyen dédié à la gestion du Document.
Il est cependant possible que certains Documents soient directement gérés dans IBACS.
Certains Documents sont indicés, d'autres pas.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.LifeStatusSetter</implements>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.ExternalRefId" implemented-as="int">
            <description lang="fr">Identification du Document.
C'est une chaine de caractères = Type de document (FCS, FTD, FCR...) - Source (DGSM, DGQT, DGA...) - Référence (DGSM/DPS 143716...) - Index (1,2,3...A,B,C...)
Index est facultatif</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
            <arg name="ExternalRefType"/>
            <arg name="ReferenceMaster"/>
         </constructor>
         <static name="META_ENUM_EXT_REF_SOURCE" type="da.ibacs.business.MetaEnumType.Value" value="MetaEnumType.INSTANCE.createOrFind(&quot;ExtRefSrc&quot;)"/>
         <property name="LifeStatus" type="da.ibacs.business.enums.EntityLifeStatus" implemented-as="String" length="1" nullable="false" packed="EXTERNAL_TYPE">
            <description lang="fr">État de définition du cycle de vie standard (Vivant, Déprécié, Mort, ...) d'une référence externe.</description>
         </property>
         <property name="Title" type="String" length="255">
            <description lang="fr">Titre du document référencé</description>
         </property>
         <property name="ReferenceMaster" type="da.ibacs.business.enums.ExternalRefAlias" definition="SECONDARY" implemented-as="String" length="128"/>
         <property name="ReferenceAlias" type="da.ibacs.business.enums.ExternalRefAlias" implemented-as="String" length="128">
            <index type="int" name="number" size="4"/>
         </property>

         <!-- <property name="Source" type="String" length="124" read-only="true"> <description lang="fr">Source fournissant le document référencé. Ce peut tout aussi bien être un utilisateur qu'un département (DGSM, DGQT...) ou qu'un client (DGA...)</description> </property> <property name="Index" type="String"
            length="2" read-only="true"> <description lang="fr"> Index (ou Version) du document référencé</description> </property> <property name="Reference" type="String" length="16" read-only="true"> <description lang="fr">Référence identifiant le document de façon unique</description> </property> -->
      </element>

      <element type="da.ibacs.ExternalRefLocation">
         <description lang="fr">Définition de la Localisation et du Format d'un Document référencé dans IBACS.
Un Document peut avoir plusieurs Localisations et Formats.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="USER_OR_AUTO"/>
         <id type="da.ibacs.business.ids.ExternalRefLocationId" implemented-as="int">
            <description lang="fr">Identification d'une Localisation de document référencé dans IBACS</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
            <arg name="ExternalRef"/>
         </constructor>
         <tip role="ExternalRef" type="da.ibacs.ExternalRef" multiplicity="*" dependency="USED_STRONG" collection="LIST">
            <xml target-export-mode="ATTACHED"/>
         </tip>
         <property name="MimeType" type="String" length="126">
            <description lang="fr">Type MIME du Document.
Sert à déterminer quel éditeur appeler pour ouvrir le Document à la Localisation spécifiée</description>
         </property>
         <property name="Path" type="String" length="2048">
            <description lang="fr">Localisation réelle des documents référencés dans IBACS (leur URL).</description>
         </property>
         <property name="ExternalEditor" type="String" length="16">
            <description lang="fr">Nom de l'éditeur externe enregistré pour cette localisation du document.</description>
         </property>
         <property name="SpecificArgs" type="da.factories.EffectiveArguments" implemented-as="String" length="512">
            <description lang="fr">Arguments contenant des informations complémentaires permettant d"ouvrir le document à la
localisation spécifiée. Ces informations concernent le document, pas l'éditeur.</description>
         </property>
         <property name="EffectiveSpecificArgs" type="da.factories.EffectiveArguments" implemented-as="String" length="2560" definition="SECONDARY" read-only="true">
            <description lang="fr">Correspond aux specificArgs plus le path.</description>
         </property>
      </element>

      <element type="da.ibacs.ExternalRefType">
         <description lang="fr">Entité contenant l'ensemble des types de ExternalRef (FCR, FTD, FRAD, FISC...)</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.ExternalRefTypeId" implemented-as="String" length="8">
            <description lang="fr">Identification du type de referenceDoc, généralement correspond à son acronyme</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <property name="Designation" type="String" length="124">
            <description lang="fr">Donne la désignation de ce type de ExternalRef. Exemple pour FCS : Fiche de Compléments de Spécifications</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
      </element>

      <element type="da.ibacs.ExternalRef_ExternalRefType">
         <description lang="fr">Association d'un Type à une référence extérieure.</description>
         <type-id name="ExternalRef -- ExternalRefType"/>
         <tip role="ExternalRef" type="da.ibacs.ExternalRef" multiplicity="*" dependency="DEFINED"/>
         <tip role="ExternalRefType" type="da.ibacs.ExternalRefType" multiplicity="1" dependency="USED_WEAK" navigable="false"/>
      </element>
   </domain>

   <domain name="Ftr">
      <description lang="fr">Domaine dédié au fichier technique rechanges.</description>
      <depends-on>Business-Refs</depends-on>
      <depends-on>Commons</depends-on>
      <depends-on>Impacts-Interface</depends-on>

      <element type="da.ibacs.NuclassFt">
         <description lang="fr">Numéro de classement d'une famille d'outil issu du Fichier Technique.</description>
         <life-cycle created-by="AUTO" updated-by="AUTO" removed-by="AUTO"/>
         <implements>da.ibacs.VersionSetGetter</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.NuclassFtId" implemented-as="String" length="5">
            <description lang="fr">Identification d'une famille d'outil du fichier technique.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <property name="Designation" type="String" length="255">
            <description lang="fr">Désignation (En français et en anglais) du Nuclass.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Aircraft" type="boolean">
            <description lang="fr">Indique si le Nuclass est étiqueté utilisé sur avion.</description>
         </property>
         <property name="Equipment" type="boolean">
            <description lang="fr">Indique si le Nuclass est étiqueté utilisé sur équipement.</description>
         </property>
      </element>

      <element type="da.ibacs.NuclassFt_RefProductFt">
         <description lang="fr">Relation entre un Nuclass et les Produits qui le composent, issu du Fichier Technique.</description>
         <type-id name="NuclassFt -- RefProductFt"/>
         <tip role="NuclassFt" type="da.ibacs.NuclassFt" multiplicity="0..1" dependency="DEFINED"/>
         <tip role="RefProductFt" type="da.ibacs.RefProductFt" multiplicity="*" dependency="USED_WEAK"/>
      </element>

      <element type="da.ibacs.NuclassFt_VersionSet">
         <description lang="fr">Configuration en Version d'un Nuclass issu du Fichier Technique.</description>
         <type-id name="NuclassFt -- VersionSet"/>
         <tip role="NuclassFt" type="da.ibacs.NuclassFt" multiplicity="*" dependency="DEFINED"/>
         <tip role="VersionSet" type="da.ibacs.VersionSet" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.RefProductFt">
         <description lang="fr">Produit de Référence issu du Fichier Technique.
Dans le Fichier Technique, les notions d'Article et d'Ensemble (de tête) sont séparée.
Ici les 2 sont réunies, certains attributs ne sont disponible si l'article est aussi un ensemble (Fam, Var...)</description>
         <life-cycle created-by="AUTO" updated-by="AUTO" removed-by="AUTO"/>
         <implements>da.ibacs.VersionSetGetter</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.RefProductFtId" implemented-as="String" length="43">
            <description lang="fr">Identification d'un produit du fichier technique (idem identifiant produit).</description>
            <field name="Product"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <tip role="Product" type="da.ibacs.Product" multiplicity="0..1" dependency="USED_WEAK" navigable="false">
            <type-id name="RefProductFt -- Product"/>
         </tip>
         <property name="Designation" type="String" length="255">
            <description lang="fr">Désignation (En français et en anglais) du produit (DENOXXAFFICHEE).</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="FullSourceMask" type="da.ibacs.business.enums.RefProductTypeMask" implemented-as="String" length="4" definition="SECONDARY" read-only="true">
            <description lang="fr">Propriété dérivée récupérant le FullSourceMask du Product Ibacs.
__TODO__ A supprimer, utilisé seulement dans l'IHM</description>
         </property>
         <property name="ArticleLine" type="da.ibacs.business.enums.FtArticleLine" implemented-as="String" length="700" packed="EXTERNAL_TYPE">
            <description lang="fr">Artifice d'implémentation permettant de stocker les propriétés dérivées concernant l'article dans une seule String.</description>
         </property>
         <property name="EnsembleLine" type="da.ibacs.business.enums.FtEnsembleLine" implemented-as="String" length="254" packed="EXTERNAL_TYPE">
            <description lang="fr">Artifice d'implémentation permettant de stocker les propriétés dérivées concernant l'ensemble dans une seule String.</description>
         </property>
         <property name="TypeNatureMask" type="da.ibacs.business.enums.TypeNatureMask" implemented-as="String" length="15" definition="SECONDARY" read-only="true">
            <description lang="fr">Utilise l'attribut ProductType (de chaque service) et la famille pour réaliser le masque de type nature.
TYPE_S et NATURE_A => AIRFRAME
TYPE_S et NATURE_B => EQUIPMENT
TYPE_U => IPD
TYPE_S et NATURE_D => HARDWARE_MECA
TYPE_S et NATURE_E => HARDWARE_ELEC
TYPE_X => RAW_MATERIAL
TYPE_T=> COMPONENT
TYPE_S et NATURE_F => PILOT_EQUIPMENT
TYPE_C => CONTAINER
TYPE_B => TRAINING
TYPE_P => OPTIONNAL
TYPE_W et famille appartient à {TAA-TZZ} => ATE
TYPE_W et famille appartient à {KAA-RZZ} => MS
TYPE_W et famille appartient à {SAA-SZZ} => TRAINING
TYPE_W et famille appartient à {YAA-YZZ} => TRAINING</description>
         </property>
         <property name="CategoryMask" type="da.ibacs.business.enums.CategoryMask" implemented-as="String" length="5" definition="SECONDARY" read-only="true">
            <description lang="fr">Synthèse des catégories contenues dans les relations de compositions (Sup).</description>
         </property>
         <property name="Family" type="String" length="3" definition="SECONDARY" read-only="true">
            <description lang="fr">Numéro famille. Existe si l'article est un ensemble.</description>
         </property>
         <property name="Variant" type="String" length="6" definition="SECONDARY" read-only="true">
            <description lang="fr">Numéro de variante associée à la famille. Différent de nul  si l'article est un ensemble.</description>
         </property>
         <property name="Ipl" type="String" length="6" definition="SECONDARY" read-only="true">
            <description lang="fr">Numéro d'IPL (signifie: Illustrated Part List)</description>
         </property>
         <property name="Npa" type="boolean" definition="SECONDARY" read-only="true" getter-prefix="IS">
            <description lang="fr">Indique si le produit n'est plus approvisionnable.
Vrai si au moins une relation avec un ensemble sup (RefProductFtComposition) a un code sélection rechange à 8</description>
         </property>
         <property name="MsoMask" type="da.ibacs.business.enums.MaintenanceSupportOrganisationMask" implemented-as="String" length="6" read-only="true" definition="SECONDARY">
            <description lang="fr">Synthèse des valeurs de NTI contenues dans les relations de compositions (Sup).</description>
         </property>

         <property name="CodificationStatus" type="da.ibacs.business.enums.CodificationStatus" implemented-as="String" length="1" definition="SECONDARY" read-only="true">
            <description lang="fr">Synthèse des états de codification (DMD1SYNT)</description>
         </property>
         <property name="ProductType" type="da.business.ft.TypeNatureFt" implemented-as="String" length="2" definition="SECONDARY" read-only="true">
            <description lang="fr">Type et nature de l'article gérés par différent service</description>
            <index type="da.business.ft.ServiceCodeFt" name="service" values="DRM1 DRM2 DSE"/>
         </property>
         <property name="Nsn" type="String" length="13" definition="SECONDARY" read-only="true">
            <description lang="fr">Numéro de nomenclature OTAN NNO</description>
         </property>
         <property name="UnitOfIssue" type="da.business.ft.UnitOfIssueFt" implemented-as="String" length="2" definition="SECONDARY" read-only="true">
            <description lang="fr">Unité de fourniture</description>
         </property>
         <property name="QuantityPerUnitOfIssue" type="Integer" definition="SECONDARY" read-only="true">
            <description lang="fr">Précision de l'unité de fourniture</description>
         </property>
         <property name="MeasureUnit" type="da.business.ft.MeasureUnitFt" implemented-as="String" length="2" definition="SECONDARY" read-only="true">
            <description lang="fr">Unité de mesure</description>
         </property>
         <property name="ReparConsuMask" type="da.ibacs.business.enums.ReparConsuCodeMask" implemented-as="String" length="2" definition="SECONDARY" read-only="true">
            <description lang="fr">Synthèse des valeurs de SPC contenues dans les relations de compositions (Sup).</description>
         </property>
         <property name="ReplaceableUnitCodeMask" type="da.ibacs.business.enums.ReplaceableUnitCodeMask" implemented-as="String" length="6" definition="SECONDARY" read-only="true">
            <description lang="fr">Le masque d'url ura est initialisé suivant la valeur du ProductType et de l'échelon de réparation des relations de compositions (Sup).
TYPE_S (service DRM1 ou DRM2) et quantité à l'échelon 2 non nulle => URL
TYPE_T (service DRM1 ou DRM2) et quantité à l'échelon 1 non nulle => URL + URA
TYPE_T (service DRM1 ou DRM2) et quantité à l'échelon 2 non nulle => URA</description>
         </property>

         <property name="VersionSynthesis" type="da.ibacs.business.VersionSynthesis" to-external="da.ibacs.business.VersionSynthesisUtil.toExternal" to-internal="da.ibacs.business.VersionSynthesisUtil.toInternal" implemented-as="String" length="100" read-only="true" definition="SECONDARY">
            <description lang="fr">Cet élément permet de définir une synthèse de plusieurs VersionSet.
Par exemple les versions applicables à une ancienne configuration, et les versions rechanges sur la dernière configuration.</description>
         </property>

         <property name="Lls" type="int" definition="SECONDARY" read-only="true">
            <description lang="fr">Signifie : Limit Life in Storage</description>
            <index type="da.ibacs.business.enums.LimitLifeInStorageType" name="climat" values="TEMPERATES_CLIMATS TROPICAL_CLIMATS"/>
         </property>
         <property name="Llu" type="String" length="8" definition="SECONDARY" read-only="true">
            <description lang="fr">Signifie : Limit Life in Utilization + Unit</description>
            <index type="da.ibacs.business.enums.LimitLifeInUtilizationType" name="type" values="TYPE_1 TYPE_2"/>
         </property>
         <property name="LocallyManufactured" type="da.ibacs.business.enums.LocallyManufactured" implemented-as="String" length="1" definition="SECONDARY" read-only="true">
            <description lang="fr">Indique si le produit est fabriqué à partir d'un autre (Confection Local).
Il est calculé à partir du la sélection rechange des relations de composition (Inf).
Inf toujours SELECT_3 => YES
Inf jamais SELECT_3 => NO
Mixte => YES_WITH_COMPONENTS</description>
         </property>
      </element>

      <element type="da.ibacs.RefProductFtComposition">
         <description lang="fr">Relation de composition (vraie !) entre Articles du FT.
Initialisée à partir de la relation Rechange du FT qui relie un article et son ensemble de tête.</description>
         <type-id name="RefProductFt -- RefProductFt (Composition: Sup -- Inf)"/>
         <id type="da.ibacs.business.ids.RefProductFtCompositionId" implemented-as="da.ibacs.impl.jpa.RefProductFtCompositionKey">
            <description lang="fr">La clé d'une relation de composition est la composition des 2 extrémités.</description>
            <field name="Component"/>
            <field name="Composite"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <tip role="Composite" type="da.ibacs.RefProductFt" multiplicity="*" dependency="DEFINED">
            <xml target-export-mode="ATTACHED"/>
         </tip>
         <tip role="Component" type="da.ibacs.RefProductFt" multiplicity="*" dependency="USED_WEAK"/>
         <property name="RechangeLine" type="da.ibacs.business.enums.FtRechangeLine" implemented-as="String" length="600" packed="EXTERNAL_TYPE">
            <description lang="fr">Artifice d'implémentation permettant de stocker les propriétés dérivées concernant la relation dans une seule String.</description>
         </property>
         <property name="Quantity" type="da.business.Quantity" implemented-as="String" length="30" definition="SECONDARY" read-only="true">
            <description lang="fr">Correspond à la quantity rechange par échelon de maintenance.
Il contient une valeur numérique et une information de type "Selon besoin", issue des champs "QTECHx" et "QTECHxNBSB"</description>
            <index type="da.business.ft.EchelonFt" name="echelon" values="ECHELON_1 ECHELON_2 ECHELON_4"/>
         </property>
         <property name="Comment" type="String" length="74" definition="SECONDARY" read-only="true">
            <description lang="fr">Correspond aux 3 champs commentaire de la relation rechange, issue des champs "COM1","COM2","COM3".</description>
            <index type="int" name="level" size="3"/>
         </property>
         <property name="Spc" type="da.business.ft.SparePartsClassificationFt" implemented-as="String" length="1" definition="SECONDARY" read-only="true">
            <description lang="fr">Signifie : Spare Part Classification, issue du champ "SPC".</description>
         </property>
         <property name="Select" type="da.business.ft.SelectFt" implemented-as="String" length="1" definition="SECONDARY" read-only="true">
            <description lang="fr">Code de sélection rechange, issue du champ "SELECT".</description>
         </property>
         <property name="Category" type="da.ibacs.business.enums.Category" implemented-as="String" length="1" definition="SECONDARY" read-only="true">
            <description lang="fr">Code de catégorie, issue du champ "CATEG".</description>
         </property>
         <property name="Nti" type="da.ibacs.business.enums.MaintenanceSupportOrganisation" implemented-as="String" length="1" read-only="true" definition="SECONDARY">
            <description lang="fr">Niveau technique d'intervention calculé à partir de la quantité par échelon.
Quantié ECHELON_1 non nulle => NTI1
ou Quantié ECHELON_2 non nulle => NTI2
ou Quantié ECHELON_4 non nulle => NTI3</description>
         </property>
         <property name="Llu" type="String" length="6" definition="SECONDARY" read-only="true">
            <description lang="fr">Signifie : Limit Life in Utilization, issue des champs "LLU1" et "LLU2".</description>
            <index type="da.ibacs.business.enums.LimitLifeInUtilizationType" name="type" values="TYPE_1 TYPE_2"/>
         </property>
         <property name="Ullu" type="String" length="1" definition="SECONDARY" read-only="true">
            <description lang="fr">Signifie : Limit Life in Utilization Unit, issue des champs "ULLU1" et "ULLU2".</description>
            <index type="da.ibacs.business.enums.LimitLifeInUtilizationType" name="type" values="TYPE_1 TYPE_2"/>
         </property>
      </element>

      <element type="da.ibacs.RefProductFtEvolution">
         <description lang="fr">Cette relation sert à définir une évolution d'un Produit FT vers un autre Produit FT.
Au niveau IBACS, la complexité de la relation du FT n'est pas reproduite.</description>
         <type-id name="RefProductFt -- RefProductFt (Evolution: From -- To)"/>
         <id type="da.ibacs.business.ids.RefProductFtEvolutionId" implemented-as="da.ibacs.impl.jpa.RefProductFtEvolutionKey">
            <field name="From"/>
            <field name="To"/>
            <field name="FamVar"/>
            <field name="IplCsnNumdossAutnum"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <tip role="From" type="da.ibacs.RefProductFt" navigable="false" multiplicity="*" dependency="DEFINED"/>
         <tip role="To" type="da.ibacs.RefProductFt" navigable="false" multiplicity="*" dependency="USED_WEAK"/>
         <property name="FamVar" type="String" length="10" read-only="true">
            <description lang="fr">Code Famille et Variante de l’Ensemble concerné par l’évolution.</description>
         </property>
         <property name="IplCsnNumdossAutnum" type="String" length="40" read-only="true">
            <description lang="fr">Le champ est une concaténation de 4 champs du fichier technique qui peuvent être vident.
{IPL;Csn;NumDoss;Autnum}</description>
         </property>
         <property name="Fam" type="String" length="3" definition="SECONDARY" read-only="true">
            <description lang="fr">Code Famille de l’Ensemble concerné par l’évolution.</description>
         </property>
         <property name="Var" type="String" length="6" definition="SECONDARY" read-only="true">
            <description lang="fr">Code Variante de l’Ensemble concerné par l’évolution.</description>
         </property>
         <property name="Ipl" type="String" length="6" definition="SECONDARY" read-only="true">
            <description lang="fr">Numéro d'IPL (signifie: Illustrated Part List)</description>
         </property>
         <property name="Csn" type="String" length="13" definition="SECONDARY" read-only="true">
            <description lang="fr">Point d'application (CSN) ou planche repère de l'IPL</description>
         </property>
         <property name="Numdoss" type="String" length="10" definition="SECONDARY" read-only="true">
            <description lang="fr">Numéro de dossier</description>
         </property>
         <property name="Autnum" type="String" length="8" definition="SECONDARY" read-only="true">
            <description lang="fr">Autre numéro</description>
         </property>
         <property name="EvolutionLine" type="da.ibacs.business.enums.FtEvolutionLine" implemented-as="String" length="500" packed="EXTERNAL_TYPE">
            <description lang="fr">Artifice d'implémentation permettant de stocker les propriétés dérivées concernant la relation dans une seule String.</description>
         </property>
         <property name="Date" type="java.util.Date" date-type="DATE" definition="SECONDARY" read-only="true">
            <description lang="fr">Date de l'évolution</description>
         </property>
         <property name="BusinessNumber" type="String" length="9" definition="SECONDARY" read-only="true">
            <description lang="fr">Numéro d'affaire</description>
         </property>
         <property name="StudyNumber" type="String" length="9" definition="SECONDARY" read-only="true">
            <description lang="fr">Numéro d'étude</description>
         </property>
         <property name="ModificationSource" type="String" length="9" definition="SECONDARY" read-only="true">
            <description lang="fr">Numéro de modification source</description>
         </property>
      </element>

      <element type="da.ibacs.RefProductFt_Manufacturer" read-only="true" definition="SECONDARY">
         <description lang="fr">Relation entre un Produit de Référence et un Fabricant.</description>
         <type-id name="RefProductFt -- Manufacturer"/>
         <tip role="RefProductFt" type="da.ibacs.RefProductFt" multiplicity="*" dependency="DEFINED"/>
         <tip role="Manufacturer" type="da.ibacs.Manufacturer" multiplicity="1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.RefProductFt_VersionSet" read-only="true">
         <description lang="fr">Cette relation permet de configurer l'association d'une Configuration à un Ft.
Cette configuration participe au calcul de la configuration des Ft.</description>
         <type-id name="RefProductFt -- VersionSet"/>
         <tip role="RefProductFt" type="da.ibacs.RefProductFt" multiplicity="*" dependency="DEFINED"/>
         <tip role="VersionSet" type="da.ibacs.VersionSet" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.RefProductFt_VersionSetApplicable" read-only="true">
         <description lang="fr">Cette relation permet de configurer l'association d'une Configuration à un Ft.
Cette configuration participe au calcul de la configuration des Ft.</description>
         <type-id name="RefProductFt -- VersionSetApplicable"/>
         <tip role="RefProductFtAsApplicable" plural="RefProductFtsAsApplicable" type="da.ibacs.RefProductFt" multiplicity="*" dependency="DEFINED"/>
         <tip role="VersionSetApplicable" type="da.ibacs.VersionSet" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>
   </domain>

   <domain name="Gse">
      <description lang="fr">Domaine dédié aux Moyens de Soutiens.

Les principaux éléments sont les suivants : 
- GSE : Moyen de Soutien. Identifié par un numéro DMS et récupéré de la base LSE.
- GSE-Set : Famille de MS. Regroupe les MS par fonctionnalité. Une applicabilité en Version est mise en place entre la famille et le MS.
- RefProductGse : Equivalent d'une proposition rechange pour les MS.

Liens :
- GseSetGse : Lien entre famille de MS et MS. Permet de configurer l'applicabilité en Version du MS.
- GseQuantity : Permet d'indiquer une quantité typée (par exemple : quantité proposée, quantité retenue, ...).
- GseEvolution : Lien entre différentes versions d'un même MS.
- GseSystemType : Permet d'indiquer l'applicabilité théorique d'un MS sur un avion.
- RefProductGseInstance : Lien de composition entre.</description>
      <depends-on>Business-Refs</depends-on>
      <depends-on>Commons</depends-on>
      <depends-on>External-Refs</depends-on>
      <depends-on>Impacts-Interface</depends-on>
      <depends-on>Lsa-Resources-Interface</depends-on>

      <element type="da.ibacs.Gse">
         <description lang="fr">Moyen de Soutien. Identifié par un numéro DMS et récupéré de la base LSE.
- GseQuantity : Permet d'indiquer une quantité typée (par exemple : quantité proposée, quantité retenue, ...).
- GseSystemType : Permet d'indiquer l'applicabilité théorique d'un MS sur un avion.
- Energy : Lien vers une MetaEnum pour indiquer l'energie du MS.
- Executor : Lien vers une MetaEnum pour indiquer le nom du Responsable d'exécution.
- Illustration : Lien vers une ExternalRef pour ajouter une image au MS.
- LinkedGse : Lien entre un MS et son/ses MS associé(s).
- Manufacturer : Lien vers le fabricant du MS.
- RefProductGse : Lien vers le Produit  associé au MS.</description>
         <life-cycle created-by="AUTO" updated-by="AUTO" removed-by="AUTO"/>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.EntityExternalRefSource</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.GseId" implemented-as="int">
            <description lang="fr">Id composé du préfixe "GSE" suivi d'un numéro incrémental.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
         </constructor>
         <static name="META_ENUM_GSE_EXECUTOR" type="da.ibacs.business.MetaEnumType.Value" value="MetaEnumType.INSTANCE.createOrFind(&quot;GseExecutor&quot;)"/>
         <static name="META_ENUM_GSE_ENERGY" type="da.ibacs.business.MetaEnumType.Value" value="MetaEnumType.INSTANCE.createOrFind(&quot;GseEnergy&quot;)"/>

         <!-- Primary properties -->
         <property name="Feature" type="String" length="4096">
            <description lang="fr">Propriété "Fonctionnalité" sert à décrire la fonction du Gse.
Récupérée de LSE.
Propriété indexée Français/Anglais.
            </description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="DMS" type="String" length="11">
            <description lang="fr">Numéro DMS du MS. Récupérée de LSE.</description>
         </property>
         <property name="Description" type="String" length="4096">
            <description lang="fr">Descriptif du MS. Propriété indexée Français/Anglais.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="State" type="da.ibacs.business.enums.GseState" implemented-as="String" length="1">
            <description lang="fr">État du MS : 
- 1 : En développement
- 2 : Premier exemple à valider
- 3 : Bon pour fabrication
- 4 : Définition à revoir
- 5 : Pas disponible.
Récupérée de LSE.
            </description>
         </property>
         <property name="Type" type="String" length="255">
            <description lang="fr">Type du MS. Récupérée de LSE.</description>
         </property>
         <property name="Nature" type="String" length="255">
            <description lang="fr">Nature du MS. Récupérée de LSE.</description>
         </property>
         <property name="MsoMask" type="da.ibacs.business.enums.MaintenanceSupportOrganisationMask" implemented-as="String" length="3" packed="EXTERNAL_TYPE">
            <description lang="fr">Masque des NTI.</description>
         </property>
         <property name="MsoEnabled" type="boolean" definition="SECONDARY">
            <description lang="fr">Accès au masque des nti (mso) via une propriété indexée.</description>
            <index type="da.ibacs.business.enums.MaintenanceSupportOrganisation" name="mso" values="NTI1 NTI2 NTI3"/>
         </property>
         <property name="UseTemperature" type="Integer">
            <description lang="fr">Température en utilisation. Indexée par Min et Max</description>
            <index type="da.ibacs.business.enums.Level" name="level" values="HIGH LOW"/>
         </property>
         <property name="StorageTemperature" type="Integer">
            <description lang="fr">Température en stockage. Indexée par Min et Max</description>
            <index type="da.ibacs.business.enums.Level" name="level" values="HIGH LOW"/>
         </property>
         <property name="UseHumidity" type="Integer">
            <description lang="fr">Humidité en utilisation. Indexée par Min et Max</description>
            <index type="da.ibacs.business.enums.Level" name="level" values="HIGH LOW"/>
         </property>
         <property name="StorageHumidity" type="Integer">
            <description lang="fr">Humidité en stockage. Indexée par Min et Max</description>
            <index type="da.ibacs.business.enums.Level" name="level" values="HIGH LOW"/>
         </property>
         <property name="UseAltitude" type="Integer">
            <description lang="fr">Altitude en utilisation.</description>
         </property>
         <property name="StorageAltitude" type="Integer">
            <description lang="fr">Altitude en stockage.</description>
         </property>
         <property name="Length" type="Float">
            <description lang="fr">Longueur en mètre. Indexée par utilisation et colisage</description>
            <index type="da.ibacs.business.enums.PackageMode" name="packageMode" values="USE SHIPPING"/>
         </property>
         <property name="Width" type="Float">
            <description lang="fr">Largeur en mètre. Indexée par utilisation et colisage</description>
            <index type="da.ibacs.business.enums.PackageMode" name="packageMode" values="USE SHIPPING"/>
         </property>
         <property name="Height" type="Float">
            <description lang="fr">Hauteur en mètre. Indexée par utilisation et colisage</description>
            <index type="da.ibacs.business.enums.PackageMode" name="packageMode" values="USE SHIPPING"/>
         </property>
         <property name="Volume" type="Float">
            <description lang="fr">Volume en mètre cube. Indexée par utilisation et colisage</description>
            <index type="da.ibacs.business.enums.PackageMode" name="packageMode" values="USE SHIPPING"/>
         </property>
         <property name="Weight" type="Float">
            <description lang="fr">Masse en kilogramme. Indexée par utilisation et colisage</description>
            <index type="da.ibacs.business.enums.PackageMode" name="packageMode" values="USE SHIPPING"/>
         </property>
         <property name="TdsState" type="da.ibacs.business.enums.GseTdsState" implemented-as="String" length="1">
            <description lang="fr">État de la Fiche des Caractéristiques Techniques : 
- 1 : Ne peut pas être générée
- 2 : À compléter
- 3 : À valider
- 4 : Finalisée</description>
         </property>
         <property name="TdsDate" type="java.util.Date" date-type="DATE">
            <description lang="fr">Date de dernière modification de la FCT.</description>
         </property>
         <property name="EnergyComment" type="String" length="255">
            <description lang="fr">Source d'énergie. Propriété indexée Français/Anglais.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="AssociatedGseComment" type="String" length="255">
            <description lang="fr">Moyen de soutien associé. Propriété indexée Français/Anglais.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>

         <!-- Secondary properties -->
         <property name="Designation" type="String" length="255" definition="SECONDARY" read-only="true">
            <description lang="fr">Désignation du MS. Attribut calculée depuis la valeur de la désignation du RefProductGse.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Nsn" type="String" length="20" definition="SECONDARY" read-only="true">
            <description lang="fr">Nsn du MS. Attribut calculée depuis la valeur du Nsn du RefProductGse.</description>
         </property>
      </element>

      <element type="da.ibacs.GseEvolution">
         <description lang="fr">Cette relation sert à définir une évolution d'un MS vers un autre MS.</description>
         <type-id name="Gse -- Gse (Evolution: From -- To)"/>
         <id type="da.ibacs.business.ids.GseEvolutionId" implemented-as="da.ibacs.impl.jpa.GseEvolutionKey">
            <description lang="fr">Id composé de deux GseId.</description>
            <field name="From"/>
            <field name="To"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <tip role="From" type="da.ibacs.Gse" navigable="false" multiplicity="*" dependency="USED_WEAK"/>
         <tip role="To" type="da.ibacs.Gse" navigable="false" multiplicity="*" dependency="USED_WEAK"/>

         <!-- Primary properties -->
         <property name="ModificationSource" type="String" length="20" read-only="true">
            <description lang="fr">Source de la modification.</description>
         </property>
         <property name="Origin" type="da.ibacs.business.enums.EntityOrigin" implemented-as="String" length="1" nullable="false">
            <description lang="fr">État unifié IBACS de l'origine du MS.</description>
         </property>
      </element>

      <element type="da.ibacs.GseQuantity">
         <description lang="fr">Cette relation sert à définir une quantité typée sur un MS.</description>
         <id type="da.ibacs.business.ids.GseQuantityId" implemented-as="int">
            <description lang="fr">Id composé d'un GseId et d'un MetaEnumId.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
            <arg name="Gse"/>
            <arg name="Type"/>
         </constructor>
         <tip role="Gse" type="da.ibacs.Gse" multiplicity="*" dependency="DEFINED"/>
         <tip role="Type" type="da.ibacs.MetaEnumValue" multiplicity="*" navigable="false" dependency="USED_WEAK"/>
         <static name="META_ENUM_GSE_QUANTITY_TYPE" type="da.ibacs.business.MetaEnumType.Value" value="MetaEnumType.INSTANCE.createOrFind(&quot;GseQuantityType&quot;)"/>

         <!-- Primary properties -->
         <property name="Quantity" type="int">
            <description lang="fr">Valeur de la quantité.</description>
         </property>
         <property name="Date" type="java.util.Date" date-type="DATE">
            <description lang="fr">Date</description>
         </property>
         <property name="Comment" type="String" length="2048">
            <description lang="fr">Commentaire associé à la quantité.</description>
         </property>
      </element>

      <element type="da.ibacs.GseQuantity_VersionSet">
         <description lang="fr">Cette relation permet de configurer l'association d'une Quantité à un VersionSet.</description>
         <type-id name="GseQuantity -- VersionSet"/>
         <tip role="GseQuantity" type="da.ibacs.GseQuantity" multiplicity="*" dependency="DEFINED"/>
         <tip role="VersionSet" type="da.ibacs.VersionSet" multiplicity="1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.GseSet" discriminator="GSES">
         <description lang="fr">Définition d'une famille de Moyens de Soutien IBACS.</description>
         <life-cycle created-by="AUTO" updated-by="AUTO" removed-by="AUTO"/>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.VersionSetGetter</implements>
         <implements>da.ibacs.LsaResource</implements>
         <implements>da.ibacs.EntityExternalRefSource</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.GseSetId" implemented-as="String" length="11">
            <description lang="fr">Id composé du suffixe "GSET" suivi d'un code ATA (2 chiffres) suivi d'un numéro incrémental (3 chiffres).</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
            <arg name="Ata" optional="true"/>
         </constructor>
         <!-- Properties primary -->
         <property name="Designation" type="String" length="255">
            <description lang="fr">Désignation du GseSet.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Comment" type="String" length="255">
            <description lang="fr">Commentaire sur le GseSet.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="LifeStatus" type="da.ibacs.business.enums.EntityLifeStatus" implemented-as="String" length="1" nullable="false" packed="EXTERNAL_TYPE">
            <description lang="fr">Life Status sur le GseSet.</description>
         </property>
         <!-- Properties secondary -->
         <property name="Ata" type="int" definition="SECONDARY" read-only="true">
            <description lang="fr">Propriété calculée depuis l'ID. Code ATA du GseSet</description>
         </property>
      </element>

      <element type="da.ibacs.GseSetGse" dao-hint="LAZY">
         <description lang="fr">Cette relation permet d'associer un MS à une famille de MS. Cette sur cette relation qu'est défini l'applicabilité d'un MS.</description>
         <type-id name="GseSetGse"/>
         <implements>da.ibacs.VersionSetSetter</implements>
         <id type="da.ibacs.business.ids.GseSetGseId" implemented-as="da.ibacs.impl.jpa.GseSetGseKey">
            <description lang="fr">Id composé d'un GseSetId et d'un GseId</description>
            <field name="Gse"/>
            <field name="GseSet"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <tip role="GseSet" type="da.ibacs.GseSet" multiplicity="*" dependency="DEFINED">
            <type-id name="GseSetGse -- GseSet"/>
            <xml target-export-mode="ATTACHED"/>
         </tip>
         <tip role="Gse" type="da.ibacs.Gse" multiplicity="*" dependency="USED_STRONG" navigable="false">
            <type-id name="GseSetGse -- Gse"/>
         </tip>
      </element>

      <element type="da.ibacs.GseSetGse_VersionSet">
         <description lang="fr">Cette relation permet l'association d'un GseSetGse (relation Famille MS -> MS) et d'un VersionSet.
C'est-à-dire de configurer l'applicabilité d'un MS.</description>
         <type-id name="GseSetGse -- VersionSet"/>
         <tip role="GseSetGse" type="da.ibacs.GseSetGse" multiplicity="*" dependency="DEFINED"/>
         <tip role="VersionSet" type="da.ibacs.VersionSet" multiplicity="1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <!-- Relation a passer a SECONDARY lorsque l'attribut "persistence" sera pris en compte dans la generation de code -->
      <element type="da.ibacs.GseSet_VersionSet" read-only="true" definition="PRIMARY" persistence="PERSISTED">
         <description lang="fr">Cette relation permet l'association d'un GseSet à un VersionSet. Il s'agit de la synthèse des Versions de l'ensembles des MS associés à la famille.
Cette relation est calculée.</description>
         <type-id name="GseSet -- VersionSet"/>
         <tip role="GseSet" type="da.ibacs.GseSet" multiplicity="*" dependency="DEFINED"/>
         <tip role="VersionSet" type="da.ibacs.VersionSet" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.GseSystemType">
         <description lang="fr">Relation entre un MS et un SystemType. Cette relation sert à définir l'applicabilité en Avion d'un MS.</description>
         <type-id name="Gse -- SystemType"/>
         <id type="da.ibacs.business.ids.GseSystemTypeId" implemented-as="da.ibacs.impl.jpa.GseSystemTypeKey">
            <field name="Gse"/>
            <field name="SystemType"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <tip role="Gse" type="da.ibacs.Gse" multiplicity="*" dependency="DEFINED"/>
         <tip role="SystemType" type="da.ibacs.SystemType" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
         <property name="Applicability" type="da.ibacs.business.enums.GseApplicabilityStatus" implemented-as="String" length="2">
            <description lang="fr">Propriété indexée. Pour chaque échelon, un status associé : 
- "Applicable",
- "Applicable Spécialiste",
- "Périmé",
- "Non applicable".</description>
            <index type="da.ibacs.business.enums.GseReparabilityEchelon" name="level" values="ECHELON_1 ECHELON_2 ECHELON_4 EI GV"/>
         </property>
         <property name="Mso" type="da.ibacs.business.enums.MaintenanceSupportOrganisationMask" implemented-as="String" length="3" definition="SECONDARY" read-only="true">
            <description lang="fr">Propriété calculée pour afficher OLM, ILM ou DLM plutôt que NTI1, NTI2 ou NTI3.</description>
         </property>
      </element>

      <element type="da.ibacs.Gse_Energy">
         <description lang="fr">Cette relation permet d'associer des Énergies à un MS.</description>
         <type-id name="Gse -- Energy"/>
         <tip role="Gse" type="da.ibacs.Gse" multiplicity="*" dependency="DEFINED"/>
         <tip role="Energy" plural="Energies" type="da.ibacs.MetaEnumValue" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.Gse_Executor">
         <description lang="fr">Cette relation permet d'associer un responsable d'exécution à un MS.</description>
         <type-id name="Gse -- Executor"/>
         <tip role="Gse" type="da.ibacs.Gse" multiplicity="*" dependency="DEFINED"/>
         <tip role="Executor" type="da.ibacs.MetaEnumValue" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.Gse_ExternalRef">
         <description lang="fr">Relation entre un MS et une ExternalRef, pour afficher l'image du MS.</description>
         <type-id name="Gse -- ExternalRef"/>
         <tip role="Gse" type="da.ibacs.Gse" multiplicity="*" dependency="DEFINED"/>
         <tip role="Illustration" type="da.ibacs.ExternalRef" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.Gse_Gse">
         <description lang="fr">Cette relation permet l'association de plusieurs MS.</description>
         <type-id name="Gse -- Gse"/>
         <tip role="Gse" type="da.ibacs.Gse" multiplicity="*" dependency="DEFINED"/>
         <tip role="AssociatedGse" type="da.ibacs.Gse" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.Gse_Manufacturer" read-only="true" definition="SECONDARY">
         <description lang="fr">Fabricant du MS. Lien calculée depuis la valeur du fabricant de l'article.</description>
         <type-id name="Gse -- Manufacturer"/>
         <tip role="Gse" type="da.ibacs.Gse" multiplicity="*" dependency="DEFINED"/>
         <tip role="Manufacturer" type="da.ibacs.Manufacturer" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.Gse_RefProductGse">
         <description lang="fr">Cette relation permet l'association d'un article à un MS.</description>
         <type-id name="Gse -- RefProductGse"/>
         <tip role="Gse" type="da.ibacs.Gse" multiplicity="1" dependency="DEFINED"/>
         <tip role="RefProductGse" type="da.ibacs.RefProductGse" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.RefProductGse">
         <description lang="fr">Définition d'une proposition d'article dans la base GSE.
Elle peut soit correspondre à un vrai article, soit être une proposition ou un brouillon.</description>
         <life-cycle created-by="AUTO" updated-by="AUTO" removed-by="AUTO"/>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.StandardSetGetter</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.RefProductGseId" implemented-as="int">
            <description lang="fr">Identifiant de la proposition rechange. Il s'agit d'un autonum.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
         </constructor>

         <property name="Origin" type="da.ibacs.business.enums.EntityOrigin" implemented-as="String" length="1" nullable="false" read-only="true" definition="SECONDARY">
            <description lang="fr">Origine de l'article.</description>
         </property>
         <property name="Designation" type="String" length="255">
            <description lang="fr">Désignation du RefProductGse. Importé de LSE.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Reference" type="String" length="32">
            <description lang="fr">Il s'agit de la référence du produit (format : [A-Z 0-9():;#._+,/'"=$@&amp;[-]]* maximum 32 caractères). Séparé par un tiret.</description>
         </property>
         <property name="ManufacturerCode" type="String" length="5" read-only="true" definition="SECONDARY">
            <description lang="fr">Accesseur du code fabriquant du produit (format : [A-Z0-9]{5})</description>
         </property>
         <property name="NoArt" type="Integer">
            <description lang="fr">Il s'agit du numéro du produit. Importé de AVM.</description>
         </property>
         <property name="Nsn" type="String" length="20">
            <description lang="fr">Nsn du RefProductGse. Importé de AVM.</description>
         </property>
         <property name="Comment" type="String" length="4096">
            <description lang="fr">Commentaire du RefProductGse.</description>
         </property>
         <method name="isAncestor" type="boolean">
            <description lang="fr">Cette méthode permet de vérifier avant l'ajout d'un élément, s'il n'est pas un ancêtre.</description>
            <arg name="other" type="da.ibacs.business.RefProductGse"/>
         </method>
         <method name="isLinked" type="boolean">
            <description lang="fr">Cette méthode permet de vérifier avant l'ajout d'un élément, si le lien n'existe pas déjà.</description>
            <arg name="other" type="da.ibacs.business.RefProductGse"/>
         </method>
      </element>

      <element type="da.ibacs.RefProductGseInstance">
         <description lang="fr">Relation de composition entre RefProductGse</description>
         <type-id name="RefProductGse -- RefProductGse"/>
         <id type="da.ibacs.business.ids.RefProductGseInstanceId" implemented-as="da.ibacs.impl.jpa.RefProductGseInstanceKey">
            <description lang="fr">Id composé de deux RefProductGseId</description>
            <field name="Child"/>
            <field name="Parent"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <tip role="Parent" type="da.ibacs.RefProductGse" multiplicity="*" dependency="DEFINED"/>
         <tip role="Child" plural="Children" type="da.ibacs.RefProductGse" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
         <property name="IndexOnPicture" type="Integer"/>
         <property name="Quantity" type="int"/>
      </element>

      <element type="da.ibacs.RefProductGse_Manufacturer">
         <description lang="fr">Fabricant de l'article.</description>
         <type-id name="RefProductGse -- Manufacturer"/>
         <tip role="RefProductGse" type="da.ibacs.RefProductGse" multiplicity="*" dependency="DEFINED"/>
         <tip role="Manufacturer" type="da.ibacs.Manufacturer" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.RefProductGse_StandardSet">
         <description lang="fr">Relation permettant de décrire l'applicabilité en termes de Standards d'un RefProductSE.</description>
         <type-id name="RefProductGse -- StandardSet"/>
         <life-cycle created-by="AUTO" updated-by="AUTO" removed-by="AUTO"/>
         <tip role="RefProductGse" type="da.ibacs.RefProductGse" multiplicity="*" dependency="DEFINED"/>
         <tip role="StandardSet" type="da.ibacs.StandardSet" multiplicity="0..1" navigable="false" dependency="USED_WEAK"/>
      </element>
   </domain>

   <domain name="Hums" prefix="Hums">
      <description lang="fr">Domaine dédié aux systèmes de type HUMS (Health and Usage Monitoring System).</description>
      <depends-on>Commons</depends-on>
      <depends-on>Impacts-Interface</depends-on>
      <depends-on>Troubleshooting-Interface</depends-on>
      <depends-on>Lsa-Resources</depends-on>

      <element type="da.ibacs.HumsAms">
         <description lang="fr">Entité contenant l'ensemble des libellés de panne LCM</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.HumsAmsId" implemented-as="String" length="255">
            <description lang="fr">Identification du libellé de panne LCM dans HUMS</description>
            <description lang="en">HUMS Identification of Additional Maintenance Software Label</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
            <arg name="HumsMaintenanceReportDictionary"/>
         </constructor>
         <tip role="HumsMaintenanceReportDictionary" type="da.ibacs.HumsMaintenanceReportDictionary" multiplicity="*" dependency="USED_WEAK"/>
         <property name="AmsId" type="String" length="255">
            <description lang="fr">Identification du libellé de panne LCM</description>
            <description lang="en">Identification of Additional Maintenance Software Label</description>
         </property>
         <property name="Label" type="String" length="255">
            <description lang="fr">Valeur en clair que l'on associe à chaque attribut.</description>
         </property>
         <property name="Category" type="String" length="255">
            <description lang="fr">Sous-ensemble de code LCM</description>
            <description lang="en">Subset code of Additional Maintenance Software Label</description>
         </property>
      </element>

      <element type="da.ibacs.HumsGroupRef">
         <description lang="fr">Entité contenant l'ensemble des groupes de référence de Filtrage et Synthèse CRM</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.HumsGroupRefId" implemented-as="int">
            <description lang="fr">Identification du groupe</description>
            <description lang="en">Identification of group</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
         </constructor>
         <property name="Mnemonic" type="String" length="255">
            <description lang="fr">Mnémonique du groupe</description>
            <description lang="en">Mnemonic associated with group</description>
         </property>
         <property name="System" type="String" length="255">
            <description lang="fr">Système</description>
            <description lang="en">System</description>
         </property>
         <property name="Label" type="String" length="255">
            <description lang="fr">Valeur en clair que l'on associe à chaque attribut.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Comment" type="String" length="255">
            <description lang="fr">Commentaire opérationnel d'un spécialiste</description>
            <description lang="en">Operationel Comment Specialist</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Type" type="String" length="255">
            <description lang="fr">Type</description>
            <description lang="en">Type</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Lock" type="boolean" getter-prefix="IS">
            <description lang="fr">Lock de l'objet quand celui-ci est modifié/incrémenté et doit être stocké</description>
            <description lang="en">Lock of the object when it's edit and need to be store</description>
         </property>
      </element>

      <element type="da.ibacs.HumsMaintenanceAircraft">
         <description lang="fr">Entité avion contenant l'ensemble des mots de maintenance (hors SCV)</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.HumsMaintenanceAircraftId" implemented-as="String" length="255">
            <description lang="fr">Identification de l'entité avion HUMS</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <property name="Name" type="String" length="255">
            <description lang="fr">Nom de l'avion</description>
            <description lang="en">Aircraft Name</description>
         </property>
         <property name="Description" type="String" length="255">
            <description lang="fr">Description de l'avion</description>
            <description lang="en">Aircraft description</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
      </element>

      <element type="da.ibacs.HumsMaintenanceAircraft_HumsMaintenanceAlarm">
         <description lang="fr">Lien dérivé entre un standard avion et ses Alarmes</description>
         <type-id name="HumsMaintenanceAircraft -- HumsMaintenanceAlarm"/>
         <tip role="MaintenanceAircraft" type="da.ibacs.HumsMaintenanceAircraft" multiplicity="*" dependency="DEFINED" collection="LIST"/>
         <tip role="MaintenanceAlarm" type="da.ibacs.HumsMaintenanceAlarm" multiplicity="*" dependency="USED_WEAK"/>
      </element>

      <element type="da.ibacs.HumsMaintenanceAlarm">
         <description lang="fr">Entité Identifiant les Alarmes</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.HumsMaintenanceAlarmId" implemented-as="String" length="255">
            <description lang="fr">Identification des Alarmes</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste</description>
            <arg name="Id"/>
         </constructor>
      </element>

      <element type="da.ibacs.HumsMaintenanceBit">
         <description lang="fr">Entité contenant l'ensemble des mots de maintenance (hors SCV)</description>
         <life-cycle created-by="AUTO" updated-by="AUTO" removed-by="NOBODY"/>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.HumsMaintenanceBitId" implemented-as="String" length="255">
            <description lang="fr">Identification du bit de maintenance HUMS.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
            <arg name="HumsMaintenanceWord"/>
         </constructor>
         <tip role="HumsMaintenanceWord" type="da.ibacs.HumsMaintenanceWord" multiplicity="*" dependency="DEFINED"/>

         <!-- Dico parameters -->
         <property name="Uid" type="String" length="80">
            <description lang="fr">Identifiant du bit</description>
            <description lang="en">Bit identifier</description>
         </property>
         <property name="Label" type="String" length="80">
            <description lang="fr">Libellé (LIBBIT)</description>
            <description lang="en">Label</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="BitNumber" type="int">
            <description lang="fr">Numéro du bit (NUMBIT)</description>
            <description lang="en">Bit number</description>
         </property>
         <property name="BitNumberHexa" type="String" definition="SECONDARY" read-only="true" length="4">
            <description lang="fr">Numéro du bit en Hexa</description>
            <description lang="en">Bit hexa number</description>
         </property>
         <property name="LruDisplayed" type="String" length="4">
            <description lang="fr">Unité Remplaçable en Ligne Visualisée (URLVISU)</description>
            <description lang="en">Replaceable Unit in Displayed Line</description>
         </property>
         <property name="CabinLabel" type="String" length="50">
            <description lang="fr">Libellé en cabine (LIBCAB)</description>
            <description lang="en">Label in cabin</description>
         </property>
         <property name="FailureType" type="da.ibacs.business.enums.HumsFailureType" implemented-as="String" length="1">
            <description lang="fr">Nature de la panne (TYPPAN)</description>
            <description lang="en">Failure type</description>
         </property>
         <property name="Kind" type="da.ibacs.business.enums.HumsKind" implemented-as="String" length="1">
            <description lang="fr">Genre de la panne (NATSRV)</description>
            <description lang="en">Kind of the failure</description>
         </property>
         <property name="Reserve" type="da.ibacs.business.enums.HumsReserve" implemented-as="String" length="1">
            <description lang="fr">Bit non utilisé (RESERVE)</description>
            <description lang="en">Bit unused</description>
         </property>
         <property name="OriginalDictionary" type="String" length="25" definition="SECONDARY" read-only="true">
            <description lang="fr">Version d'origine du dictionnaire (VERSION)</description>
            <description lang="en">Original dictionary version</description>
         </property>
         <property name="MnemoSyst" type="String" length="40" definition="SECONDARY" read-only="true">
            <description lang="fr">Mnémonique du Système associé au bit</description>
            <description lang="en">System mnemonic associated with bit</description>
         </property>
         <property name="MnemoWord" type="String" length="40" definition="SECONDARY" read-only="true">
            <description lang="fr">Mnémonique du Mot associé au bit</description>
            <description lang="en">Word mnemonic associated with bit</description>
         </property>
         <property name="Code" type="da.ibacs.business.enums.MaintenanceBitCode" implemented-as="String" length="25" definition="SECONDARY">
            <description lang="fr">Identifiant Hums du bit (IDBIT)</description>
            <description lang="en">Hums Bit Id</description>
         </property>
         <property name="OriginalVersion" type="String" length="25" definition="SECONDARY" read-only="true">
            <description lang="fr">Version Hums d'origine (VERSION)</description>
            <description lang="en">Original Hums version</description>
         </property>

         <!-- Transient parameters -->
         <property name="Duration" type="String" length="80">
            <description lang="fr">Durée</description>
            <description lang="en">Duration</description>
         </property>
         <property name="Frequency" type="String" length="255">
            <description lang="fr">Fréquence</description>
            <description lang="en">Frequency</description>
         </property>
         <property name="FligthPhase" type="String" length="255">
            <description lang="fr">Phase de vol</description>
            <description lang="en">Fligth Phase</description>
         </property>
         <property name="FugComment" type="String" length="2048">
            <description lang="fr">Commentaire de fugitif d'un spécialiste </description>
            <description lang="en">Transient Comment Specialist</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>

         <!-- FUNCTION parameters -->
         <property name="EqptOutput" type="String" length="255">
            <description lang="fr">Sortie équipement</description>
            <description lang="en">Output Equipment</description>
         </property>
         <property name="FuncComment" type="String" length="2048">
            <description lang="fr">Commentaire de fonction d'un spécialiste</description>
            <description lang="en">Function Comment Specialist</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>

         <!-- GROUP parameters -->
         <property name="Preponderant" type="boolean" getter-prefix="IS">
            <description lang="fr">CRM Prépondérant</description>
            <description lang="en">Preponderant CRM</description>
         </property>
         <property name="Secondary" type="boolean" getter-prefix="IS">
            <description lang="fr">CRM secondaire</description>
            <description lang="en">Secondary CRM</description>
         </property>
         <property name="GroupComment" type="String" length="2048">
            <description lang="fr">Commentaire de groupe d'un spécialiste</description>
            <description lang="en">Group Comment Specialist</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>

         <!-- LRU parameters -->
         <property name="Other" type="String" length="255">
            <description lang="fr">Autre</description>
            <description lang="en">Other</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="LruComment" type="String" length="255">
            <description lang="fr">Commentaire d'Url d'un spécialiste</description>
            <description lang="en">LRU Comment Specialist</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <method name="getOccurrence" type="da.ibacs.business.HumsMaintenanceBitOccurrence">
            <arg name="function" type="da.ibacs.business.HumsOperTechFuncRef"></arg>
         </method>
      </element>

      <element type="da.ibacs.HumsMaintenanceBitOccurrence" dao-hint="LAZY">
         <description lang="fr">Cette relation permet d'instancier un bit pour une liaison entre le bit et des OperTechFuncRef et un bit et des OperCommentRef.</description>
         <type-id name="HumsMaintenanceBitOccurrence"/>
         <life-cycle created-by="AUTO" updated-by="AUTO" removed-by="NOBODY"/>
         <id type="da.ibacs.business.ids.HumsMaintenanceBitOccurrenceId" implemented-as="int">
         </id>
         <functional-id name="FunctionalId" type="da.ibacs.business.ids.HumsMaintenanceBitOccurrenceFunctionalId">
            <field name="HumsMaintenanceBit"/>
            <field name="OperTechFuncRef"/>
         </functional-id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
            <arg name="FunctionalId"/>
         </constructor>
         <tip role="HumsMaintenanceBit" type="da.ibacs.HumsMaintenanceBit" multiplicity="*" dependency="DEFINED"/>
         <tip role="OperTechFuncRef" type="da.ibacs.HumsOperTechFuncRef" multiplicity="*" dependency="USED_WEAK"/>
      </element>

      <element type="da.ibacs.HumsMaintenanceBitOccurrence_HumsOperCommentRef">
         <description lang="fr">Cette relation permet d'associer une liste de commentaires à une occurrence Bit-Function</description>
         <type-id name="HumsMaintenanceBitOccurrence -- HumsOperCommentRef"/>
         <tip role="MaintenanceBitOccurrence" type="da.ibacs.HumsMaintenanceBitOccurrence" multiplicity="*" dependency="DEFINED"/>
         <tip role="OperCommentRef" type="da.ibacs.HumsOperCommentRef" multiplicity="*" dependency="USED_WEAK"/>
      </element>

      <element type="da.ibacs.HumsMaintenanceBit_HumsGroupRef">
         <description lang="fr">Cette relation permet d'associer une Bit de Maintenance à un Groupe de référence.</description>
         <type-id name="HumsMaintenanceBit -- HumsGroupRef"/>
         <tip role="HumsMaintenanceBit" type="da.ibacs.HumsMaintenanceBit" multiplicity="*" dependency="DEFINED"/>
         <tip role="GroupRef" type="da.ibacs.HumsGroupRef" multiplicity="*" dependency="USED_WEAK" collection="LIST"/>
      </element>

      <element type="da.ibacs.HumsMaintenanceBit_HumsMaintenanceSystem" definition="SECONDARY" read-only="true">
         <description lang="fr">Lien dérivé entre un bit et un système.</description>
         <type-id name="HumsMaintenanceBit -- HumsMaintenanceSystem"/>
         <tip role="HumsMaintenanceBit" type="da.ibacs.HumsMaintenanceBit" multiplicity="*" dependency="DEFINED"/>
         <tip role="HumsMaintenanceSystem" type="da.ibacs.HumsMaintenanceSystem" multiplicity="1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.HumsMaintenanceBit_HumsMaintenanceVersion">
         <description lang="fr">Cette relation permet d'associer une Bit de Maintenance à un ORS.</description>
         <type-id name="HumsMaintenanceBit -- HumsMaintenanceVersion"/>
         <tip role="HumsMaintenanceBit" type="da.ibacs.HumsMaintenanceBit" multiplicity="*" dependency="DEFINED"/>
         <tip role="HumsMaintenanceVersion" type="da.ibacs.HumsMaintenanceVersion" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.HumsMaintenanceBit_Lsac">
         <description lang="fr">Lien entre un bit et un Lsac.</description>
         <type-id name="HumsMaintenanceBit -- Lsac"/>
         <tip role="HumsMaintenanceBit" type="da.ibacs.HumsMaintenanceBit" multiplicity="*" dependency="DEFINED"/>
         <tip role="Lsac" type="da.ibacs.Lsac" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.HumsMaintenanceOrs">
         <description lang="fr">Entité contenant l'ensemble des mots de maintenance (hors SCV)</description>
         <life-cycle created-by="AUTO" updated-by="AUTO" removed-by="NOBODY"/>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.HumsMaintenanceOrsId" implemented-as="int">
            <description lang="fr">Identification du bit de maintenance HUMS (exemple 46.3.1.0)</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
            <arg name="HumsMaintenanceBit"/>
         </constructor>
         <tip role="HumsMaintenanceBit" type="da.ibacs.HumsMaintenanceBit" multiplicity="0..1" dependency="USED_WEAK"/>
         <!-- ORS parameters -->
         <static name="META_ENUM_ORS_FAILURE" type="da.ibacs.business.MetaEnumType.Value" value="MetaEnumType.INSTANCE.createOrFind(&quot;OrsFailure&quot;)">
            <description lang="fr">CRM à traquer ORV</description>
            <description lang="en">Ors Failure</description>
         </static>
         <static name="META_ENUM_AIRCRAFTSTD" type="da.ibacs.business.MetaEnumType.Value" value="MetaEnumType.INSTANCE.createOrFind(&quot;AircraftStd&quot;)">
            <description lang="fr">Standard avion</description>
            <description lang="en">Aircraft Standard</description>
         </static>
         <static name="META_ENUM_ORS_FINAL" type="da.ibacs.business.MetaEnumType.Value" value="MetaEnumType.INSTANCE.createOrFind(&quot;OrsFinal&quot;)">
            <description lang="fr">Optimisation de la Remise en Vol (ORV) final</description>
            <description lang="en">Optimized release to service Final</description>
         </static>
         <property name="DreadedEvent" type="boolean" getter-prefix="IS">
            <description lang="fr">Évènement  redouté</description>
            <description lang="en">Dreaded Event</description>
         </property>
         <property name="DreadedEventLabel" type="String" length="255">
            <description lang="fr">Libellé de l'évènement redouté</description>
            <description lang="en">Dreaded Event Label</description>
         </property>
         <property name="UntimelyFailure" type="boolean" getter-prefix="IS">
            <description lang="fr">CRM intempestif</description>
            <description lang="en">Untimely Failure</description>
         </property>
         <property name="ChangeCategory" type="String" length="2048">
            <description lang="fr">Catégorie de modification</description>
            <description lang="en">Change category</description>
         </property>
         <property name="EvolutionComments" type="String" length="2048">
            <description lang="fr">Commentaires de l'évolution</description>
            <description lang="en">Evolution Comments</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="CustomerRemarks" type="String" length="2048">
            <description lang="fr">Remarques client</description>
            <description lang="en">Customer Remarks</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="InternalRemarks1" type="String" length="2048">
            <description lang="fr">Remarques client n°1</description>
            <description lang="en">Internal Remarks number 2</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="InternalRemarks2" type="String" length="2048">
            <description lang="fr">Remarques client n°2</description>
            <description lang="en">Internal Remarks number 1</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="FlagRecord" type="da.ibacs.business.enums.HumsFlagRecord" implemented-as="String" length="1">
            <description lang="fr">Provoque l’activation du « flag enreg. » de l’agenda (ENREGINVAL)</description>
            <description lang="en">Enables activation of « flag enreg. » of agenda (ENREGINVAL)</description>
         </property>
         <property name="SystematicWarning" type="boolean" getter-prefix="IS">
            <description lang="fr">Warning systématique</description>
            <description lang="en">Systematic Warning</description>
         </property>
         <property name="SystematicWarningLabel" type="String" length="255">
            <description lang="fr">Libellé du warning systématique</description>
            <description lang="en">Systematic warning label</description>
         </property>
         <property name="NWarning" type="String" length="255">
            <description lang="fr">N warning</description>
            <description lang="en">N warning</description>
         </property>
         <property name="AlarmColor" type="String" length="255">
            <description lang="fr">Couleur de l'alarme</description>
            <description lang="en">Alarm Color</description>
         </property>
         <property name="NoGo" type="boolean" getter-prefix="IS">
            <description lang="fr">NOGO de l'avion</description>
            <description lang="en">NOGO plane</description>
         </property>
      </element>

      <element type="da.ibacs.HumsMaintenanceOrs_AircraftStd">
         <description lang="fr">Cette relation permet d'associer un ORV de Maintenance à un CRM à Traquer.</description>
         <type-id name="HumsMaintenanceOrs -- AircraftStd"/>
         <tip role="HumsMaintenanceOrs" type="da.ibacs.HumsMaintenanceOrs" multiplicity="*" dependency="DEFINED"/>
         <tip role="AircraftStd" type="da.ibacs.MetaEnumValue" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.HumsMaintenanceOrs_HumsMinNaviState">
         <description lang="fr">Lien dérivé entre un ORV et une valeur ENM.</description>
         <type-id name="HumsMaintenanceOrs -- HumsMinNaviState"/>
         <tip role="HumsMaintenanceOrs" type="da.ibacs.HumsMaintenanceOrs" multiplicity="*" dependency="DEFINED"/>
         <tip role="MinNaviState" type="da.ibacs.HumsMinNaviState" multiplicity="0..1" dependency="USED_WEAK" collection="LIST"/>
      </element>

      <element type="da.ibacs.HumsMaintenanceOrs_OrsFailure">
         <description lang="fr">Cette relation permet d'associer un ORS de Maintenance à un CRM à Traquer.</description>
         <type-id name="HumsMaintenanceOrs -- OrsFailure"/>
         <tip role="HumsMaintenanceOrs" type="da.ibacs.HumsMaintenanceOrs" multiplicity="*" dependency="DEFINED"/>
         <tip role="OrsFailure" type="da.ibacs.MetaEnumValue" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.HumsMaintenanceOrs_OrsFinal">
         <description lang="fr">Cette relation permet d'associer un ORS de Maintenance à un ORS.</description>
         <type-id name="HumsMaintenanceOrs -- OrsFinal"/>
         <tip role="HumsMaintenanceOrs" type="da.ibacs.HumsMaintenanceOrs" multiplicity="*" dependency="DEFINED"/>
         <tip role="OrsFinal" type="da.ibacs.MetaEnumValue" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.HumsMaintenanceReportDictionary">
         <description lang="fr">Dictionnaire CRM</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.HumsMaintenanceReportDictionaryId" implemented-as="String" length="255">
            <description lang="fr">Identification du dictionnaire CRM</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
            <arg name="HumsMaintenanceAircraft"/>
         </constructor>
         <tip role="HumsMaintenanceAircraft" type="da.ibacs.HumsMaintenanceAircraft" multiplicity="*" dependency="USED_WEAK"/>
         <property name="Name" type="String" length="255">
            <description lang="fr">Nom du dictionnaire CRM</description>
            <description lang="en">MR dictionary name</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Description" type="String" length="255">
            <description lang="fr">Description du dictionnaire CRM</description>
            <description lang="en">MR dictionary description</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Version" type="String" length="255">
            <description lang="fr">Version courante du dictionnaire CRM</description>
            <description lang="en">Current MR dictionary version</description>
         </property>
         <property name="Development" type="String" length="255">
            <description lang="fr">Étape de développement de l'avion</description>
            <description lang="en">Step of aircraft development</description>
         </property>
         <property name="Fico" type="String" length="255">
            <description lang="fr">Fico de référence</description>
            <description lang="en">Reference Fico</description>
         </property>
      </element>

      <element type="da.ibacs.HumsMaintenanceReportDictionary_HumsMaintenanceReportDictionary">
         <description lang="fr">Dictionnaire de référence.</description>
         <type-id name="HumsMaintenanceReportDictionary -- HumsMaintenanceReportDictionary (Composition: Parent -- Child)"/>
         <tip role="Parent" type="da.ibacs.HumsMaintenanceReportDictionary" multiplicity="0..1" dependency="DEFINED"/>
         <tip role="Child" plural="Children" type="da.ibacs.HumsMaintenanceReportDictionary" multiplicity="*" dependency="USED_WEAK"/>
      </element>

      <element type="da.ibacs.HumsMaintenanceSystem">
         <description lang="fr">Entité contenant l'ensemble des systèmes de maintenance (hors SCV)</description>
         <life-cycle created-by="AUTO" updated-by="AUTO" removed-by="NOBODY"/>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.HumsMaintenanceSystemId" implemented-as="String" length="255">
            <description lang="fr">Identifiant du système (de 0 à 255) (IDSYS)</description>
            <description lang="en">System identifier (de 0 à 255)</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <arg name="Id"/>
            <arg name="HumsMaintenanceVersion"/>
         </constructor>
         <tip role="HumsMaintenanceVersion" type="da.ibacs.HumsMaintenanceVersion" multiplicity="*" dependency="USED_WEAK"/>
         <property name="Code" type="int">
            <description lang="fr">Identifiant du système (IDSYS)</description>
            <description lang="en">System Id</description>
         </property>
         <property name="Mnemonic" type="String" length="4">
            <description lang="fr">Mnémonique (MNESYS)</description>
            <description lang="en">Mnemonic</description>
         </property>
         <property name="StoreFamilyMnemonic" type="String" length="10">
            <description lang="fr">Mnémonique de la famille emport</description>
            <description lang="en">Store Family Mnemonic</description>
         </property>
         <property name="StoreMnemonic" type="String" length="10">
            <description lang="fr">Mnémonique de l'emport</description>
            <description lang="en">Store Mnemonic</description>
         </property>
         <property name="RecordLimit" type="int">
            <description lang="fr">Butée de saturation : nombre maximum d’enregistrements de CRM (BUTSAT)</description>
            <description lang="en">Saturation stop : maximum number of MFR records</description>
         </property>
         <property name="Type" type="da.ibacs.business.enums.HumsTypeSystem" implemented-as="String" length="30">
            <description lang="fr">Nature du système, de l'équipement ou de l'emport (TYPSYS)</description>
            <description lang="en">Nature of system, equipment or store station</description>
         </property>
         <property name="Label" type="String" length="80">
            <description lang="fr">Libellé (LIBSYS)</description>
            <description lang="fr">Label</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="OriginalVersion" type="String" length="25" definition="SECONDARY" read-only="true">
            <description lang="fr">Version Hums d'origine</description>
            <description lang="en">Original Hums version</description>
         </property>
         <property name="OriginalDictionary" type="String" length="25" definition="SECONDARY" read-only="true">
            <description lang="fr">Version d'origine du dictionnaire (VERSION)</description>
            <description lang="en">Original dictionary version</description>
         </property>
         <property name="NumberOfChannels" type="int" definition="SECONDARY" read-only="true">
            <description lang="fr">Nombre de voies associées à un système (1 ou 2).</description>
         </property>
         <property name="StoreMnemonicYY" type="String" length="2" definition="SECONDARY" read-only="true">
            <description lang="fr">Mnémonique YY d'un emport.</description>
         </property>
         <method name="getHumsMaintenanceWord" type="da.ibacs.business.HumsMaintenanceWord">
            <description lang="fr">Cette méthode permet de déterminé un mot par son mnémonique.</description>
            <arg name="mnemonic" type="String"></arg>
         </method>
         <method name="getWordStartBit" type="Integer">
            <description lang="fr">Cette méthode permet de calculer le bit de départ d'un mot à partir de son Id.</description>
            <arg name="wordId" type="da.ibacs.business.ids.HumsMaintenanceWordId"></arg>
         </method>
      </element>

      <element type="da.ibacs.HumsMaintenanceSystemTraceability">
         <description lang="fr">Entité contenant l'ensemble du suivi des modifications d'un système</description>
         <life-cycle created-by="AUTO" updated-by="AUTO" removed-by="NOBODY"/>
         <id type="da.ibacs.business.ids.HumsMaintenanceSystemTraceabilityId" implemented-as="int">
            <description lang="fr">Identifiant de la trace (IDSYSTRC)</description>
            <description lang="en">Trace identifier</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <arg name="Id" optional="true"/>
         </constructor>
         <property name="Index" type="int">
            <description lang="fr">Index de modification du système</description>
            <description lang="en">Modification index of system</description>
         </property>
         <property name="RefDassault" type="String" length="255">
            <description lang="fr">Référence du système par Dassault</description>
            <description lang="en">System reference by Dassault</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="RefManufacturer" type="String" length="255">
            <description lang="fr">Référence du système par l'équipementier</description>
            <description lang="en">System reference by manufacturer</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="ModificationDate" type="java.util.Date" date-type="DATE"/>
         <property name="Editor" type="String" length="255"></property>
         <property name="Approver" type="String" length="255"></property>
         <property name="ModificationReason" type="String" length="1024"></property>
      </element>

      <element type="da.ibacs.HumsMaintenanceSystem_HumsMaintenanceOriginalVersion" definition="SECONDARY" read-only="true">
         <description lang="fr">Lien dérivé entre un système et sa version d'origine.</description>
         <type-id name="HumsMaintenanceSystem -- HumsMaintenanceVersion (Original)"/>
         <tip role="HumsMaintenanceSystem" type="da.ibacs.HumsMaintenanceSystem" multiplicity="*" dependency="DEFINED"/>
         <tip role="HumsMaintenanceOriginalVersion" type="da.ibacs.HumsMaintenanceVersion" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.HumsMaintenanceSystem_HumsMaintenanceReportDictionary" definition="SECONDARY" read-only="true">
         <description lang="fr">Lien dérivé entre un système et un Dictionary.</description>
         <type-id name="HumsMaintenanceSystem -- HumsMaintenanceReportDictionary"/>
         <tip role="HumsMaintenanceSystem" type="da.ibacs.HumsMaintenanceSystem" multiplicity="*" dependency="DEFINED"/>
         <tip role="DicoVersion" type="da.ibacs.HumsMaintenanceReportDictionary" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.HumsMaintenanceSystem_HumsMaintenanceSystemTraceability">
         <description lang="fr">Lien dérivé entre un système et une trace de modification de celui-ci.</description>
         <type-id name="HumsMaintenanceSystem -- HumsMaintenanceSystemTraceability"/>
         <tip role="HumsMaintenanceSystem" type="da.ibacs.HumsMaintenanceSystem" multiplicity="*" dependency="DEFINED"/>
         <tip role="HumsMaintenanceSystemTraceability" type="da.ibacs.HumsMaintenanceSystemTraceability" multiplicity="*" dependency="USED_WEAK"/>
      </element>

      <element type="da.ibacs.HumsMaintenanceVersion">
         <description lang="fr">Dictionnaire HUMS</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <id type="da.ibacs.business.ids.HumsMaintenanceVersionId" implemented-as="String" length="255">
            <description lang="fr">Identification du dictionnaire HUMS</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
            <arg name="HumsMaintenanceReportDictionary"/>
         </constructor>
         <tip role="HumsMaintenanceReportDictionary" type="da.ibacs.HumsMaintenanceReportDictionary" multiplicity="*" dependency="USED_WEAK"/>
         <property name="Description" type="String" length="255">
            <description lang="fr">Description du dictionnaire HUMS</description>
            <description lang="en">HUMS dictionary description</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Delivery" type="String" length="255">
            <description lang="fr">Livraison du dictionnaire HUMS</description>
            <description lang="en">HUMS dictionary delivery</description>
         </property>
         <property name="DBSReference" type="String" length="255">
            <description lang="fr">Reference DBS</description>
            <description lang="en">DBS Reference</description>
         </property>
         <property name="Version" type="String" length="255">
            <description lang="fr">Version de référence</description>
            <description lang="en">Reference Version</description>
         </property>
         <property name="CompactVersion" type="String" length="255" definition="SECONDARY" read-only="true">
            <description lang="fr">Version de référence compacte</description>
            <description lang="en">Compact reference Version</description>
         </property>
         <property name="Lock" type="boolean">
            <description lang="fr">Verrou de livraison</description>
            <description lang="en">Delivery Lock</description>
         </property>
         <property name="Merged" type="boolean">
            <description lang="fr">Version ORS Mergée</description>
            <description lang="en">Merged Version ORS</description>
         </property>
         <method name="getHumsMaintenanceSystem" type="da.ibacs.business.HumsMaintenanceSystem">
            <description lang="fr">Cette méthode permet de déterminé un système dans un mot à partir de son mnémonique.</description>
            <arg name="mnemonic" type="String"></arg>
         </method>
      </element>

      <element type="da.ibacs.HumsMaintenanceVersion_HumsMaintenanceVersion">
         <type-id name="HumsMaintenanceVersion -- HumsMaintenanceVersion (Composition: Parent -- Child)"/>
         <tip role="Parent" type="da.ibacs.HumsMaintenanceVersion" multiplicity="0..1" dependency="DEFINED"/>
         <tip role="Child" plural="Children" type="da.ibacs.HumsMaintenanceVersion" multiplicity="*" dependency="USED_WEAK"/>
      </element>

      <element type="da.ibacs.HumsMaintenanceWord">
         <description lang="fr">Entité contenant l'ensemble des mots de maintenance (hors SCV)</description>
         <life-cycle created-by="AUTO" updated-by="AUTO" removed-by="NOBODY"/>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.HumsMaintenanceWordId" implemented-as="String" length="255">
            <description lang="fr">Identification du mot de maintenance HUMS (IDMOT)</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
            <arg name="HumsMaintenanceSystem"/>
         </constructor>
         <tip role="HumsMaintenanceSystem" type="da.ibacs.HumsMaintenanceSystem" multiplicity="*" dependency="DEFINED"/>
         <property name="Code" type="da.ibacs.business.enums.MaintenanceWordCode" implemented-as="String" length="80" nullable="false" definition="SECONDARY">
            <description lang="fr">Code Hums identifiant un mot</description>
         </property>
         <property name="IndexWord" type="Integer" definition="SECONDARY" read-only="true">
            <description lang="fr">Index du mot associé à un système</description>
         </property>
         <property name="Mnemonic" type="String" length="20">
            <description lang="fr">Mnémonique (MNEMMT)</description>
            <description lang="en">Mnemonic</description>
         </property>
         <property name="SystemCode" type="Integer" definition="SECONDARY" read-only="true">
            <description lang="fr">Système associé au bit</description>
         </property>
         <property name="ChannelNumber" type="da.ibacs.business.enums.HumsChannelNumber" implemented-as="String" length="1">
            <description lang="fr">Numéro de la voie (NUMVOIE)</description>
            <description lang="en">Number of channel</description>
         </property>
         <property name="NbBits" type="int">
            <description lang="fr">Nombre de bits (NBBITS)</description>
            <description lang="en">Number of bits</description>
         </property>
         <property name="Unit" type="String" length="25">
            <description lang="fr">Unité des données complémentaires (UNITE)</description>
            <description lang="en">Unity of complementaries failure words</description>
         </property>
         <property name="Reserve" type="da.ibacs.business.enums.HumsReserve" implemented-as="String" length="1">
            <description lang="fr">Mot non utilisée (RESERVE)</description>
            <description lang="en">Word unused</description>
         </property>
         <property name="Label" type="String" length="80">
            <description lang="fr">Libellé (LIBMMT)</description>
            <description lang="en">Label</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="StartBit" type="Integer" definition="SECONDARY" read-only="true">
            <description lang="fr">Bit début dans la table MOTPANNE (BITDEB)</description>
            <description lang="en">Start bit in the failure table</description>
         </property>
         <property name="WordType" type="String" length="20">
            <description lang="fr">Libellé du type de mot (LIBTMM)</description>
            <description lang="en">Word type</description>
         </property>
         <property name="LsbCfw" type="String" length="9">
            <description lang="fr">LSB données complémentaires (LSBDCOMP)</description>
            <description lang="en">LSB of the the complementaries failure words</description>
         </property>
         <property name="MnemoCab" type="String" length="20">
            <description lang="fr">Mnémonique cabine des données complémentaires (MNECAB)</description>
            <description lang="en">"Mnemonic cabin of complementaries failure words"</description>
         </property>
         <property name="ValBit" type="int" read-only="false">
            <description lang="fr">Bit de validité des données complémentaires (BITVAL)</description>
            <description lang="en">Validity bit of complementaries failure words</description>
         </property>
         <property name="MnemoEqpt" type="String" length="20">
            <description lang="fr">Mnémonique de l'équipement</description>
            <description lang="en">"Mnemonic of Equipment"</description>
         </property>
         <property name="OriginalVersion" type="String" length="25" definition="SECONDARY" read-only="true">
            <description lang="fr">Version Hums d'origine</description>
            <description lang="en">Original Hums version</description>
         </property>
         <property name="OriginalDictionary" type="String" length="25" definition="SECONDARY" read-only="true">
            <description lang="fr">Version d'origine du dictionnaire (VERSION)</description>
            <description lang="en">Original dictionary version</description>
         </property>
         <method name="getHumsMaintenanceBit" type="da.ibacs.business.HumsMaintenanceBit">
            <description lang="fr">Cette méthode permet de déterminé un bit dans un mot à partir de son numéro.</description>
            <arg name="bitNumber" type="int"></arg>
         </method>
      </element>

      <element type="da.ibacs.HumsMaintenanceWord_HumsMaintenanceVersion" definition="SECONDARY" read-only="true">
         <description lang="fr">Lien dérivé entre un système et un mot CRM.</description>
         <type-id name="HumsMaintenanceWord -- HumsMaintenanceVersion"/>
         <tip role="HumsMaintenanceWord" type="da.ibacs.HumsMaintenanceWord" multiplicity="*" dependency="DEFINED"/>
         <tip role="HumsVersion" type="da.ibacs.HumsMaintenanceVersion" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.HumsMinNaviState">
         <description lang="fr">Entité contenant l'ENM (État Navigable Minimum)</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.HumsMinNaviStateId" implemented-as="String" length="10">
            <description lang="fr">Identifiant de l'ENM (de 0 à 255)</description>
            <description lang="en">Number NaviState identifier (de 0 à 255)</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <arg name="Id"/>
         </constructor>
         <property name="Type" type="da.ibacs.business.enums.HumsTypeSystemENM" implemented-as="String" length="30">
            <description lang="fr">Nature du système, de l'équipement ou de l'emport (TYPEQPT)</description>
            <description lang="en">Nature of system, equipment or store station</description>
         </property>
         <property name="Number" type="int">
            <description lang="fr">Numéro ENM (NUM_MENM)</description>
            <description lang="en">MinNaviState Number</description>
         </property>
         <property name="Label" type="String" length="2000">
            <description lang="fr">Libellé (LIBELLE_MENM)</description>
            <description lang="en">Label</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Lock" type="boolean" getter-prefix="IS">
            <description lang="fr">Lock de l'objet quand celui-ci est modifié/incrémenté et doit être stocké</description>
            <description lang="en">Lock of the object when it's edit and need to be store</description>
         </property>
      </element>

      <element type="da.ibacs.HumsOperCommentRef">
         <description lang="fr">Entité contenant l'ensemble des Commentaires Opérationnels de Filtrage et Synthèse CRM</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.HumsOperCommentRefId" implemented-as="int">
            <description lang="fr">Identification des Commentaires Opérationnels FSCRM</description>
            <description lang="en">Identification of FSMR operational reviews</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
         </constructor>
         <property name="Mnemonic" type="String" length="255">
            <description lang="fr">Mnémonique du commentaire</description>
            <description lang="en">Mnemonic associated with comment</description>
         </property>
         <property name="Label" type="String" length="255">
            <description lang="fr">Valeur en clair que l'on associe à chaque attribut.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Comment" type="String" length="255">
            <description lang="fr">Commentaire opérationnel d'un spécialiste</description>
            <description lang="en">Operationel Comment Specialist</description>
         </property>
         <property name="Lock" type="boolean" getter-prefix="IS">
            <description lang="fr">Lock de l'objet quand celui-ci est modifié/incrémenté et doit être stocké</description>
            <description lang="en">Lock of the object when it's edit and need to be store</description>
         </property>
      </element>

      <element type="da.ibacs.HumsOperTechFuncRef">
         <description lang="fr">Entité contenant l'ensemble des fonctions techniques opérationnelles</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.HumsOperTechFuncRefId" implemented-as="int">
            <description lang="fr">Identification des fonctions techniques opérationnelles</description>
            <description lang="en">Identification of operational technical functions</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <arg name="Id" optional="true"/>
         </constructor>
         <property name="Mnemonic" type="String" length="255">
            <description lang="fr">Mnémonique</description>
            <description lang="en">Mnemonic</description>
         </property>
         <property name="Function" type="String" length="255">
            <description lang="fr">Fonction</description>
            <description lang="en">Function Label</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="SubFunction" type="String" length="255">
            <description lang="fr">Sous-fonction</description>
            <description lang="en">SubFunction</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Option" type="String" length="255">
            <description lang="fr">Option de la Sous-fonction</description>
            <description lang="en">SubFunction Option</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Lock" type="boolean" getter-prefix="IS">
            <description lang="fr">Lock de l'objet quand celui-ci est modifié/incrémenté et doit être stocké</description>
            <description lang="en">Lock of the object when it's edit and need to be store</description>
         </property>
      </element>

      <element type="da.ibacs.HumsOperTechFuncRef_HumsOperCommentRef">
         <description lang="fr">Lien dérivé entre une version HUMS et un Commentaire Opérationnel de référence.</description>
         <type-id name="HumsOperTechFuncRef -- HumsOperCommentRef"/>
         <tip role="OperTechFuncRef" type="da.ibacs.HumsOperTechFuncRef" multiplicity="*" dependency="DEFINED"/>
         <tip role="OperCommentRef" type="da.ibacs.HumsOperCommentRef" multiplicity="*" dependency="USED_WEAK" collection="LIST"/>
      </element>

      <element type="da.ibacs.HumsRawFcs">
         <description lang="fr">Entité contenant l'ensemble des groupes</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <id type="da.ibacs.business.ids.HumsRawFcsId" implemented-as="String" length="255">
            <description lang="fr">Identification des SCV bruts</description>
            <description lang="en">Identification of raw Flight Control System</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
            <arg name="HumsMaintenanceReportDictionary"/>
         </constructor>
         <tip role="HumsMaintenanceReportDictionary" type="da.ibacs.HumsMaintenanceReportDictionary" multiplicity="*" dependency="USED_WEAK"/>
         <property name="FcsId" type="String" length="255">
            <description lang="en">Identification of Flight Control System (IDSCV)</description>
         </property>
         <property name="Label" type="String" length="255">
            <description lang="fr">Valeur en clair que l'on associe à chaque attribut.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Nature" type="String" length="255">
            <description lang="fr">Nature de la panne</description>
            <description lang="en">Nature of failure</description>
         </property>
         <property name="Category" type="String" length="255">
            <description lang="fr">Catégorie de la panne</description>
            <description lang="en">Category of failure</description>
         </property>
      </element>

      <element type="da.ibacs.HumsSynonymous">
         <description lang="fr">Entité contenant l'ensemble des mots contenant des synonymes</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.HumsSynonymousId" implemented-as="int">
            <description lang="fr">Identification d'un mot contenant des synonymes</description>
         </id>
         <!-- <functional-id name="FunctionalId" type="String">
            <field name="Label"/>
            </functional-id> -->
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
         </constructor>
         <property name="Label" type="String" length="80">
            <description lang="fr">Libellé d'un mot contenant des synonymes</description>
         </property>
         <property name="Language" type="da.ibacs.business.Language" implemented-as="String" length="2" nullable="false">
            <description lang="fr">Langue du synonyme.</description>
         </property>
         <property name="Values" type="da.util.types.StringList" implemented-as="String" length="1024">
            <description lang="fr">Liste ordonnées des Synonymes.
D'un point de vue implémentation, cette liste est stockée sous forme d'une chaine de caractères,
en utilisant le caractère ';' (ou ',') entre les littéraux.</description>
         </property>
      </element>

      <element type="da.ibacs.MaintenanceBit">
         <description lang="fr">Entité contenant l'ensemble des libellés des bits de panne CRM</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <implements>da.ibacs.Symptom</implements>
         <id type="da.ibacs.business.ids.MaintenanceBitId" implemented-as="String" length="255">
            <description lang="fr">Identification d'un libellé de panne dans un dictionnaire CRM</description>
            <description lang="en">Identification of Maintenance Report Label</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
            <arg name="MaintenanceWord"/>
         </constructor>
         <tip role="MaintenanceWord" type="da.ibacs.MaintenanceWord" multiplicity="*" dependency="DEFINED"/>
         <property name="Label" type="String" length="255">
            <description lang="fr">Valeur en clair que l'on associe à chaque attribut.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Code" type="da.ibacs.business.enums.MaintenanceBitCode" implemented-as="String" length="80" nullable="false" definition="SECONDARY">
            <description lang="fr">Code Hums identifiant un bit</description>
         </property>
         <property name="MnemonicSystem" type="String" length="4" definition="SECONDARY" read-only="true">
            <description lang="fr">Mnémonique du système associé au bit</description>
         </property>
         <property name="MnemonicWord" type="String" length="4" definition="SECONDARY" read-only="true">
            <description lang="fr">Mnémonique du mot associé au bit</description>
         </property>
         <property name="SystemCode" type="Integer" definition="SECONDARY" read-only="true">
            <description lang="fr">Système associé au bit</description>
         </property>
         <property name="WordType" type="Integer" definition="SECONDARY">
            <description lang="fr">Type du mot associé au bit</description>
         </property>
         <property name="WordOrder" type="Integer" definition="SECONDARY">
            <description lang="fr">Numéro d'ordre du mot associé au bit</description>
         </property>
         <property name="BitNumber" type="Integer" definition="SECONDARY" read-only="true">
            <description lang="fr">Numéro du bit</description>
         </property>
         <property name="OriginalDictionary" type="String" length="255" definition="SECONDARY" read-only="true">
            <description lang="fr">Version du dictionnaire associée au bit</description>
         </property>
         <property name="Type" type="da.ibacs.business.enums.SymptomType" implemented-as="String" length="3" read-only="true" definition="SECONDARY">
            <description lang="fr">Type de symptôme (BIT).</description>
         </property>
      </element>

      <element type="da.ibacs.MaintenanceBitHumsMaintenanceBit">
         <description lang="fr">Relation lourde entre un bit CRM et un bit Hums.</description>
         <description lang="fr">__TODO__ MaintenanceBit multiplicity="1"</description>
         <id type="da.ibacs.business.ids.MaintenanceBitHumsMaintenanceBitId" implemented-as="da.ibacs.impl.jpa.MaintenanceBitHumsMaintenanceBitKey">
            <description lang="fr">Identification composite de la relation</description>
            <field name="MaintenanceBit"/>
            <field name="HumsMaintenanceBit"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
         </constructor>
         <tip role="MaintenanceBit" type="da.ibacs.MaintenanceBit" multiplicity="1" dependency="DEFINED"/>
         <tip role="HumsMaintenanceBit" type="da.ibacs.HumsMaintenanceBit" multiplicity="*" dependency="USED_WEAK"/>
         <property name="Applicability" type="String" length="1024">
            <description lang="fr">Applicabilité du bit Hums</description>
         </property>
      </element>

      <element type="da.ibacs.MaintenanceBit_HumsMaintenanceVersion" definition="SECONDARY" read-only="true">
         <description lang="fr">Lien dérivé entre un bit de maintenance et une vertsion Hums</description>
         <tip role="MaintenanceBit" type="da.ibacs.MaintenanceBit" multiplicity="*"/>
         <tip role="HumsMaintenanceVersion" type="da.ibacs.HumsMaintenanceVersion" navigable="false" multiplicity="*"/>
      </element>

      <element type="da.ibacs.MaintenanceWord">
         <description lang="fr">Entité contenant l'ensemble des mots de panne CRM</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.MaintenanceWordId" implemented-as="String" length="255">
            <description lang="fr">Identification d'un libellé de panne dans un dictionnaire CRM</description>
            <description lang="en">Identification of Maintenance Report Label</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <property name="Code" type="da.ibacs.business.enums.MaintenanceWordCode" implemented-as="String" length="80" nullable="false" definition="SECONDARY">
            <description lang="fr">Code Hums identifiant un mot</description>
         </property>
         <property name="MnemonicSystem" type="String" length="4" definition="SECONDARY" read-only="true">
            <description lang="fr">Mnémonique du système associé au bit</description>
         </property>
         <property name="MnemonicWord" type="String" length="4" definition="SECONDARY" read-only="true">
            <description lang="fr">Mnémonique du mot associé au bit</description>
         </property>
         <property name="IndexWord" type="Integer">
            <description lang="fr">Index du mot associé à un système</description>
         </property>
         <property name="SystemCode" type="Integer" definition="SECONDARY" read-only="true">
            <description lang="fr">Système associé au bit</description>
         </property>
         <property name="WordType" type="Integer">
            <description lang="fr">Type du mot associé au bit</description>
         </property>
         <property name="WordOrder" type="Integer">
            <description lang="fr">Numéro d'ordre du mot associé à un système</description>
         </property>
      </element>

      <element type="da.ibacs.MaintenanceWordHumsMaintenanceWord">
         <description lang="fr">Relation lourde entre un Word CRM et un Word Hums.</description>
         <description lang="fr">__TODO__ MaintenanceWord multiplicity="1"</description>
         <id type="da.ibacs.business.ids.MaintenanceWordHumsMaintenanceWordId" implemented-as="da.ibacs.impl.jpa.MaintenanceWordHumsMaintenanceWordKey">
            <description lang="fr">Identification composite de la relation</description>
            <field name="MaintenanceWord"/>
            <field name="HumsMaintenanceWord"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
         </constructor>
         <tip role="MaintenanceWord" type="da.ibacs.MaintenanceWord" multiplicity="1" dependency="DEFINED"/>
         <tip role="HumsMaintenanceWord" type="da.ibacs.HumsMaintenanceWord" multiplicity="*" dependency="USED_WEAK"/>
         <property name="Applicability" type="String" length="1024">
            <description lang="fr">Applicabilité du Word Hums</description>
         </property>
      </element>
   </domain>

   <domain name="Impacts">
      <depends-on>Explanations</depends-on>
      <depends-on>Impacts-Interface</depends-on>

      <element type="da.ibacs.Impact">
         <description lang="fr">Impact potentiel, avéré ou non avéré d'une source sur une cible.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="USER"/>
         <id type="da.ibacs.business.ids.ImpactId" implemented-as="da.ibacs.impl.jpa.ImpactKey">
            <description lang="fr">Identification de l'impact.</description>
            <field name="Source"/>
            <field name="Target"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <tip role="Source" type="da.ibacs.ImpactSource" navigable="false" multiplicity="*" dependency="USED_WEAK">
            <description lang="fr">Element source de l'impact.</description>
         </tip>
         <tip role="Target" type="da.ibacs.ImpactTarget" navigable="false" multiplicity="*" dependency="USED_WEAK">
            <description lang="fr">Element cible de l'impact.</description>
         </tip>
         <property name="Type" type="da.ibacs.business.enums.ImpactType" implemented-as="String" length="1" packed="EXTERNAL_TYPE">
            <description lang="fr">Type de l'impact : potentiel, avéré ou non avéré.</description>
         </property>
      </element>

      <element type="da.ibacs.Impact_Explanation" read-only="true" definition="SECONDARY">
         <description lang="fr">Lien dérivé entre un impact et la dernière explication trouvée.</description>
         <type-id name="Impact -- Explanation"/>
         <tip role="Impact" type="da.ibacs.Impact" multiplicity="*" collection="LIST" dependency="DEFINED"/>
         <tip role="Explanation" type="da.ibacs.Explanation" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>
   </domain>

   <domain name="Impacts-Interface">
      <description lang="fr">Il s'agit d'un domaine virtuel permettant de déclarer les interfaces du domaine Impacts.
 Le but est de supprimer les dépendances inter-domaine.</description>
      <interface type="da.ibacs.ImpactSource" referenceable="true">
         <description lang="fr">Interface implémentée par les classes des objets qui peuvent être la source d'impacts.</description>
      </interface>

      <interface type="da.ibacs.ImpactTarget" referenceable="true">
         <description lang="fr">Interface implémentée par les classes des objets qui peuvent être la cible d'impacts.</description>
      </interface>
   </domain>

   <domain name="Indicators">
      <description lang="fr">Domaine dédié aux indicateurs (RETEX, ...).</description>
      <depends-on>Commons</depends-on>
      <depends-on>Impacts-Interface</depends-on>
      <depends-on>Business-Refs</depends-on>
      <depends-on>Resources</depends-on>

      <element type="da.ibacs.Indicator">
         <description lang="fr">Définition d'un Indicateur.
Il s'agit d'une valeur numérique associée à un n-uplet (Famille, Type, Nature, Unité, , Versions, Affaire).
Dans ce n-uplet, la Famille, le Type et la Nature sont obligatoires, l'Affaire et les Versions sont facultatifs.
Quand la valeur est explicitement définie, l'unité correspondante doit être renseignée.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.IndicatorId" implemented-as="int">
            <description lang="fr">Identificateur de l'indicateur.
Le vrai identificateur est l'identificateur fonctionnel. Mais, pour des raisons techniques, il ne peut être utilisé directement.</description>
         </id>
         <functional-id name="FunctionalId" type="da.ibacs.business.ids.IndicatorFunctionalId">
            <description lang="fr">La vrai clé d'un indicateur est composée de 6 éléments or le VersionSet, le Business et l'Unit peuvent être nuls.
C'est pourquoi un functionalId est introduit.</description>
            <field name="IndicatorType"/>
            <field name="ProductSet"/>
            <field name="Nature"/>
            <field name="VersionSet"/>
            <field name="Business"/>
            <field name="Unit"/>
         </functional-id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
            <arg name="FunctionalId"/>
         </constructor>
         <tip role="IndicatorType" type="da.ibacs.IndicatorType" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
         <tip role="ProductSet" type="da.ibacs.ProductSet" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
         <tip role="VersionSet" type="da.ibacs.VersionSet" multiplicity="*" nullable="true" dependency="USED_WEAK" navigable="false"/>
         <tip role="Business" type="da.ibacs.Business" multiplicity="*" nullable="true" dependency="USED_WEAK" navigable="false"/>
         <tip role="Unit" type="da.ibacs.Unit" multiplicity="*" nullable="true" dependency="USED_WEAK" navigable="false"/>
         <property name="Justification" type="String" length="255">
            <description lang="fr">Texte explicatif (En français et en anglais) associé à l'Indicateur.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Nature" type="da.ibacs.business.enums.IndicatorNature" implemented-as="String" length="1" read-only="true" packed="EXTERNAL_TYPE" nullable="false">
            <description lang="fr">Nature de l'indicateur. Un Indicateur peut être Théorique, Constaté, Projeté ou Retenu Proposition.</description>
         </property>
         <property name="Value" type="String" length="255">
            <description lang="fr">Valeur de l'Indicateur.
Ce peut être une valeur numérique (auquel cas l'unité doit être renseignée) ou un texte renvoyant à autre chose.</description>
         </property>
         <property name="PublicationDate" type="java.util.Date" date-type="DATE">
            <description lang="fr">Date de publication de l'Indicateur.</description>
         </property>
         <property name="StartingDate" type="java.util.Date" date-type="DATE">
            <description lang="fr">Uniquement valable pour les Indicateurs Constatés.</description>
         </property>
         <property name="EndingDate" type="java.util.Date" date-type="DATE">
            <description lang="fr">Uniquement valable pour les Indicateurs Constatés.</description>
         </property>
         <property name="NumericValue" getter-prefix="HAS" type="boolean" read-only="true" definition="SECONDARY"/>
      </element>

      <element type="da.ibacs.IndicatorType">
         <description lang="fr">Définition d'un Type d'Indicateur.
Il peut être associé à une unité par défaut.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.Describable</implements>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.IndicatorTypeId" implemented-as="String" length="64"/>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <property name="Description" type="String" length="255">
            <description lang="fr">Description (En français et en anglais) du Type d'Indicateur.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
      </element>

      <element type="da.ibacs.IndicatorType_Unit">
         <description lang="fr">Relation entre un Type d'Indicateur et son Unité par défaut.</description>
         <type-id name="IndicatorType -- Unit"/>
         <tip role="IndicatorType" type="da.ibacs.IndicatorType" multiplicity="*" dependency="DEFINED"/>
         <tip role="DefaultUnit" type="da.ibacs.Unit" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>
   </domain>

   <domain name="IndicatorsNew" prefix="Indicator" purpose="DOCUMENTATION">
      <description lang="fr">Domaine dédié à la nouvelle définition des indcateurs (RETEX, ...).</description>
      <depends-on>Business-Refs</depends-on>
      <depends-on>Commons</depends-on>
      <depends-on>Impacts-Interface</depends-on>
      <depends-on>Resources</depends-on>

      <element type="da.ibacs.IndicatorPublication" purpose="DOCUMENTATION">
         <description lang="fr">Définition des informations de publication des indicateurs.
Ces informations sont valables pour une nature d'indicateur et une applicabilité donnée.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.IndicatorPublicationId" implemented-as="int">
            <description lang="fr">Identificateur d'une publication d'indicateur. Il s'agit d'un autonum</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <property name="Nature" type="da.ibacs.business.enums.IndicatorNature" implemented-as="String" length="16" read-only="true" packed="EXTERNAL_TYPE" nullable="false">
            <description lang="fr">Nature d'indicateur.</description>
         </property>
         <property name="Justification" type="String" length="255">
            <description lang="fr">Texte explicatif (En français et en anglais).</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="PublicationDate" type="java.util.Date" date-type="DATE">
            <description lang="fr">Date de publication.</description>
         </property>
         <property name="StartingDate" type="java.util.Date" date-type="DATE">
            <description lang="fr">Uniquement valable pour les Indicateurs Constatés.</description>
         </property>
         <property name="EndingDate" type="java.util.Date" date-type="DATE">
            <description lang="fr">Uniquement valable pour les Indicateurs Constatés.</description>
         </property>
      </element>

      <element type="da.ibacs.IndicatorPublication_Business" read-only="true" purpose="DOCUMENTATION">
         <description lang="fr">Applicabilité en affaires des informations de publication des indicateurs.</description>
         <type-id name="IndicatorPublication -- Business"/>
         <tip role="IndicatorPublication" type="da.ibacs.IndicatorPublication" multiplicity="*" dependency="DEFINED"/>
         <tip role="Business" type="da.ibacs.Business" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.IndicatorPublication_IndicatorUnitConversionSet" read-only="true" purpose="DOCUMENTATION">
         <description lang="fr">Applicabilité en affaires d'un regroupement de taux de conversion d'unité.</description>
         <type-id name="IndicatorUnitConversionSet -- Business"/>
         <tip role="Publication" type="da.ibacs.IndicatorPublication" multiplicity="*" dependency="DEFINED"/>
         <tip role="UnitConversionSet" type="da.ibacs.IndicatorUnitConversionSet" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.IndicatorPublication_VersionSet" read-only="true" purpose="DOCUMENTATION">
         <description lang="fr">Applicabilité en versions des informations de publication des indicateurs.</description>
         <type-id name="IndicatorPublication -- VersionSet"/>
         <tip role="IndicatorPublication" type="da.ibacs.IndicatorPublication" multiplicity="*" dependency="DEFINED"/>
         <tip role="VersionSet" type="da.ibacs.VersionSet" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.IndicatorTypeNew" purpose="DOCUMENTATION">
         <description lang="fr">Définition d'un Type d'Indicateur.
Il peut est associé à une unité par défaut.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.Describable</implements>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.IndicatorTypeId" implemented-as="String" length="64"/>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
            <arg name="MainUnit"/>
         </constructor>
         <property name="Description" type="String" length="255">
            <description lang="fr">Description (En français et en anglais) du Type d'Indicateur.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
      </element>

      <element type="da.ibacs.IndicatorType_MainUnit" purpose="DOCUMENTATION">
         <description lang="fr">Relation entre un Type d'Indicateur et son Unité principale.</description>
         <type-id name="IndicatorType -- MainUnit"/>
         <tip role="IndicatorType" type="da.ibacs.IndicatorTypeNew" multiplicity="*" dependency="DEFINED"/>
         <tip role="MainUnit" type="da.ibacs.IndicatorUnit" multiplicity="1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.IndicatorType_SecondaryUnit" purpose="DOCUMENTATION">
         <description lang="fr">Relation entre un Type d'Indicateur et ses Unités secondaires (optionnel).</description>
         <type-id name="IndicatorType -- SecondaryUnit"/>
         <tip role="IndicatorType" type="da.ibacs.IndicatorTypeNew" multiplicity="*" dependency="DEFINED"/>
         <tip role="SecondaryUnit" type="da.ibacs.IndicatorUnit" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.IndicatorUnit" purpose="DOCUMENTATION">
         <description lang="fr">Unité utilisable par les indicateurs.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.Describable</implements>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.IndicatorUnitId" implemented-as="int">
            <description lang="fr">Identification d'une unité indicateur. Il s'agit d'un autonum.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
         </constructor>
         <property name="Name" type="String" length="255">
            <description lang="fr">Nom (En français et en anglais) de l'unité.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Description" type="String" length="255">
            <description lang="fr">Description (En français et en anglais) de l'unité.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
      </element>

      <element type="da.ibacs.IndicatorUnitConversion" purpose="DOCUMENTATION">
         <description lang="fr">Définie un taux de conversion d'une unité d'entrée vers une unité de sortie.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.Describable</implements>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.IndicatorUnitConversionId" implemented-as="int">
            <description lang="fr">Identificateur d'un taux de conversion d'unité. Il s'agit d'un autonum.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
            <arg name="UnitConversionSet"/>
            <arg name="UnitSource"/>
            <arg name="UnitTarget"/>
         </constructor>
         <property name="Rate" type="float">
            <description lang="fr">Taux de conversion de l'unité d'entrée vers l'unité de sortie.</description>
         </property>
      </element>

      <element type="da.ibacs.IndicatorUnitConversionSet" purpose="DOCUMENTATION">
         <description lang="fr">Définition d'une liste de taux de conversion d'unités pour une publication donnée.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.Describable</implements>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.IndicatorUnitConversionSetId" implemented-as="int">
            <description lang="fr">Identificateur d'un regroupement de taux de conversion d'unité. Il s'agit d'un autonum.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
         </constructor>
         <property name="Description" type="String" length="255">
            <description lang="fr">Description (En français et en anglais) du groupe de taux de conversion.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
      </element>

      <element type="da.ibacs.IndicatorUnitConversionSet_IndicatorUnitConversion" read-only="true" purpose="DOCUMENTATION">
         <description lang="fr">Relation de regroupement de Taux de conversion d'unité.</description>
         <type-id name="IndicatorUnitConversionSet -- IndicatorUnitConversion"/>
         <tip role="UnitConversionSet" type="da.ibacs.IndicatorUnitConversionSet" multiplicity="1" dependency="DEFINED"/>
         <tip role="UnitConversion" type="da.ibacs.IndicatorUnitConversion" multiplicity="*" dependency="USED_WEAK"/>
      </element>

      <element type="da.ibacs.IndicatorUnitConversion_IndicatorSourceUnit" read-only="true" purpose="DOCUMENTATION">
         <description lang="fr">Unité d'entrée d'un taux de conversion.</description>
         <type-id name="IndicatorUnitConversion -- IndicatorUnitSource"/>
         <tip role="UnitConversion" type="da.ibacs.IndicatorUnitConversion" multiplicity="*" dependency="DEFINED"/>
         <tip role="UnitSource" type="da.ibacs.IndicatorUnit" multiplicity="1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.IndicatorUnitConversion_IndicatorTargetUnit" read-only="true" purpose="DOCUMENTATION">
         <description lang="fr">Unité de sortie d'un taux de conversion.</description>
         <type-id name="IndicatorUnitConversion -- IndicatorUnitTarget"/>
         <tip role="UnitConversion" type="da.ibacs.IndicatorUnitConversion" multiplicity="*" dependency="DEFINED"/>
         <tip role="UnitTarget" type="da.ibacs.IndicatorUnit" multiplicity="1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.IndicatorVariant" purpose="DOCUMENTATION">
         <description lang="fr">Définition d'une variante d'Indicateur.
Elle contient la valeur de l'indicateur pour un ensemble de publications et une unité donnée. 
Une variante peut être primaire si elle correspond à l'unité principale du type d'indicateur.
Ou dérivée si elle correspond à une unité secondaire du type d'indicateur.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.Describable</implements>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.IndicatorVariantId" implemented-as="int">
            <description lang="fr">Id d'une variante d'indicateur. Il s'agit d'un autonum</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
         </constructor>
         <property name="VariantMode" type="da.ibacs.business.enums.IndicatorVariantMode" implemented-as="String" length="1" nullable="false">
            <description lang="fr">Indique si la variante est primaire ou dérivée.</description>
         </property>
         <property name="Value" type="Float">
            <description lang="fr">Valeur de l'Indicateur. Peut être nulle avec un commentaire.</description>
         </property>
         <property name="Comment" type="String" length="255">
            <description lang="fr">Texte expliquant l'absence de valeur numérique. ex: "Voir l'ensemble supérieur".</description>
         </property>
      </element>

      <element type="da.ibacs.IndicatorVariant_Business" read-only="true" purpose="DOCUMENTATION">
         <description lang="fr">Applicabilité en affaires d'une variante d'indicateur.</description>
         <type-id name="IndicatorVariant -- Business"/>
         <tip role="IndicatorVariant" type="da.ibacs.IndicatorVariant" multiplicity="*" dependency="DEFINED"/>
         <tip role="Business" type="da.ibacs.Business" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.IndicatorVariant_IndicatorPublication" read-only="true" purpose="DOCUMENTATION">
         <description lang="fr">Relation d'équivalence calculée entre les variantes et les statuts de publications.</description>
         <type-id name="IndicatorVariant -- IndicatorPublicationStatus"/>
         <tip role="Variant" type="da.ibacs.IndicatorVariant" multiplicity="*" dependency="DEFINED"/>
         <tip role="PublicationStatus" plural="PublicationStatutes" type="da.ibacs.IndicatorPublication" multiplicity="*" dependency="USED_WEAK"/>
      </element>

      <element type="da.ibacs.IndicatorVariant_IndicatorUnit" read-only="true" purpose="DOCUMENTATION">
         <description lang="fr">Relation entre une variante d'Indicateur et son Unité.</description>
         <type-id name="IndicatorVariant -- IndicatorUnit"/>
         <tip role="Variant" type="da.ibacs.IndicatorVariant" multiplicity="*" dependency="DEFINED"/>
         <tip role="Unit" type="da.ibacs.IndicatorUnit" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.IndicatorVariant_ProductSetNew" read-only="true" purpose="DOCUMENTATION">
         <description lang="fr">Association d'un Indicateur à sa Famille.
Fait partie de la clé de l'indicateur.</description>
         <type-id name="IndicatorVariant -- ProductSet"/>
         <tip role="IndicatorVariant" type="da.ibacs.IndicatorVariant" multiplicity="*" dependency="DEFINED"/>
         <tip role="ProductSet" type="da.ibacs.ProductSet" multiplicity="1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.IndicatorVariant_VersionSet" read-only="true" purpose="DOCUMENTATION">
         <description lang="fr">Applicabilité en versions d'une variante d'indicateur.</description>
         <type-id name="IndicatorVariant -- VersionSet"/>
         <tip role="IndicatorVariant" type="da.ibacs.IndicatorVariant" multiplicity="*" dependency="DEFINED"/>
         <tip role="VersionSet" type="da.ibacs.VersionSet" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <!-- <element type="da.ibacs.Indicator_IndicatorTypeNew" read-only="true" definition="DOCUMENTATION"> <description lang="fr">Association d'un Indicateur à son Type (d'Indicateur). Fait partie de la clé de l'indicateur.</description> <type-id name="Indicator - IndicatorType (New)"/> <tip role="Indicator"
         type="da.ibacs.IndicatorNew" multiplicity="*" dependency="DEFINED"/> <tip role="Type" type="da.ibacs.IndicatorTypeNew" multiplicity="1" dependency="USED_WEAK" navigable="false"/> </element> <element type="da.ibacs.Indicator_IndicatorUnit" read-only="true" definition="DOCUMENTATION"> <description
         lang="fr">Liste
         des unités secondaires d'un Indicateur. Permet de générer automatiquement les variantes indicateurs secondaires.</description> <type-id name="IndicatorNew - SecondaryUnit"/> <tip role="Indicator" type="da.ibacs.IndicatorNew" multiplicity="*" dependency="DEFINED"/> <tip role="SecondaryUnit" type="da.ibacs.IndicatorUnit"
         multiplicity="*" dependency="USED_WEAK" navigable="false"/> </element> <element type="da.ibacs.Indicator_IndicatorVariant" read-only="true" definition="DOCUMENTATION"> <description lang="fr">Relation entre un indicateur et ses variantes.</description> <type-id name="Indicator - IndicatorVariant"/>
         <tip
         role="Indicator" type="da.ibacs.IndicatorNew" multiplicity="*" dependency="DEFINED"/> <tip role="Variant" type="da.ibacs.IndicatorVariant" multiplicity="1" dependency="USED_WEAK"/> </element> -->

   </domain>

   <domain name="Ipc">
      <description lang="fr">Domaine dédié à l'IPC.</description>
      <depends-on>Business-Refs</depends-on>
      <depends-on>Commons</depends-on>
      <depends-on>Doc</depends-on>
      <depends-on>Impacts-Interface</depends-on>

      <element type="da.ibacs.Csn">
         <description lang="fr">Définition d'un 'CSN' (Catalog Sequence Number), un Repère dans une Figure.
Comme tout élément issu d'un IPC, les CSN sont uniquement consultables dans IBACS.
Le terme CSN est employé ici par abus : CSN désigne ici l'objet identifié par un 'vrai' CSN.</description>
         <life-cycle created-by="AUTO" updated-by="AUTO" removed-by="AUTO"/>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.CsnId" implemented-as="String" length="26">
            <description lang="fr">__TODO :__ pourquoi 26 au lieu de 22 (13 + 9) ?</description>
            <description lang="fr">Identification du 'CSN'. Il s'agit d'un couple (IppId, Number) codé sur 26 caractères.
Number correspond au 'vrai' CSN !</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <property name="Description" type="String" length="130" definition="SECONDARY" read-only="true">
            <description lang="fr">Description (En français et en anglais) du CSN.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="IppId" type="da.ibacs.business.ids.IppId" implemented-as="String" length="9" definition="SECONDARY" read-only="true">
            <description lang="fr">Identification du projet auquel le CSN se rapporte.
C'est un couple (Manufacturer Id, IppNumber) codé sur 9 caractères (5 + 4)</description>
         </property>
         <property name="Number" type="da.ibacs.business.ids.CsnNumber" implemented-as="String" length="13" definition="SECONDARY" read-only="true">
            <description lang="fr">Identification (numéro) du CSN.
Il est composé d'une partie chapitrage et d'une partie figure. Il est codé sur 13 caractères (6 + 7).</description>
         </property>
         <property name="Indenture" type="int"/>
         <property name="ExpiredOrNotSpare" type="boolean" definition="SECONDARY" read-only="true" getter-prefix="IS"/>
         <property name="Asp" type="da.ibacs.business.enums.ASP" implemented-as="String" length="1" definition="SECONDARY" read-only="true">
            <description lang="fr">Signifie : Attaching, Storage or Shipping Part</description>
         </property>
         <property name="MasterCsn" type="boolean" definition="SECONDARY" read-only="true" getter-prefix="IS">
            <description lang="fr">Indique s'il s'agit d'un Csn de tête:
 - Indenture 1
 - Repere 000 variante nulle
 - Chapterisé et Quantité différente de Ref, ou non chapterisé</description>
         </property>
      </element>

      <element type="da.ibacs.CsnRfd" dao-hint="LAZY">
         <description lang="fr">Correspondance entre un CSN et un Reg. Relation normalement au niveau Isn.</description>
         <type-id name="Csn -- Rfd"/>
         <id type="da.ibacs.business.ids.CsnRfdId" implemented-as="da.ibacs.impl.jpa.CsnRfdKey">
            <field name="Csn"/>
            <field name="Rfd"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <tip role="Csn" type="da.ibacs.Csn" multiplicity="*" dependency="DEFINED" navigable="false"/>
         <tip role="Rfd" type="da.ibacs.Rfd" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.Csn_Csn" read-only="true" definition="SECONDARY">
         <description lang="fr">Relation entre un Csn père et ses fils.</description>
         <type-id name="Csn -- Csn (Composition: Parent -- Child)"/>
         <life-cycle created-by="AUTO" updated-by="AUTO" removed-by="AUTO"/>
         <tip role="Parent" type="da.ibacs.Csn" multiplicity="0..1" dependency="DEFINED"/>
         <tip role="Child" plural="Children" type="da.ibacs.Csn" multiplicity="*" dependency="USED_WEAK"/>
      </element>

      <element type="da.ibacs.Isn" dao-hint="LAZY">
         <description lang="fr">Item Sequence Number.
Définition d'une entrée dans un Repère IPC.
Tout comme pour le CSN, ce nom est employé ici pour désigner un objet (une relation en fait).
Il est également employé pour désigner un 'nombre', qui ne peut être interprété que dans le contexte d'un Repère (CSN).</description>
         <type-id name="Isn"/>
         <life-cycle created-by="AUTO" updated-by="AUTO" removed-by="AUTO"/>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.IsnId" implemented-as="da.ibacs.impl.jpa.IsnKey">
            <field name="Csn"/>
            <field name="IsnNumber"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
            <arg name="RefProductIpc"/>
         </constructor>
         <tip role="Csn" type="da.ibacs.Csn" multiplicity="*" dependency="DEFINED" collection="LIST">
            <xml target-export-mode="ATTACHED"/>
         </tip>
         <tip role="RefProductIpc" type="da.ibacs.RefProductIpc" multiplicity="*" dependency="USED_WEAK" collection="LIST"/>
         <property name="IsnNumber" type="da.ibacs.business.ids.IsnNumber" implemented-as="String" length="3" read-only="true">
            <description lang="fr">L'Item Sequence Number permet de numéroter (et ordonner) un Item dans un CSN.
Les 2 premiers caractères sont des chiffres commençant par "00".
Le 3ème caractère commence par les lettres de A à Z (hors I et O) puis continu par les chiffres de 0 à 9.</description>
         </property>
         <property name="CsnId" type="da.ibacs.business.ids.CsnId" implemented-as="String" length="22" definition="SECONDARY" read-only="true">
            <description lang="fr">Raccourci vers l'id du CSN.</description>
         </property>
         <property name="IppId" type="da.ibacs.business.ids.IppId" implemented-as="String" length="9" definition="SECONDARY" read-only="true">
            <description lang="fr">Raccourci vers l'IPP du CSN.</description>
         </property>
         <property name="CsnNumber" type="da.ibacs.business.ids.CsnNumber" implemented-as="String" length="13" definition="SECONDARY" read-only="true">
            <description lang="fr">Raccourci vers le numéro du CSN.</description>
         </property>
         <property name="CasLine" type="da.ibacs.business.enums.IpcCasLine" implemented-as="String" length="700" packed="EXTERNAL_TYPE">
            <description lang="fr">Artifice d'implémentation permettant de stocker les propriétés dérivées suivante dans une seule String.</description>
         </property>
         <property name="Description" type="String" length="255" definition="SECONDARY" read-only="true">
            <description lang="fr">Correspond à la description au point d'emploi (DFL: Description for location) uniquement en Français dans l'Ipc Rafale France</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Qna" type="da.business.ipc.QuantityWithRef" implemented-as="String" length="30" definition="SECONDARY" read-only="true">
            <description lang="fr">Quantité pour l'ensemble supérieur qui peut prendre différentes valeurs :
 - Un nombre;
 - "AR" qui signifie selon besoin;
 - "REF" qui signifie que la quantité est déjà indiquée à un autre endroit.</description>
         </property>
         <property name="Mov" type="String" length="4" definition="SECONDARY" read-only="true">
            <description lang="fr">Liste des versions d'avion pour lesquels cet ISN est valable.</description>
            <index type="int" name="number" size="4"/>
         </property>
         <property name="Efy" type="da.RangeSet" implemented-as="String" length="30" definition="SECONDARY" read-only="true">
            <description lang="fr">À chaque mov correspond une plage de rang(s).
Un tiret signifie tous rangs (1 à 9999). sinon les plages de rang sont renseignés par des séries de 8 chiffres séparés par "**".
Ex: "00010235**0560999"</description>
            <index type="int" name="number" size="4"/>
         </property>
         <property name="Applicability" type="da.business.Applicability" implemented-as="String" length="255" definition="SECONDARY" read-only="true">
            <description lang="fr">Object métier qui fait la synthèse des Versions (MOV) et Rangs (EFY) applicables.</description>
         </property>
         <property name="RanksApplicability" type="String" length="80" definition="SECONDARY" read-only="true">
            <description lang="fr">Version texte lisible de l'Applicability. Ex: AM|AB.02359999|AC</description>
         </property>
         <property name="Category" type="da.ibacs.business.enums.Category" implemented-as="String" length="1" definition="SECONDARY" read-only="true">
            <description lang="fr">Indique si le produit est fourni et/ou monté par le client ou l’avionneur (au point d'emploi).
Si la DFL contient "CATEGORIE A" => Catégorie A.
Si la DFL contient "CATEGORIE B" => Catégorie B.
Si le Csn est chapitré et qu'il s'agit du Csn de tête, la catégorie est C.
Sinon la catégorie est nulle, (Elle sera héritée dans les ProductProductOccurrence)</description>
         </property>
         <property name="Asp" type="da.ibacs.business.enums.ASP" implemented-as="String" length="1" definition="SECONDARY" read-only="true">
            <description lang="fr">Signifie : Attaching, Storage or Shiping Part.</description>
         </property>
         <property name="Rfs" type="da.ibacs.business.enums.ReasonForSelection" implemented-as="String" length="1" definition="SECONDARY" read-only="true">
            <description lang="fr">Raison de la sélection.</description>
         </property>
         <property name="Smr" type="da.ibacs.business.enums.SmrCode" implemented-as="String" length="5" definition="SECONDARY" read-only="true">
            <description lang="fr">Object métier qui représente le code SMR (SOURCE MAINTENANCE RECOVERABILITY).</description>
         </property>
         <property name="Mso" type="da.ibacs.business.enums.MaintenanceSupportOrganisation" implemented-as="String" length="5" definition="SECONDARY" read-only="true">
            <description lang="fr">Attribut dérivé du code SMR indiquant le NTI.</description>
         </property>
         <property name="Smf" type="da.ibacs.business.enums.SelectOrManufactureFromCode" implemented-as="String" length="45" definition="SECONDARY" read-only="true">
            <description lang="fr">Object métier qui synthétise les champs SMF (SELECT OR MANUFACTURE FROM) et MFM.
Ce champ indique:
 - si le  est fabriqué à partir d'un autre (Ex: un tuyau) => M
 - si le  est sélectionné en fonction de la dimension (Ex: Une cale) => F
 ...</description>
            <description lang="fr"> - F = Select on Fit. Applied against items which vary in physical dimension (e.g. washers, shims, oversize/undersize parts);
 - T = Select on Test. Applied against items which vary in electrical characteristics (e.g. resistors, capacitors);
 - M = Manufacture from. Applied against items which can be locally manufactured or programmed;
 - R = Reworked from. Applied against items which can be produced by the reworking of a pre-modified item. Reference to modification instructions is obligatory;
 - P = Repaired from. Applied against items which can be repaired from Special Repair Parts, Repair Kits or Part Kits.</description>
         </property>
         <property name="Icy" type="String" length="2" definition="SECONDARY" read-only="true">
            <description lang="fr">2 caractères indiquant si le  de l'ISN est interchangeable avec l'ISN précédent et/ou le suivant.</description>
         </property>
         <property name="Uce" type="String" length="8" definition="SECONDARY" read-only="true">
            <description lang="fr">Applicabilité à l'équipement.</description>
         </property>
         <property name="Uca" type="String" length="6" definition="SECONDARY" read-only="true">
            <description lang="fr">Applicabilité à l'ensemble immédiatement supérieur.</description>
         </property>
         <property name="Rfd" type="String" length="512" definition="SECONDARY" read-only="true">
            <description lang="fr">Le champ RFD (REFERENCE DESIGNATOR) de l'IPC 2000M contient 12 caractères, or le champ extrait contient une liste de RFD.</description>
         </property>
         <property name="Rtx" type="String" length="25" definition="SECONDARY" read-only="true">
            <description lang="fr">Contient un ISN, un CSN, une partie de CSN ou un IPP, afin de référencer une décomposition (ou un point d'emploi).</description>
         </property>
         <property name="RtxType" type="da.ibacs.business.enums.RtxType" implemented-as="String" length="7" definition="SECONDARY" read-only="true">
            <description lang="fr">Analyse du champ RTX pour savoir si le champ :
 - Est vide;
 - Référence un IPP;
 - Pointe vers une décomposition;
 - Pointe vers un point d'emploi.</description>
         </property>
         <property name="Can" type="String" length="20" definition="SECONDARY" read-only="true">
            <description lang="fr">Signifie : Change Authority Number.</description>
         </property>
         <property name="Spare" type="boolean" definition="SECONDARY" read-only="true" getter-prefix="IS">
            <description lang="fr">Booléen qui indique si le  est rechange à ce point d'emploi. Il peut être vrai pour différentes raisons :
 - Si le RFS est différent de 0 (différent de ITEM_NOT_SPARE);
 - Si le SMF vaut M (Manufactured From) et que le MFM est différent de null;
 - Si le  (Ibacs) est (entre autres) un IPD;
 - Si le  est présent dans un autre ISN dont l'IPP termine par R1 (Règle spécifique pour les supports).
 Sinon faux.</description>
         </property>
         <property name="SpareStatus" type="da.ibacs.business.enums.SpareCode" implemented-as="String" length="1" definition="SECONDARY" read-only="true">
            <description lang="fr">Valeur d'énumération basée sur les propriétés "Spare" et "Applicability" indiquant si le  est SPARE, EVOLVED_SPARE, NOT_SPARE.
 - Si la propriété "Spare" est vrai => SPARE;
 - Si le CSN est périmé ou non rechange (ExpiredOrNotSpare) => NOT_SPARE;
 - Si la propriété "Applicability" est nulle => EVOLVED_SPARE
 - Si la propriété "Applicability" présente une intersection avec l'applicabilité d'autres ISN Spare du CSN => EVOLVED_SPARE;
 - Si un autre ISN Spare du CSN a une applicabilité nulle => EVOLVED_SPARE;
 - Sinon => NOT_SPARE</description>
         </property>
         <property name="ReplaceableUnitCode" type="da.ibacs.business.enums.ReplaceableUnitCode" implemented-as="String" length="1" definition="SECONDARY" read-only="true">
            <description lang="fr"></description>
         </property>
         <property name="TypeNature" type="da.ibacs.business.enums.TypeNature" implemented-as="String" length="1" definition="SECONDARY" read-only="true"/>
         <property name="InstanceLinkType" type="da.business.InstanceLinkType" implemented-as="String" length="1" definition="SECONDARY" read-only="true"/>
         <property name="Validity" type="da.ibacs.business.enums.ProductValidity" implemented-as="String" length="1" definition="SECONDARY" read-only="true"/>
         <property name="LastApplicable" type="da.business.LastApplicable" implemented-as="String" length="1" definition="SECONDARY" read-only="true"/>
         <property name="LastApplicableApplicability" type="da.business.Applicability" implemented-as="String" length="255" definition="SECONDARY" read-only="true"/>
         <method name="getApplicableIsns" type="java.util.List&lt;da.ibacs.business.Isn&gt;">
            <arg name="applicability" type="da.business.Applicability"></arg>
         </method>
         <method name="setRefProductIpc" type="boolean">
            <arg name="refProductIpc" type="da.ibacs.business.RefProductIpc"></arg>
         </method>
      </element>

      <element type="da.ibacs.Isn_Isn" read-only="true" definition="SECONDARY">
         <description lang="fr">Décodage du champ rtx de l'Isn en relation.
Un Isn peut se référer à (au plus) un autre Isn.</description>
         <type-id name="Isn -- Isn (Refer: Source -- Target)"/>
         <life-cycle created-by="AUTO" updated-by="AUTO" removed-by="AUTO"/>
         <tip role="Decomposition" type="da.ibacs.Isn" multiplicity="0..1" dependency="DEFINED"/>
         <tip role="Composition" type="da.ibacs.Isn" multiplicity="0..1" dependency="USED_WEAK"/>
      </element>

      <element type="da.ibacs.RefProductIpc">
         <description lang="fr">Produit de Référence issu de l'IPC (Catalogue des produits illustrés).</description>
         <life-cycle created-by="AUTO" updated-by="AUTO" removed-by="AUTO"/>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.RefProductIpcId" implemented-as="String" length="43">
            <description lang="fr">Identification d'un produit IPC (idem identifiant produit).</description>
            <field name="Product"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <tip role="Product" type="da.ibacs.Product" multiplicity="0..1" dependency="USED_WEAK" navigable="false">
            <type-id name="RefProductIpc -- Product"/>
         </tip>
         <property name="Designation" type="String" length="255">
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="AtaChapterSet" type="da.ibacs.business.ids.AtaChapterSet" implemented-as="String" length="255" packed="EXTERNAL_TYPE" read-only="true" definition="SECONDARY">
            <description lang="fr">AtaChapters des Isns.</description>
         </property>
         <property name="FullSourceMask" type="da.ibacs.business.enums.RefProductTypeMask" implemented-as="String" length="4" definition="SECONDARY" read-only="true">
            <description lang="fr">Propriété dérivée récupérant le FullSourceMask du Product Ibacs.
__TODO__ A supprimer, utilisé seulement dans l'IHM</description>
         </property>
         <property name="PasLine" type="da.ibacs.business.enums.IpcPasLine" implemented-as="String" length="700" packed="EXTERNAL_TYPE">
            <description lang="fr">Artifice d'implémentation permettant de stocker les propriétés dérivées suivante dans une seule String.</description>
         </property>
         <property name="Nsn" type="String" length="13" definition="SECONDARY" read-only="true"/>
         <property name="CodificationStatus" type="da.ibacs.business.enums.CodificationStatus" implemented-as="String" length="1" definition="SECONDARY" read-only="true"/>
         <property name="CategoryMask" type="da.ibacs.business.enums.CategoryMask" implemented-as="String" length="5" definition="SECONDARY" read-only="true"/>
         <property name="UnitOfIssue" type="String" length="2" definition="SECONDARY" read-only="true"/>
         <property name="QuantityPerUnitOfIssue" type="Integer" definition="SECONDARY" read-only="true"/>
         <property name="MeasureUnit" type="String" length="2" definition="SECONDARY" read-only="true"/>
         <property name="SizeUnpackaged" type="da.business.ipc.SizeOfUnpackagedUnitIpc" implemented-as="String" length="14" definition="SECONDARY" read-only="true"/>
         <property name="SizePackaged" type="da.business.ipc.SizeOfPackagedUnitIpc" implemented-as="String" length="14" definition="SECONDARY" read-only="true"/>
         <property name="WeightUnpackaged" type="da.business.ipc.WeightOfUnpackagedUnitIpc" implemented-as="String" length="7" definition="SECONDARY" read-only="true"/>
         <property name="WeightPackaged" type="da.business.ipc.WeightOfPackagedUnitIpc" implemented-as="String" length="7" definition="SECONDARY" read-only="true"/>
         <property name="Slc" type="da.ibacs.business.enums.ShelfLifeCode" implemented-as="String" length="1" definition="SECONDARY" read-only="true"/>
         <property name="MsoMask" type="da.ibacs.business.enums.MaintenanceSupportOrganisationMask" implemented-as="String" length="6" read-only="true" definition="SECONDARY"/>

         <property name="Spc" type="da.business.ipc.SparePartsClassificationIpc" implemented-as="String" length="1" definition="SECONDARY" read-only="true"/>
         <property name="Validity" type="da.ibacs.business.enums.ProductValidity" implemented-as="String" length="1" definition="SECONDARY" read-only="true"/>
         <property name="TypeNatureMask" type="da.ibacs.business.enums.TypeNatureMask" implemented-as="String" length="15" definition="SECONDARY" read-only="true"/>
         <property name="LocallyManufactured" type="da.ibacs.business.enums.LocallyManufactured" implemented-as="String" length="1" definition="SECONDARY" read-only="true">
            <description lang="fr">Indique si le produit est fabriqué à partir d'un autre (Confection Local).</description>
         </property>
         <property name="ReparConsu" type="da.ibacs.business.enums.ReparConsuCode" implemented-as="String" length="1" definition="SECONDARY" read-only="true"/>
         <property name="ReplaceableUnitCodeMask" type="da.ibacs.business.enums.ReplaceableUnitCodeMask" implemented-as="String" length="6" definition="SECONDARY" read-only="true"/>
         <property name="Ali" type="String" length="15" definition="SECONDARY" read-only="true">
            <description lang="fr">Signifie : Authorized Life/Time/Cycle Indicator/Al</description>
         </property>
         <method name="getApplicableIsns" type="java.util.List&lt;da.ibacs.business.Isn&gt;">
            <arg name="applicability" type="da.business.Applicability"></arg>
         </method>
         <!-- relation unit mtbf? -->
      </element>

      <element type="da.ibacs.RefProductIpc_Manufacturer" read-only="true" definition="SECONDARY">
         <description lang="fr">Relation entre un Produit de Référence et un Fabricant.</description>
         <type-id name="RefProductIpc -- Manufacturer"/>
         <tip role="RefProductIpc" type="da.ibacs.RefProductIpc" multiplicity="*" dependency="DEFINED"/>
         <tip role="Manufacturer" type="da.ibacs.Manufacturer" multiplicity="1" dependency="USED_WEAK" navigable="false"/>
      </element>
   </domain>

   <domain name="Lsa-Operations" prefix="lsa">
      <description lang="fr">Domaine dédié à la définition des procédures de Maintenance.</description>
      <depends-on>Commons</depends-on>
      <depends-on>Impacts-Interface</depends-on>
      <depends-on>Business-Refs</depends-on>
      <depends-on>External-Refs</depends-on>
      <depends-on>Lsa-Resources</depends-on>
      <depends-on>Lsa-Resources-Interface</depends-on>
      <depends-on>Resources</depends-on>
      <depends-on>Management</depends-on>
      <depends-on>Explanations</depends-on>
      <depends-on>Workshops-Interface</depends-on>

      <element type="da.ibacs.DocModuleLsaSubtask" dao-hint="LAZY">
         <description lang="fr">Relation permettant de décrire à quelle Sous-Tâche ASL correspond le contenu d'un Module Documentaire.</description>
         <description lang="fr">__TODO :__ à rendre doublement non navigable.</description>
         <type-id name="DocModule -- LsaSubtask"/>
         <id type="da.ibacs.business.ids.DocModuleLsaSubtaskId" implemented-as="da.ibacs.impl.jpa.DocModuleLsaSubtaskKey">
            <field name="DocModule"/>
            <field name="LsaSubtask"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <tip role="DocModule" type="da.ibacs.DocModule" navigable="false" multiplicity="*" dependency="USED_WEAK"/>
         <tip role="LsaSubtask" type="da.ibacs.LsaSubtask" multiplicity="*" dependency="USED_STRONG"/>
         <property name="Force" type="da.ibacs.business.enums.SubtaskDocModuleLinkForce" implemented-as="String" length="1" packed="EXTERNAL_TYPE"/>
         <property name="Comment" type="String" length="255"/>
         <property name="VersionSetId" type="da.ibacs.business.ids.VersionSetId" implemented-as="String" length="255" definition="SECONDARY" read-only="true"/>
      </element>

      <element type="da.ibacs.LsaDescription">
         <description lang="fr">Définition d'un Descriptif.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.VersionSetGetter</implements>
         <implements>da.ibacs.LifeStatusSetter</implements>
         <implements>da.ibacs.Titled</implements>
         <implements>da.ibacs.Explained</implements>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <implements>da.ibacs.EntityExternalRefSource</implements>
         <implements>da.ibacs.WorkshopElement</implements>
         <id type="da.ibacs.business.ids.LsaDescriptionId" implemented-as="int">
            <description lang="fr">Identificateur du Descriptif</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
            <arg name="VersionSet" optional="true"/>
         </constructor>
         <property name="AtaChapter" type="int">
            <description lang="fr">Chapitre Ata auquel appartient les Sous-Tâche.</description>
         </property>
         <property name="AtaSection" type="int">
            <description lang="fr">Section Ata à laquelle appartiennent les Sous-Tâches.</description>
         </property>
         <property name="AtaSectionEnabled" type="boolean" definition="SECONDARY">
            <description lang="fr">Indique si la Sous-Tâche à une section Ata.</description>
         </property>
         <property name="LifeStatus" type="da.ibacs.business.enums.EntityLifeStatus" implemented-as="String" length="1" nullable="false" packed="EXTERNAL_TYPE">
            <description lang="fr">État de définition du cycle de vie standard (Vivant, Déprécié, Mort, ...) du Descriptif.</description>
         </property>
         <property name="Title" type="String" length="100">
            <description lang="fr">Titre (En français et en anglais) du Descriptif.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
      </element>

      <element type="da.ibacs.LsaDescription_DocModule">
         <description lang="fr">Cette relation permet d'associer des Modules Documentaires d'entrée à un Descriptif ASL.</description>
         <type-id name="LsaDescription -- DocModule"/>
         <tip role="LsaDescription" type="da.ibacs.LsaDescription" multiplicity="*" dependency="DEFINED"/>
         <tip role="DocModule" type="da.ibacs.DocModule" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.LsaDescription_InfoCode">
         <type-id name="LsaDescription -- InfoCode"/>
         <tip role="LsaDescription" type="da.ibacs.LsaDescription" multiplicity="*" dependency="DEFINED"/>
         <tip role="InfoCode" type="da.ibacs.InfoCode" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.LsaDescription_Lsac">
         <description lang="fr">Cette relation décrit sur quel Lsac un Descriptif ASL porte.</description>
         <type-id name="LsaDescription -- Lsac"/>
         <tip role="LsaDescription" type="da.ibacs.LsaDescription" multiplicity="*" dependency="DEFINED"/>
         <tip role="Lsac" type="da.ibacs.Lsac" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.LsaDescription_VersionSet">
         <description lang="fr">Cette relation sert à configurer (Ensemble de Versions) un Descriptif ASL.</description>
         <type-id name="LsaDescription -- VersionSet"/>
         <tip role="LsaDescription" type="da.ibacs.LsaDescription" multiplicity="*" dependency="DEFINED"/>
         <tip role="VersionSet" type="da.ibacs.VersionSet" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.LsaHlTask" abstract="true" inheritance-strategy="JOINED" discriminator-length="4">
         <description lang="fr">Classe de base (abstraite) "High Level Task" des tâches et sous-tâches.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.VersionSetGetter</implements>
         <implements>da.ibacs.LifeStatusSetter</implements>
         <implements>da.ibacs.Titled</implements>
         <implements>da.ibacs.Explained</implements>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <implements>da.ibacs.EntityExternalRefSource</implements>
         <id type="da.ibacs.business.ids.LsaHlTaskId" implemented-as="String" length="16">
            <description lang="fr">Identificateur d'une High Level Task</description>
         </id>
         <static name="META_ENUM_REQUIRED_CONFIGURATION" type="da.ibacs.business.MetaEnumType.Value" value="MetaEnumType.INSTANCE.createOrFind(&quot;LsaReqConfig&quot;)">
            <description lang="fr">Cf. relation LsaHlTaskRequiredConfiguration</description>
         </static>
         <property name="LsaHlTaskType" type="da.ibacs.business.enums.LsaHlTaskType" implemented-as="String" length="4" packed="EXTERNAL_TYPE"/>
         <property name="LifeStatus" type="da.ibacs.business.enums.EntityLifeStatus" implemented-as="String" length="1" nullable="false" packed="EXTERNAL_TYPE">
            <description lang="fr">État de définition du cycle de vie standard (Vivant, Déprécié, Mort, ...) d'une tâche ou sous-tâche.</description>
         </property>
         <property name="Title" type="String" length="100">
            <description lang="fr">Titre (En français et en anglais) de la Tâche.
Ce titre peut être redéfini au niveau d'une occurrence dans une Opération.
Par exemple, si le titre de la Sous-Tâche est "Ouverture Porte", au niveau des Opérations il pourrait devenir "Ouverture Porte Gauche" et "Ouverture Porte Droite".</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="VersionSynthesis" type="da.ibacs.business.VersionSynthesis" to-external="da.ibacs.business.VersionSynthesisUtil.toExternal" to-internal="da.ibacs.business.VersionSynthesisUtil.toInternal" implemented-as="String" length="100" read-only="true" definition="SECONDARY">
            <description lang="fr">Cet élément permet de définir une synthèse de plusieurs VersionSet.
Par exemple les versions applicable et les versions appliquées.</description>
         </property>
         <property name="Configurable" type="boolean" definition="SECONDARY" read-only="true" getter-prefix="IS">
            <description lang="fr">Indique si la sous-tâche doit être configurée par un LSAC ou si la tâche doit être configurée par une opération.</description>
         </property>
         <method name="isAncestor" type="boolean">
            <description lang="fr">Cette méthode permet de vérifier avant l'ajout d'un élément, s'il n'est pas un ancêtre.</description>
            <arg name="other" type="da.ibacs.business.LsaHlTask"/>
         </method>
         <method name="updateVersionSet" type="boolean">
            <description lang="fr">Cette méthode permet de mettre à jour les Versions d'une hl task.</description>
         </method>
         <method name="updateVersionSetUsage" type="boolean">
            <description lang="fr">Cette méthode permet de mettre à jour les Versions utilisées d'une hl task.</description>
         </method>
      </element>

      <element type="da.ibacs.LsaHlTaskOccurrence" dao-hint="LAZY">
         <description lang="fr">Cette relation permet d'instancier une Sous-Tâche ASL dans une Tâche ASL.
L'ensemble ordonné de ces instances constitue la séquence de la Tâche.
Une même Sous-Tâche peut apparaitre plusieurs fois dans une séquence.</description>
         <type-id name="LsaHlTaskOccurrence"/>
         <life-cycle created-by="USER" updated-by="USER" removed-by="USER"/>
         <id type="da.ibacs.business.ids.LsaHlTaskOccurrenceId" implemented-as="int"/>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
            <arg name="HlTask"/>
            <arg name="Task"/>
         </constructor>
         <tip role="Task" type="da.ibacs.LsaTask" multiplicity="*" collection="LIST" dependency="DEFINED">
            <xml target-export-mode="ATTACHED"/>
         </tip>
         <tip role="HlTask" type="da.ibacs.LsaHlTask" multiplicity="*" dependency="USED_STRONG" navigable="true"/>
         <static name="META_ENUM_STOC_SECTION" type="da.ibacs.business.MetaEnumType.Value" value="MetaEnumType.INSTANCE.createOrFind(&quot;StocSection&quot;)">
            <description lang="fr">Cf. relation LsaHlTaskOccurrence_Section</description>
         </static>
         <property name="Rank" type="int" read-only="true" definition="SECONDARY">
            <description lang="fr">Rang de la hl task dans la task.</description>
         </property>
         <property name="AccessMode" type="boolean" getter-prefix="IS">
            <description lang="fr">La propriété AccessMode n'a besoin d'être définie que si la hlTask est une sous-tâche avec deux jeux de taux différents (voir AccessMode dans la sous-tâche).</description>
         </property>
         <method name="compareTo" type="int">
            <arg name="hlTaskOccurrence" type="da.ibacs.business.LsaHlTaskOccurrence"/>
         </method>
      </element>

      <element type="da.ibacs.LsaHlTaskOccurrenceConfig" dao-hint="LAZY">
         <description lang="fr">Cette relation sert à configurer une Occurrence de Sous-Tâche dans le contexte d'une Opération.
L'effectivité de logistique d'une Opération et les quantités associées peuvent dépendre d'un Lsac et d'un mode d'application de la Sous-Tâche.</description>
         <type-id name="LsaHlTaskOccurrenceConfig"/>
         <life-cycle created-by="USER" updated-by="USER" removed-by="USER"/>
         <id type="da.ibacs.business.ids.LsaHlTaskOccurrenceConfigId" implemented-as="da.ibacs.impl.jpa.LsaHlTaskOccurrenceConfigKey">
            <field name="HlTaskOccurrence"/>
            <field name="Operation"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <tip role="HlTaskOccurrence" type="da.ibacs.LsaHlTaskOccurrence" multiplicity="*" dependency="USED_STRONG">
            <xml target-export-mode="ATTACHED"/>
         </tip>
         <tip role="Operation" type="da.ibacs.LsaOperation" multiplicity="*" dependency="USED_WEAK" collection="LIST"/>
         <property name="Title" type="String" length="100">
            <description lang="fr">Permet, pour une opération donnée, de surcharger le titre (En français et en anglais) de la HlTask.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="EffectiveTitle" type="String" definition="SECONDARY" read-only="true" length="100">
            <description lang="fr">Retourne, le titre (En français et en anglais) pour une opération donnée.
Soit le titre surchargé s'il existe, soit le titre de la HlTask</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="SpecificTitle" type="boolean" definition="SECONDARY" read-only="true" getter-prefix="HAS">
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
      </element>

      <element type="da.ibacs.LsaHlTaskOccurrenceConfig_ContextLsac">
         <description lang="fr">Cette relation permet d'associer un Lsac de contextualisation à une Configuration d'Occurrence de Sous-Tâche.</description>
         <type-id name="LsaHlTaskOccurrenceConfig -- ContextLsac"/>
         <tip role="LsaHlTaskOccurrenceConfigContext" type="da.ibacs.LsaHlTaskOccurrenceConfig" multiplicity="*" dependency="DEFINED"/>
         <tip role="ContextLsac" type="da.ibacs.Lsac" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.LsaHlTaskOccurrenceConfig_ContextOperation">
         <description lang="fr">Cette relation permet d'associer une opération de contextualisation à une Configuration d'Occurrence de Tâche.</description>
         <type-id name="LsaHlTaskOccurrenceConfig -- ContextOperation"/>
         <tip role="LsaHlTaskOccurrenceConfigContext" type="da.ibacs.LsaHlTaskOccurrenceConfig" multiplicity="*" dependency="DEFINED"/>
         <tip role="ContextOperation" type="da.ibacs.LsaOperation" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.LsaHlTaskOccurrence_Section">
         <description lang="fr">Cette relation permet d'associer une section (ex: Préparation, Execution, Remise en
condition...) à une Occurrence de Tâche/Sous-Tâche.</description>
         <type-id name="LsaHlTaskOccurrence -- Section"/>
         <tip role="LsaHlTaskOccurrence" type="da.ibacs.LsaHlTaskOccurrence" multiplicity="*" dependency="DEFINED"/>
         <tip role="Section" type="da.ibacs.MetaEnumValue" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.LsaHlTaskRequiredConfiguration" read-only="true">
         <description lang="fr">Cette relation sert à décrire les configurations requises d'une tâche et/ou sous-tâche.</description>
         <type-id name="LsaHlTask -- MetaEnumValue (Required configuration)"/>
         <life-cycle created-by="USER" updated-by="USER" removed-by="USER"/>
         <id type="da.ibacs.business.ids.LsaHlTaskRequiredConfigurationId" implemented-as="da.ibacs.impl.jpa.LsaHlTaskRequiredConfigurationKey">
            <field name="LsaHlTask"/>
            <field name="RequiredConfiguration"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <tip role="LsaHlTask" type="da.ibacs.LsaHlTask" multiplicity="*" dependency="DEFINED"/>
         <tip role="RequiredConfiguration" type="da.ibacs.MetaEnumValue" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
         <property name="NecessaryType" type="da.ibacs.business.enums.NecessaryType" implemented-as="String" length="1" nullable="false"/>
         <property name="Comment" type="String" length="255">
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
      </element>

      <element type="da.ibacs.LsaHlTask_VersionSet" read-only="true">
         <description lang="fr">Synthèse des versions d'une LsaHlTask. Dérivée des occurrences de sous-tâches.</description>
         <type-id name="LsaHlTask -- VersionSet"/>
         <tip role="LsaHlTask" type="da.ibacs.LsaHlTask" multiplicity="*" dependency="DEFINED"/>
         <tip role="VersionSet" type="da.ibacs.VersionSet" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.LsaHlTask_VersionSetUsage" read-only="true">
         <description lang="fr">Synthèse des versions utilisée d'une LsaHlTask. Dérivée des opérations.</description>
         <type-id name="LsaHlTask -- VersionSet (Usage)"/>
         <tip role="LsaHlTaskUsage" type="da.ibacs.LsaHlTask" multiplicity="*" dependency="DEFINED"/>
         <tip role="VersionSetUsage" type="da.ibacs.VersionSet" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.LsaOperation">
         <description lang="fr">Définition d'une Opération de Maintenance.
C'est l'application d'une Tâche de Maintenance à un Lsac.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.VersionSetSetter</implements>
         <implements>da.ibacs.LifeStatusSetter</implements>
         <implements>da.ibacs.Explained</implements>
         <implements>da.ibacs.Titled</implements>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <implements>da.ibacs.EntityExternalRefSource</implements>
         <id type="da.ibacs.business.ids.LsaOperationId" implemented-as="String" length="35"/>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="false"/>
            <arg name="Task" optional="true"/>
         </constructor>
         <property name="LifeStatus" type="da.ibacs.business.enums.EntityLifeStatus" implemented-as="String" length="1" nullable="false" packed="EXTERNAL_TYPE">
            <description lang="fr">État de définition du cycle de vie standard (Vivant, Déprécié, Mort, ...) d'une Opération Asl.</description>
         </property>
         <property name="Title" type="String" length="100">
            <description lang="fr">Titre (En français et en anglais) de l'Opération.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Count" type="int">
            <description lang="fr">Nombre d'occurrences de l'Opération dans la cas où elle porte sur un Lsac générique et que le point d'emploi n'est pas explicité.</description>
         </property>
         <property name="StatusCode" type="da.ibacs.business.enums.LsaOperationStatus" implemented-as="String" length="1" packed="EXTERNAL_TYPE">
            <description lang="fr">État de maturité de l'opération (Spécifiée, complétée...).</description>
         </property>
         <property name="Domain" type="da.ibacs.business.enums.LsaOperationDomain" implemented-as="String" length="3" packed="EXTERNAL_TYPE">
            <description lang="fr">Domain d'application de l'opération (Général, Armement, Structure...).</description>
         </property>
         <property name="OperationCode" type="da.ibacs.business.enums.LsaOperationCode" implemented-as="String" length="1" packed="EXTERNAL_TYPE">
            <description lang="fr">Type d'opération (Inspection, Pose, Nettoyage...).</description>
         </property>
         <property name="MaintenanceLevel" type="da.ibacs.business.enums.LsaMaintenanceSupportOrganisation" implemented-as="String" length="1" packed="EXTERNAL_TYPE">
            <description lang="fr">Niveau technique d'intervention.</description>
         </property>
         <property name="OperabilityCode" type="da.ibacs.business.enums.LsaOperabilityCode" implemented-as="String" length="1" packed="EXTERNAL_TYPE">
            <description lang="fr">État opérationnel et disponibilité de l'avion pendant l'exécution de l'opération.</description>
         </property>
         <property name="UpdateDate" type="java.util.Date" date-type="DATE"/>
         <property name="TaskCode" type="da.ibacs.business.enums.TaskCode" implemented-as="String" length="4" definition="SECONDARY" packed="EXTERNAL_TYPE">
            <description lang="fr">Concaténation de l'OperationCode, MaintenanceLevel et OperabilityCode (3 caractères). Si un des éléments est nul, le caractère "?" est utilisé.</description>
         </property>
      </element>

      <element type="da.ibacs.LsaOperation_Location">
         <description lang="fr">Cette relation permet d'associer un ou plusieurs Lieux à une Opération.</description>
         <type-id name="LsaOperation -- Location"/>
         <tip role="Operation" type="da.ibacs.LsaOperation" multiplicity="*" dependency="DEFINED"/>
         <tip role="Location" type="da.ibacs.Location" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.LsaOperation_LsaTask">
         <description lang="fr">Cette relation décrit à quelle Tâche ASL une Opération ASL correspond.</description>
         <type-id name="LsaOperation -- LsaTask"/>
         <tip role="Operation" type="da.ibacs.LsaOperation" multiplicity="*" dependency="DEFINED"/>
         <tip role="Task" type="da.ibacs.LsaTask" multiplicity="0..1" dependency="USED_STRONG"/>
      </element>

      <element type="da.ibacs.LsaOperation_Lsac" read-only="true">
         <description lang="fr">Cette relation décrit sur quel Lsac une Opération ASL porte.</description>
         <type-id name="LsaOperation -- Lsac"/>
         <tip role="LsaOperation" type="da.ibacs.LsaOperation" multiplicity="*" dependency="DEFINED"/>
         <tip role="Lsac" type="da.ibacs.Lsac" multiplicity="1" dependency="USED_STRONG" navigable="false"/>
      </element>

      <element type="da.ibacs.LsaOperation_Position">
         <description lang="fr">Cette relation permet d'associer une Position à une Opération de Maintenance.
Elle peut être utilisée quand le Lsac sur lequel porte l'Opération est générique.</description>
         <type-id name="LsaOperation -- Position"/>
         <tip role="Operation" type="da.ibacs.LsaOperation" multiplicity="*" dependency="DEFINED"/>
         <tip role="Position" type="da.ibacs.Position" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.LsaOperation_VersionSet">
         <description lang="fr">Cette relation sert à configurer (Ensemble de Versions) une Opération ASL.</description>
         <type-id name="LsaOperation -- VersionSet"/>
         <tip role="LsaOperation" type="da.ibacs.LsaOperation" multiplicity="*" dependency="DEFINED"/>
         <tip role="VersionSet" type="da.ibacs.VersionSet" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.LsaProcedure">
         <description lang="fr">Définition d'une procédure de Sous-Tâche, configurée par des versions.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.VersionSetSetter</implements>
         <id type="da.ibacs.business.ids.LsaProcedureId" implemented-as="int"/>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
            <arg name="Subtask"/>
            <arg name="VersionSet" optional="true"/>
         </constructor>
         <tip role="Subtask" type="da.ibacs.LsaSubtask" multiplicity="*" dependency="DEFINED">
            <type-id name="LsaSubtask -- LsaProcedure"/>
            <xml target-export-mode="ATTACHED"/>
         </tip>
         <property name="ElapsedTime" type="float">
            <description lang="fr">Temps nécessaire à l'exécution de la Sous-Tâche.
Il est exprimé en heures.</description>
         </property>
         <property name="Procedure" type="String" length="32000">
            <description lang="fr">Texte (En français et en anglais) décrivant la procédure à suivre.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Restriction" type="String" length="65">
            <description lang="fr">Liste de restrictions (En français et en anglais).</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
      </element>

      <element type="da.ibacs.LsaProcedureLogistic" dao-hint="LAZY">
         <description lang="fr">Cette relation permet d'associer une Ressource à une Sous-Tâche.
Elle porte les informations nécessaires de quantification, d'utilisation et de contextualisation.</description>
         <type-id name="LsaProcedureLogistic"/>
         <life-cycle created-by="USER" updated-by="USER" removed-by="USER"/>
         <id type="da.ibacs.business.ids.LsaProcedureLogisticId" implemented-as="int"/>
         <functional-id name="FunctionalId" type="da.ibacs.business.ids.LsaProcedureLogisticFunctionalId">
            <description lang="fr">La vrai clé d'une logistique est composée de 4 éléments or le Lsac et le Label peuvent être nuls.
C'est pourquoi un functionalId est introduit.</description>
            <field name="Procedure"/>
            <field name="Resource"/>
            <field name="Lsac"/>
            <field name="Label"/>
         </functional-id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
            <arg name="Procedure"/>
            <arg name="Resource"/>
            <arg name="Lsac" optional="true"/>
            <arg name="Label" optional="true"/>
         </constructor>
         <tip role="Procedure" type="da.ibacs.LsaProcedure" multiplicity="*" dependency="DEFINED">
            <xml target-export-mode="ATTACHED"/>
         </tip>
         <tip role="Resource" type="da.ibacs.LsaResource" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
         <tip role="Lsac" type="da.ibacs.Lsac" multiplicity="*" dependency="USED_WEAK" nullable="true" navigable="false"/>
         <tip role="Label" type="da.ibacs.Label" multiplicity="*" dependency="USED_WEAK" nullable="true" navigable="false"/>
         <property name="QuantityPerAssembly" type="float"/>
         <property name="NecessaryType" type="da.ibacs.business.enums.NecessaryType" implemented-as="String" length="1" definition="SECONDARY"/>
         <property name="Rate" type="boolean" read-only="true" definition="SECONDARY" getter-prefix="HAS">
            <description lang="fr">Indique si le type de ressource utilisé nécessite un taux (LSAC ou PART)</description>
         </property>
         <property name="ChangeRate" type="float">
            <description lang="fr">Permet de stocker soit le taux édité en local, soit -1 si le taux est systématique, soit -2 si le taux n'est pas édité</description>
            <index type="da.ibacs.business.enums.LsaUsageMode" name="lsaUsageMode" values="STANDARD ACCESS"/>
         </property>
         <property name="EffectiveChangeRate" type="float" definition="SECONDARY" read-only="true">
            <index type="da.ibacs.business.enums.LsaUsageMode" name="lsaUsageMode" values="STANDARD ACCESS"/>
         </property>
         <property name="Systematic" type="boolean" definition="SECONDARY" getter-prefix="IS">
            <index type="da.ibacs.business.enums.LsaUsageMode" name="lsaUsageMode" values="STANDARD ACCESS"/>
         </property>
         <property name="ComputedQuantity" type="float" definition="SECONDARY" read-only="true">
            <description lang="fr">S'il y a un taux, la quantité correspond à la quantité par ensemble multipliée par le taux. Sinon c'est directement la quantité par ensemble.</description>
            <index type="da.ibacs.business.enums.LsaUsageMode" name="lsaUsageMode" values="STANDARD ACCESS"/>
         </property>
      </element>

      <element type="da.ibacs.LsaProcedureLogistic_Unit">
         <description lang="fr">Cette relation permet de définir l'unité d'une Logistique de Sous-Tâche.</description>
         <type-id name="LsaProcedureLogistic -- Unit"/>
         <tip role="LsaProcedureLogistic" type="da.ibacs.LsaProcedureLogistic" multiplicity="*" dependency="DEFINED"/>
         <tip role="Unit" type="da.ibacs.Unit" navigable="false" multiplicity="0..1" dependency="USED_WEAK"/>
      </element>

      <element type="da.ibacs.LsaProcedure_VersionSet">
         <type-id name="LsaProcedure -- VersionSet"/>
         <tip role="LsaProcedure" type="da.ibacs.LsaProcedure" multiplicity="*" dependency="DEFINED"/>
         <tip role="VersionSet" type="da.ibacs.VersionSet" multiplicity="1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.LsaSubtask" extends="da.ibacs.LsaHlTask" discriminator="SUBT">
         <description lang="fr">Définition d'une Sous-Tâche.
Utilisée pour définir les Tâches de Maintenance.
La Sous-Tâche constitue le grain le plus fin de réutilisation pour décrire un morceau de procédure.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.WorkshopElement</implements>
         <id type="da.ibacs.business.ids.LsaSubtaskId" implemented-as="String"/>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
         </constructor>
         <property name="AtaChapter" type="int">
            <description lang="fr">Chapitre Ata auquel appartient les Sous-Tâche.</description>
         </property>
         <property name="AtaSection" type="int">
            <description lang="fr">Section Ata à laquelle appartiennent les Sous-Tâches.</description>
         </property>
         <property name="AtaSectionEnabled" type="boolean" definition="SECONDARY">
            <description lang="fr">Indique si la Sous-Tâche à une section Ata.</description>
         </property>
         <property name="LogisticSubtask" type="boolean" read-only="true" definition="SECONDARY" getter-prefix="IS">
            <description lang="fr">Indique si la Sous-tâche est de nature logistique ou pas.
BADA a permis de définir la logistique au niveau de la Sous-Tâche, alors que précédemment la logistique était définie au niveau des IT (Tâches).
Pour faciliter la migration des données, sans devoir ventiler toute la logistique, des Sous-Tâches logistiques ont été créées.
Ces Sous-Tâches ne décrivent aucune procédure. Elles ne font que définir de la logistique.
Quand une Tâche référence une Sous-Tâche logistique, c'est la logistique de cette Sous-Tâche qui est retenue pour la Tâche.
Sinon, la logistique de la Tâche est calculée en prenant en compte la logistique de chacune de ses Sous-Tâches (non logistiques).
Une Tâche ne peut contenir qu'une seule Sous-Tâche logistique.
Ces Sous-Tâches n'ont normalement été créées qu'au moment de la migration des données.
Une fois que toute la logistique aura été ventilée aux Sous-Tâches, cet attribut ne devrait plus servir.</description>
         </property>
         <property name="AccessMode" type="boolean" getter-prefix="HAS">
            <description lang="fr">Indique si une des logistiques de la sous-tâche a des taux distincts en accès ou en échange</description>
         </property>
      </element>

      <element type="da.ibacs.LsaSubtask_InfoCode">
         <type-id name="LsaSubtask -- InfoCode"/>
         <tip role="LsaSubtask" type="da.ibacs.LsaSubtask" multiplicity="*" dependency="DEFINED"/>
         <tip role="InfoCode" type="da.ibacs.InfoCode" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.LsaSubtask_Lsac">
         <description lang="fr">Cette relation permet de définir les Lsac utilisables pour contextualiser la logistique d'une Sous-Tâche.</description>
         <type-id name="LsaSubtask -- Lsac"/>
         <tip role="LsaSubtask" type="da.ibacs.LsaSubtask" multiplicity="*" dependency="DEFINED"/>
         <tip role="Lsac" type="da.ibacs.Lsac" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.LsaTask" extends="da.ibacs.LsaHlTask" discriminator="TASK">
         <description lang="fr">Définition d'un Tâche de Maintenance.
Décrit la manière de faire une Opération de Maintenance, en faisant abstraction de point d'emploi et de la raison pour laquelle elle doit être faite.
L'application d'une Tâche de Maintenance à un Lsac donne une Opération de Maintenance.
Elle est construite par une séquence ordonnée de Sous-Tâches.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.WorkshopElement</implements>
         <id type="da.ibacs.business.ids.LsaTaskId" implemented-as="String"/>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
         </constructor>

         <property name="ControlNecessity" type="da.ibacs.business.enums.LsaControlNecessityCode" implemented-as="String" length="1" packed="EXTERNAL_TYPE">
            <description lang="fr">Nécessité d'un contrôle durant l'exécution de la tâche.</description>
         </property>
         <property name="DemonstrationCode" type="da.ibacs.business.enums.LsaDemonstrationCode" implemented-as="String" length="1" packed="EXTERNAL_TYPE">
            <description lang="fr">__TODO__ : calculé car devra être traité dans VAMOM</description>
         </property>
         <property name="Criticality" type="da.ibacs.business.enums.LsaCriticalityCode" implemented-as="String" length="1" packed="EXTERNAL_TYPE">
            <description lang="fr">Criticité pour l'avion en cas de mauvaise réalisation de la tâche.</description>
         </property>
         <property name="FacilityRequirement" type="da.ibacs.business.enums.LsaFacilityRequirement" implemented-as="String" length="1" packed="EXTERNAL_TYPE">
            <description lang="fr">Indique si une donnée d’infrastructure est renseignée.</description>
         </property>
         <property name="HazardousCode" type="da.ibacs.business.enums.LsaHazardousCode" implemented-as="String" length="1" packed="EXTERNAL_TYPE">
            <description lang="fr">Indique si l'exécution de la tâche représente un danger pour l'opérateur.</description>
         </property>
         <property name="TrainingRecommendationCode" type="da.ibacs.business.enums.LsaTrainingRecommendationCode" implemented-as="String" length="1" packed="EXTERNAL_TYPE">
            <description lang="fr">Indique si une formation sur cette tâche est recommandée.</description>
         </property>
         <property name="IllustrationNecessity" type="da.ibacs.business.enums.LsaIllustrationNecessity" implemented-as="String" length="1" packed="EXTERNAL_TYPE">
            <description lang="fr">Indique si une illustration est nécessaire pour pouvoir exécuter la tâche.</description>
         </property>

         <property name="Restriction" type="String" length="65">
            <description lang="fr">Liste de restrictions (En français et en anglais).</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>

         <property name="PlannedElapsedTime" type="Float">
            <description lang="fr">Durée estimée de la tâche en heures.</description>
         </property>
         <property name="PlannedWorkload" type="Float">
            <description lang="fr">Charge de travail de la tâche estimée en Homme/heures.</description>
         </property>
         <property name="MeasuredElapsedTimeMax" type="Float" definition="SECONDARY" read-only="true">
            <description lang="fr">Durée maximum de la tâche calculée en minutes à partir de la synthèse logistique.
Une différence entre min et max peut apparaître si plusieurs procédures de sous-tâche sont définies.</description>
         </property>
         <property name="MeasuredElapsedTimeMin" type="Float" definition="SECONDARY" read-only="true">
            <description lang="fr">Durée minimum de la tâche calculée en minutes à partir de la synthèse logistique.
Une différence entre min et max peut apparaître si plusieurs procédures de sous-tâche sont définies.</description>
         </property>

         <property name="AtaChapters" type="da.ibacs.business.ids.AtaChapterSet" implemented-as="String" length="255" packed="EXTERNAL_TYPE" definition="SECONDARY" read-only="true">
            <description lang="fr">Liste des chapitres ATA de cette Tâche.
C'est la liste de chapitres ATA des Opérations liées à la Tâche.</description>
         </property>

         <property name="SubtaskLogistic" type="boolean" definition="SECONDARY" read-only="true" getter-prefix="HAS">
            <description lang="fr">Indique si une occurrence de sous-tâche pointe vers une sous-tâche logistique.
Voir la propriété LogisticSubtask de LsaSubtask.</description>
         </property>

         <method name="hasHlTaskOccurrence" type="boolean">
            <arg name="hlTask" type="da.ibacs.business.LsaHlTask"/>
         </method>

         <method name="hasOperationTargetingLsac" type="boolean">
            <arg name="lsac" type="da.ibacs.business.Lsac"/>
         </method>
      </element>

      <element type="da.ibacs.LsaTaskLogistic" dao-hint="LAZY">
         <description lang="fr">Cette relation permet de définir la logistique d'une Tâche ASL.
Cette logistique est calculée à partir de la logistique des Sous-Tâches.
Il est néanmoins possible d'amender le résultat du calcul.</description>
         <type-id name="LsaTaskLogistic"/>
         <life-cycle created-by="AUTO" updated-by="AUTO" removed-by="AUTO"/>
         <id type="da.ibacs.business.ids.LsaTaskLogisticId" implemented-as="int"/>
         <functional-id name="FunctionalId" type="da.ibacs.business.ids.LsaTaskLogisticFunctionalId">
            <description lang="fr">La vrai clé d'une logistique est composée de 6 éléments or la ressource, le Label et l'opération peuvent être nuls.
C'est pourquoi un functionalId est introduit.</description>
            <field name="LsaTask"/>
            <field name="Resource"/>
            <field name="Label"/>
            <field name="Operation"/>
            <field name="VersionSet"/>
            <field name="Unit"/>
         </functional-id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
            <arg name="FunctionalId" optional="true"/>
            <!-- <arg name="lsaTask" type="da.ibacs.business.LsaTask"/> <arg name="resource" type="da.ibacs.business.Resource"/> <arg name="lsaOperation" type="da.ibacs.business.LsaOperation" optional="true"/> <arg name="label" type="da.ibacs.business.Label" optional="true"/> -->
         </constructor>
         <tip role="LsaTask" type="da.ibacs.LsaTask" multiplicity="*" dependency="DEFINED">
            <xml target-export-mode="ATTACHED"/>
         </tip>
         <tip role="Resource" type="da.ibacs.LsaResource" multiplicity="*" dependency="USED_WEAK" navigable="false" nullable="true"/>
         <tip role="Label" type="da.ibacs.Label" multiplicity="0..1" dependency="USED_WEAK" navigable="false" nullable="true"/>
         <tip role="Operation" type="da.ibacs.LsaOperation" multiplicity="0..1" dependency="USED_WEAK" navigable="false" nullable="true"/>
         <tip role="VersionSet" type="da.ibacs.VersionSet" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
         <tip role="Unit" type="da.ibacs.Unit" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>

         <property name="CorrectedQuantityPerTask" type="Float"/>
         <property name="ComputedQuantityPerTask" type="float"/>
      </element>

      <element type="da.ibacs.LsaTask_DocModule">
         <description lang="fr">Cette relation permet d'associer des Modules Documentaires d'entrée à une Tâche ASL.
Ce sont ces Modules par lesquels il faut entrer dans la documentation pour atteindre tous les Modules nécessaires à la réalisation de la Tâche.</description>
         <type-id name="LsaTask -- DocModule"/>
         <tip role="LsaTask" type="da.ibacs.LsaTask" multiplicity="*" dependency="DEFINED"/>
         <tip role="DocModule" type="da.ibacs.DocModule" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.LsaTask_Method">
         <description lang="fr">Cette relation associe éventuellement une Méthode unique à une Tâche ASL.</description>
         <type-id name="LsaTask -- Method"/>
         <tip role="LsaTask" type="da.ibacs.LsaTask" multiplicity="*" dependency="DEFINED"/>
         <tip role="Method" type="da.ibacs.Method" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.LsaTask_ProductSet">
         <description lang="fr">Cette relation permet d'associer une famille de produits à une Tâche ASL.</description>
         <type-id name="LsaTask -- ProductSet"/>
         <tip role="LsaTask" type="da.ibacs.LsaTask" multiplicity="*" dependency="DEFINED"/>
         <tip role="ProductSet" type="da.ibacs.ProductSet" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.LsaTask_ProductSet_Derived" definition="SECONDARY" read-only="true">
         <description lang="fr">Famille de Produits dérivés de l'atelier.</description>
         <type-id name="LsaTask -- ProductSet (Derived)"/>
         <tip role="LsaTask" type="da.ibacs.LsaTask" multiplicity="*" dependency="DEFINED"/>
         <tip role="DerivedProductSet" type="da.ibacs.ProductSet" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.LsaVamomOperationFollowUp">
         <description lang="fr">Suivi, dans le cadre d'une VAMOM (Visite d'Aptitude à la Mise en Œuvre et à la Maintenance), d'une Opération ASL.
Une VAMOM est une visite de qualification et de validation des procédures de maintenance faite par le client sur avion.
Elle a pour but de "tester" en situation réelle, à savoir sur avion, les procédures de maintenance définies par Dassault Aviation.
Une Opération ASL peut être suivie dans plusieurs VAMOMs.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <implements>da.ibacs.EntityExternalRefSource</implements>
         <id type="da.ibacs.business.ids.LsaVamomOperationFollowUpId" implemented-as="int"></id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
            <arg name="MgtFlask"/>
         </constructor>
         <property name="Title" type="String" length="100">
            <description lang="fr">Titre (En français et en anglais) de l'Opération.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Requested" type="boolean" getter-prefix="IS">
            <description lang="fr">Propriété indiquant si la Vamom a été demandée ou pas</description>
         </property>
         <property name="Closed" type="boolean" getter-prefix="IS">
            <description lang="fr">Propriété indiquant si la Vamom a été clôturée ou pas</description>
         </property>
         <property name="AircraftSerialNumber" type="String" length="4">
            <description lang="fr">Propriété contenant le numéro de série de l'avion utilisé pour la Vamom
- 0-> 99/100 = Rafale Marine (ex : M05, M74)
- 100/101 -> 299/300 = Rafale Monoplace Air (ex: C156, C222)
- 300/301 -> ... = Rafale Biplace Air (ex: B369, B496)</description>
         </property>
         <property name="ClosingDate" type="java.util.Date" date-type="DATE">
            <description lang="fr">Date de clôture du suivi d'opération Vamom  
OU  
date de réalisation sur avion de l'opération</description>
         </property>
      </element>

      <!-- <element type="da.ibacs.LsaVamomOperationFollowUpRmk"> <description lang="fr">Remarques Vamom. A DEFINIR, notamment concernant le choix {MS, Procedure, Doc, System} On en a potentiellement plusieurs par Opération Vamom</description> <life-cycle created-by="USER" updated-by="USER" removed-by="USER"/>
         <id type="da.ibacs.business.ids.LsaVamomOperationFollowUpRmkId" implemented-as="int"></id> <constructor name="CONSTRUCTOR"> <arg name="Id" optional="true"/> <arg name="LsaVamomOperationFollowUp"/> <arg name="CreationDate"/> </constructor> <property name="RmkDomain" type="da.ibacs.business.enums.LsaVamomOperationFollowUpRmkDomain"
         implemented-as="String" length="1" packed="EXTERNAL_TYPE"/> <property name="CreationDate" type="java.util.Date" date-type="DATE" read-only="true"> <description lang="fr">Date de création</description> </property> <property name="LastModified" type="java.util.Date" date-type="DATE"> <description
         lang="fr">Date
         de dernière modification</description> </property> <property name="UserId" type="da.users.UserId" implemented-as="String" length="16"> <description lang="fr">Identification de la personne à l'origine de la remarque.</description> </property> <property name="UserComment" type="String" length="2048">
         <description
         lang="fr">Compte-Rendu laissé par l'utilisateur. Il contient en général les demandes de rectification faites par l'utilisateur (DGA,...)</description> <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/> </property> <property name="Answer" type="String" length="2048">
         <description
         lang="fr"> Contient les solutions proposées aux rectifications remontées dans le Compte-Rendu utilisateur</description> <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/> </property> <property name="Terms" type="String" length="1024"> <description lang="fr">Delais/État
         Indique à quelle livraison les modifications seront prises en compte</description> </property> <property name="User" type="da.users.User" implemented-as="String" definition="SECONDARY" read-only="true"/> <property name="UserString" type="String" definition="SECONDARY" read-only="true"/> </element> -->

      <element type="da.ibacs.LsaVamomOperationFollowUp_LsaOperation">
         <description lang="fr">Une Vamom valide une Tâche de Maintenance via une Opération. Cette relation permet d'effectuer cette validation</description>
         <type-id name="LsaVamomOperationFollowUp -- LsaOperation"/>
         <tip role="VamomOperationFollowUp" type="da.ibacs.LsaVamomOperationFollowUp" multiplicity="*" dependency="DEFINED"/>
         <tip role="Operation" type="da.ibacs.LsaOperation" multiplicity="0..1" dependency="USED_STRONG" navigable="false"/>
      </element>

      <element type="da.ibacs.LsaVamomOperationFollowUp_MgtFlask">
         <type-id name="LsaVamomOperationFollowUp -- MgtFlask"/>
         <tip role="LsaVamomOperationFollowUp" type="da.ibacs.LsaVamomOperationFollowUp" multiplicity="*" dependency="DEFINED"/>
         <tip role="MgtFlask" type="da.ibacs.MgtFlask" multiplicity="1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.LsaVamomOperationFollowUp_Product">
         <type-id name="LsaVamomOperationFollowUp -- Product"/>
         <tip role="LsaVamomOperationFollowUp" type="da.ibacs.LsaVamomOperationFollowUp" multiplicity="*" dependency="DEFINED"/>
         <tip role="Product" type="da.ibacs.Product" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.LsaVamomOperationFollowUp_Standard">
         <type-id name="LsaVamomOperationFollowUp -- Standard"/>
         <tip role="LsaVamomOperationFollowUp" type="da.ibacs.LsaVamomOperationFollowUp" multiplicity="*" dependency="DEFINED"/>
         <tip role="Standard" type="da.ibacs.Standard" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.LsaVamomOperationFollowUp_VersionSet" definition="SECONDARY" read-only="true">
         <type-id name="LsaVamomOperationFollowUp -- VersionSet"/>
         <tip role="Vamom" type="da.ibacs.LsaVamomOperationFollowUp" multiplicity="*" dependency="DEFINED"/>
         <tip role="VersionSet" type="da.ibacs.VersionSet" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>
   </domain>

   <domain name="Lsa-Resources" prefix="Lsa">
      <description lang="fr">Domaine dédié aux ressources ASL (Procédure de maintenance).</description>
      <depends-on>Business-Refs</depends-on>
      <depends-on>Commons</depends-on>
      <depends-on>Impacts-Interface</depends-on>
      <depends-on>Lsa-Resources-Interface</depends-on>
      <depends-on>Resources</depends-on>
      <depends-on>Troubleshooting-Interface</depends-on>

      <element type="da.ibacs.Energy" extends="da.ibacs.Resource" discriminator="NRJ">
         <description lang="fr">Définition d'une Énergie.
Il s'agit d'une ressource particulière, utilisée pour la définition de la logistique d'une procédure de maintenance.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.LsaResource</implements>
         <id type="da.ibacs.business.ids.EnergyId" implemented-as="String">
            <description lang="fr">Identification de l'Energie.
Il s'agit d'une chaine de caractères commençant par "NRJ-"</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <property name="Description" type="String" length="255">
            <description lang="fr">Description (En français et en anglais) de l'Energie.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
      </element>

      <element type="da.ibacs.InfoCode">
         <description lang="fr">Code fonctionnel utilisé pour caractériser les Sous-Tâches ASL.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.Describable</implements>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.InfoCodeId" implemented-as="String" length="3">
            <description lang="fr">Identification d'un Code Fonctionnel.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <property name="Description" type="String" length="255">
            <description lang="fr">Description (En français et en anglais) du Code Fonctionnel.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
      </element>

      <element type="da.ibacs.Label">
         <description lang="fr">Un Label décrit un élément contextuel externe de configuration d'une logistique ASL.
Par exemple, il est possible que la référence d'un outil à utiliser dépende du client, de l'endroit où la maintenance est faite. etc.
Les Labels sont utilisés pour décrire de tels contextes.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.Describable</implements>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.LabelId" implemented-as="String" length="10">
            <description lang="fr">Identificateur d'un Label. Il s'agit d'un texte (presque) libre.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <property name="Description" type="String" length="255">
            <description lang="fr">Description (En français et en anglais) du Label.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
      </element>

      <element type="da.ibacs.Location">
         <description lang="fr">Définition d'un Lieu dans lequel une Opération de Maintenance peut être effectuée.
Utilisé par les Opération ASL.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.Describable</implements>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.LocationId" implemented-as="String" length="3">
            <description lang="fr">Identificateur d'un Lieu de Maintenance. C'est un entier (000 à 999 Rafale) ou une chaîne (GOM) de 3 caractères.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <property name="Description" type="String" length="255">
            <description lang="fr">Description (En français et en anglais) du Lieu.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
      </element>

      <element type="da.ibacs.Lsac" extends="da.ibacs.Resource" discriminator="LSAC">
         <description lang="fr">Définition d'un Lsac (Lsa Candidate).
Un Lsac désigne n'importe quelle partie d'un système principal, objet potentiel d'une opération de maintenance.
Il peut s'agir d'un équipement, d'une Zone, d'un Système, etc.
Un Lsac est une ressource particulière.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.VersionSetGetter</implements>
         <implements>da.ibacs.LsaResource</implements>
         <implements>da.ibacs.TrblElementTarget</implements>

         <id type="da.ibacs.business.ids.LsacId" implemented-as="String">
            <description lang="fr">Identificateur d'un Lsac.
Il est construit avec le préfixe "LSAC-".
Ensuite il intègre le nom du Système de Référence auquel il se rapporte.
La suite est variable : Chapitre [Section [Système]] + Alternative de Conception.
La partie Système est un nombre pair de lettres majuscules.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <property name="Description" type="String" length="255">
            <description lang="fr">Description (En français et en anglais) de la Ressource.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Generic" type="boolean" getter-prefix="IS">
            <description lang="fr">Un Lsac classique (non générique) désigne explicitement une occurrence localisée. Par exemple Roue Gauche, Roue Droite.
Un Lsac générique désigne une occurrence non localisée. Les Lsac génériques sont utilisés quand l'explicitation de la localisation est inutile ou difficile à gérer.
Sur un avion civil ayant beaucoup de hublots, il n'est pas judicieux d'associer un Lsac à chaque hublot.
Dans ce cas, on crée un unique Lsac générique de hublot. Ensuite, l'utilisation d'un tel Lsac nécessite soit de le localiser, soit d'indiquer le nombre d'occurrences dans le système.</description>
         </property>
         <property name="LsacType" type="da.ibacs.business.enums.LsacType" implemented-as="String" length="1" packed="EXTERNAL_TYPE">
            <description lang="fr">Type du Lsac.
Cela peut être : Zone, Accès, Équipement ou Système.</description>
         </property>
         <property name="DefaultChangeRate" type="float">
            <description lang="fr">Valeur par défaut du taux de consommation des pn du lsac.
Cette valeur est utilisée pour initialiser les taux de consommation au niveau d'une Logistique de Sous-Tâche.
La valeur utilisée par la Logistique peut ensuite être modifiée.
Cet attribut sert au métier ASL.</description>
         </property>
         <method name="isAncestor" type="boolean">
            <description lang="fr">Cette méthode permet de vérifier avant l'ajout d'un élément, s'il n'est pas un ancêtre.</description>
            <arg name="other" type="da.ibacs.business.Lsac"/>
         </method>
      </element>

      <element type="da.ibacs.LsacResource" dao-hint="LAZY">
         <description lang="fr">Cette relation permet d'associer des Ressources (Produit ou Famille) à un Lsac.
Cette association est configurée.</description>
         <type-id name="LsacResource"/>
         <implements>da.ibacs.VersionSetSetter</implements>
         <id type="da.ibacs.business.ids.LsacResourceId" implemented-as="da.ibacs.impl.jpa.LsacResourceKey">
            <field name="Lsac"/>
            <field name="Part"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <tip role="Lsac" type="da.ibacs.Lsac" multiplicity="*" dependency="DEFINED">
            <type-id name="LsacResource -- Lsac"/>
            <xml target-export-mode="ATTACHED"/>
         </tip>
         <tip role="Part" type="da.ibacs.Product" multiplicity="*" dependency="USED_WEAK" navigable="false">
            <type-id name="LsacResource -- Part"/>
         </tip>
         <property name="Quantity" type="int"/>
         <property name="SmrCode" type="da.ibacs.business.enums.SmrCode" implemented-as="String" length="5"/>
         <property name="Rfs" type="da.ibacs.business.enums.ReasonForSelection" implemented-as="String" length="1" packed="EXTERNAL_TYPE"/>
         <property name="ReparConsuCode" type="da.ibacs.business.enums.ReparConsuCode" implemented-as="String" length="1" packed="EXTERNAL_TYPE"/>
         <property name="ReparabilityRateLevel" type="int">
            <index type="da.ibacs.business.enums.MaintenanceSupportOrganisation" name="level" values="NTI1 NTI2 NTI3"/>
         </property>
         <!-- <method name="createCompositVersionSet" type="void"> </method> -->
      </element>

      <element type="da.ibacs.LsacResource_VersionSet">
         <description lang="fr">Cette relation permet de configurer l'association d'une Ressource à un Lsac.
Cette configuration participe au calcul de la configuration des Lsac.</description>
         <type-id name="LsacResource -- VersionSet"/>
         <tip role="LsacResource" type="da.ibacs.LsacResource" multiplicity="*" dependency="DEFINED"/>
         <tip role="VersionSet" type="da.ibacs.VersionSet" multiplicity="1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.Lsac_Lsac">
         <description lang="fr">Cette relation sert à décrire la décomposition d'un Lsac en Lsac.
Le nommage des Lsac porte implicitement une information de composition.
Mais sa sémantique est variable. Par exemple ce peut être la décomposition d'un système en sous-systèmes ou d'une fonction en sous-fonctions.
En pratique cette relation est peu utilisée. Elle a néanmoins un impact sur le calcul de la Configuration d'un Lsac.</description>
         <type-id name="Lsac -- Lsac (Composition: Sup -- Inf)"/>
         <tip role="Parent" type="da.ibacs.Lsac" multiplicity="0..1" dependency="DEFINED"/>
         <tip role="Child" plural="Children" type="da.ibacs.Lsac" multiplicity="*" dependency="USED_WEAK"/>
      </element>

      <element type="da.ibacs.Lsac_VersionSet" read-only="true">
         <description lang="fr">Cette relation permet de configurer l'association d'une Configuration à un Lsac.
Cette configuration participe au calcul de la configuration des Lsac.</description>
         <type-id name="Lsac -- VersionSet"/>
         <tip role="Lsac" type="da.ibacs.Lsac" multiplicity="*" dependency="DEFINED"/>
         <tip role="VersionSet" type="da.ibacs.VersionSet" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.Lsac_Zone">
         <description lang="fr">Cette relation permet d'associer une Zone à un Lsac.</description>
         <type-id name="Lsac -- Zone"/>
         <life-cycle created-by="USER" updated-by="USER" removed-by="USER"/>
         <tip role="Lsac" type="da.ibacs.Lsac" multiplicity="*" dependency="DEFINED"/>
         <tip role="Zone" type="da.ibacs.Zone" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.Method">
         <description lang="fr">Définition d'une Méthode permettant de réaliser une Opération de Maintenance.
Il y a des cas où on peut réaliser une même Opération de plusieurs manières différentes.
La Méthode sert à les distinguer. Utilisé principalement pour l'armement.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.Describable</implements>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.MethodId" implemented-as="String" length="10"/>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <property name="Description" type="String" length="255">
            <description lang="fr">Description (En français et en anglais) de la Méthode.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
      </element>

      <element type="da.ibacs.Personnel" extends="da.ibacs.Resource" discriminator="PRSL">
         <description lang="fr">Définition d'un Personnel (compétence) utilisable pour réaliser une Opération de Maintenance.
C'est une Ressource particulière.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.LsaResource</implements>
         <id type="da.ibacs.business.ids.PersonnelId" implemented-as="String">
            <description lang="fr">Chaine constituée d'un préfixe ("PERS-") et d'un suffixe (presque) libre.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <property name="Description" type="String" length="255">
            <description lang="fr">Description (En français et en anglais) du Personnel.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
      </element>

      <element type="da.ibacs.Position">
         <description lang="fr">Explicitation de la Position d'un Lsac.
Utilisable quand le Lsac est générique.
Dans le cas du Rafale, utilisé pour chacun des points d'emport.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.Describable</implements>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.PositionId" implemented-as="String" length="10"/>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <property name="Description" type="String" length="255">
            <description lang="fr">Description (En français et en anglais) de la Position de Lsac.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
      </element>

      <element type="da.ibacs.Zone">
         <description lang="fr">Définition d'une Zone de Maintenance avion.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.Describable</implements>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.ZoneId" implemented-as="String" length="30">
            <description lang="fr">Identification de la Zone de Maintenance.
C'est un nombre à 3 digits pour le rafale.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <property name="Description" type="String" length="255">
            <description lang="fr">Description (En français et en anglais) de la Zone.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
      </element>
   </domain>

   <domain name="Lsa-Resources-Interface">
      <description lang="fr">Il s'agit d'un domaine virtuel permettant de déclarer les interfaces du domaine Lsa-Resources.
 Le but est de supprimer les dépendances inter-domaine.</description>
      <interface type="da.ibacs.LsaResource" purpose="CODE_GENERATION" referenceable="true">
         <description lang="fr">Interface implémentée par les classes des objets qui sont référençables comme logistique ASL.</description>
         <method name="getType" type="da.ibacs.business.enums.LsaResourceType"/>
         <method name="getId" type="da.ibacs.business.ids.ResourceId"/>
         <method name="getEffectiveDefaultUnit" type="da.ibacs.business.Unit"/>
         <method name="getLifeStatus" type="da.ibacs.business.enums.EntityLifeStatus"/>
         <method name="setLifeStatus" type="void">
            <arg name="status" type="da.ibacs.business.enums.EntityLifeStatus"/>
         </method>
         <method name="getComment" type="String">
            <arg name="language" type="da.ibacs.business.Language"></arg>
         </method>
      </interface>
   </domain>

   <domain name="Maintenance-Management-Systems">
      <description lang="fr">Domaine dédié à la gestion des Systèmes de Gestion de Maintenance.</description>
      <depends-on>Commons</depends-on>
      <depends-on>Impacts-Interface</depends-on>
      <depends-on>Lsa-Operations</depends-on>
      <depends-on>Maintenance-Plans</depends-on>
      <depends-on>Resources</depends-on>

      <element type="da.ibacs.Kardex">
         <implements>da.ibacs.LifeStatusSetter</implements>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.KardexId" implemented-as="int">
            <description lang="fr">Identification du Repère</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
         </constructor>
         <property name="Description" type="String" length="255">
            <description lang="fr">Description (En français et en anglais) du Kardex.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="LifeStatus" type="da.ibacs.business.enums.EntityLifeStatus" implemented-as="String" length="1" nullable="false" packed="EXTERNAL_TYPE">
            <description lang="fr">État de définition du cycle de vie standard (Vivant, Déprécié, Mort, ...) d'un repère.</description>
         </property>
         <method name="isAncestor" type="boolean">
            <description lang="fr">Cette méthode permet de vérifier avant l'ajout d'un élément, s'il n'est pas un ancêtre.</description>
            <arg name="other" type="da.ibacs.business.Kardex"/>
         </method>
      </element>

      <element type="da.ibacs.Kardex_Kardex">
         <type-id name="Kardex -- Kardex (Composition: Parent -- Child)"/>
         <tip role="Parent" type="da.ibacs.Kardex" multiplicity="0..1" dependency="DEFINED"/>
         <tip role="Child" plural="Children" type="da.ibacs.Kardex" multiplicity="*" dependency="USED_WEAK"/>
      </element>

      <element type="da.ibacs.Kardex_LsaOperation">
         <type-id name="Kardex -- LsaOperation"/>
         <tip role="Kardex" type="da.ibacs.Kardex" multiplicity="*" dependency="DEFINED"/>
         <tip role="LsaOperation" type="da.ibacs.LsaOperation" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.Kardex_RmpEntry">
         <type-id name="Kardex -- RmpEntry"/>
         <tip role="Kardex" type="da.ibacs.Kardex" multiplicity="*" dependency="DEFINED"/>
         <tip role="RmpEntry" plural="RmpEntries" type="da.ibacs.RmpEntry" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>
   </domain>

   <domain name="Maintenance-Plans" prefix="Rmp">
      <description lang="fr">Domaine métier dédié aux Plans de Maintenance.
Les éléments de ce domaine sont stockés dans la base des Plans de Maintenance.</description>
      <depends-on>Business-Refs</depends-on>
      <depends-on>Commons</depends-on>
      <depends-on>Doc</depends-on>
      <depends-on>Explanations</depends-on>
      <depends-on>Impacts-Interface</depends-on>
      <depends-on>Lsa-Resources</depends-on>
      <depends-on>Lsa-Operations</depends-on>
      <depends-on>Resources</depends-on>
      <depends-on>Workshops-Interface</depends-on>

      <element type="da.ibacs.RmpApplicability">
         <description lang="fr">Définition d'une Applicabilité utilisable pour contraindre les Opérations Programmées d'un Plan de Maintenance.
Il s'agit d'une union de Sous-Applicabilités.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="USER_OR_AUTO"/>
         <implements>da.ibacs.VersionSetGetter</implements>
         <implements>da.ibacs.Explained</implements>
         <implements>da.ibacs.LifeStatusGetter</implements>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.RmpApplicabilityId" implemented-as="int">
            <description lang="fr">Identification d'une Applicabilité. Il s'agit d'un autonum.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
            <arg name="Operation"/>
         </constructor>
         <tip role="Operation" type="da.ibacs.RmpOperation" multiplicity="*" dependency="DEFINED">
            <type-id name="RmpOperation -- RmpApplicability"/>
            <xml target-export-mode="ATTACHED"/>
         </tip>
         <property name="LifeStatus" type="da.ibacs.business.enums.EntityLifeStatus" implemented-as="String" length="1" nullable="false">
            <description lang="fr">État du cycle de vie de l'applicabilité.</description>
         </property>
         <property name="Remark" type="String" length="255">
            <description lang="fr">Remarque (En français et en anglais) de l'applicabilité.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Imp" type="boolean" getter-prefix="IS">
            <description lang="fr">Indique si l'opération concerne le Plan Initial Entretien (PIE) et quelle est incluse dans une autre opération publiée au Plan Recommandé d'entretien (PRE).</description>
         </property>
      </element>

      <element type="da.ibacs.RmpApplicability_DocModule">
         <description lang="fr">Relation entre une applicabilité et des DocModules.
L'applicabilité du DocModule est donc restreinte à celle de l'applicabilité.</description>
         <type-id name="RmpApplicability -- DocModule"/>
         <tip role="RmpApplicability" type="da.ibacs.RmpApplicability" multiplicity="*" dependency="DEFINED"/>
         <tip role="DocModule" type="da.ibacs.DocModule" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.RmpApplicability_VersionSet" definition="SECONDARY" read-only="true">
         <description lang="fr">Applicabilité en version calculé par l'union des versions présentes dans ses sous-applicabilités.</description>
         <type-id name="RmpApplicability -- VersionSet"/>
         <tip role="RmpApplicability" plural="RmpApplicabilities" type="da.ibacs.RmpApplicability" multiplicity="*" dependency="DEFINED"/>
         <tip role="VersionSet" type="da.ibacs.VersionSet" multiplicity="1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.RmpEntry">
         <description lang="fr">Classe de base utilisée pour classer et organiser les Opérations Programmées. 
Elle se décompose en deux sous catégories : 
 - Une entrée spécifique utilisée par le PRE Avion
 - Une autre entrée spécifique utilisée par le PRE Équipement et distinguable par le fait qu'elle est liée à des Produits.
L'Identification de ces entrées respecte la convention ATA utilisée pour les Lsac.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.VersionSetGetter</implements>
         <implements>da.ibacs.Explained</implements>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.RmpEntryId" implemented-as="String" length="43">
            <description lang="fr">Identificateur d'une Entrée.
Il intègre le nom du Système de Référence auquel il se rapporte.
La suite est variable : Chapitre [Section [Système]] + Alternative de Conception.
La partie Système est un nombre pair de lettres majuscules.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <property name="Name" type="String" length="255">
            <description lang="fr">Nom (En français et en anglais) de l'entrée.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Category" type="da.ibacs.business.enums.Category" implemented-as="String" length="1">
            <description lang="fr">Indique si l'élément est fourni et/ou monté par le client ou l’avionneur.</description>
         </property>
         <property name="Linked" type="boolean" definition="SECONDARY" read-only="true" getter-prefix="IS">
            <description lang="fr">Spécifie si des produits sont associés à l'entrée Rmp.</description>
         </property>
         <method name="isAncestor" type="boolean">
            <description lang="fr">Cette méthode permet de vérifier avant l'ajout d'un élément, s'il n'est pas un ancêtre.</description>
            <arg name="other" type="da.ibacs.business.RmpEntry"/>
         </method>
      </element>

      <element type="da.ibacs.RmpEntryProduct">
         <description lang="fr">Relation permettant d'associer des Articles à une Entrée de Plan de Maintenance.</description>
         <implements>da.ibacs.VersionSetSetter</implements>
         <id type="da.ibacs.business.ids.RmpEntryProductId" implemented-as="da.ibacs.impl.jpa.RmpEntryProductKey">
            <field name="Product"/>
            <field name="RmpEntry"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <tip role="RmpEntry" type="da.ibacs.RmpEntry" multiplicity="0..1" dependency="USED_STRONG">
            <type-id name="RmpEntryProduct -- RmpEntry"/>
            <xml target-export-mode="ATTACHED"/>
         </tip>
         <tip role="Product" type="da.ibacs.Product" multiplicity="*" dependency="USED_WEAK" navigable="false">
            <type-id name="RmpEntryProduct -- Product"/>
         </tip>
      </element>

      <element type="da.ibacs.RmpEntryProduct_VersionSet">
         <description lang="fr">Cette relation permet de configurer en version l'association d'un Product à une Entrée de Plan de Maintenance.</description>
         <type-id name="RmpEntryProduct -- VersionSet"/>
         <tip role="RmpEntryProduct" type="da.ibacs.RmpEntryProduct" multiplicity="*" dependency="DEFINED"/>
         <tip role="VersionSet" type="da.ibacs.VersionSet" multiplicity="1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.RmpEntry_Lsac">
         <description lang="fr">Relation permettant d'associer des Lsac à une Entrée de Plan de Maintenance.</description>
         <type-id name="RmpEntry -- Lsac"/>
         <tip role="RmpEntry" type="da.ibacs.RmpEntry" multiplicity="0..1" dependency="DEFINED"/>
         <tip role="Lsac" type="da.ibacs.Lsac" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.RmpEntry_RmpEntry">
         <description lang="fr">Permet d'expliciter une relation de parenté entre Entrées de Plan de Maintenance.</description>
         <type-id name="RmpEntry -- RmpEntry"/>
         <tip role="Parent" type="da.ibacs.RmpEntry" multiplicity="0..1" dependency="DEFINED"/>
         <tip role="Child" plural="Children" type="da.ibacs.RmpEntry" multiplicity="*" dependency="USED_WEAK"/>
      </element>

      <element type="da.ibacs.RmpEntry_VersionSetApplicability" definition="SECONDARY" read-only="true">
         <description lang="fr">Applicabilité, en version, calculée par l'union des applicabilité pre.</description>
         <type-id name="RmpEntry -- VersionSet (Applicability)"/>
         <tip role="RmpEntryApplicability" plural="RmpEntriesApplicability" type="da.ibacs.RmpEntry" multiplicity="*" dependency="DEFINED"/>
         <tip role="VersionSetApplicability" type="da.ibacs.VersionSet" multiplicity="1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.RmpEntry_VersionSetProduct" definition="SECONDARY" read-only="true">
         <description lang="fr">Applicabilité, en version, calculée par l'union des versions des produits.</description>
         <type-id name="RmpEntry -- VersionSet (Product)"/>
         <tip role="RmpEntryProduct" plural="RmpEntriesProduct" type="da.ibacs.RmpEntry" multiplicity="*" dependency="DEFINED"/>
         <tip role="VersionSetProduct" type="da.ibacs.VersionSet" multiplicity="1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.RmpLimit">
         <description lang="fr">Classe qui définit les périodes, nature, et autres paramètres entrant dans la définition d'une Opération Programmée d'un Plan de Maintenance.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="USER"/>
         <id type="da.ibacs.business.ids.RmpLimitId" implemented-as="int">
            <description lang="fr">Identification d'une limite. Il s'agit d'un autonum.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
            <arg name="Applicability"/>
            <arg name="LimitType"/>
         </constructor>
         <tip role="Applicability" type="da.ibacs.RmpApplicability" multiplicity="*" dependency="DEFINED" collection="LIST">
            <type-id name="RmpApplicability -- RmpLimit"/>
            <xml target-export-mode="ATTACHED"/>
         </tip>
         <static name="META_ENUM_CLIMATE" type="da.ibacs.business.MetaEnumType.Value" value="MetaEnumType.INSTANCE.createOrFind(&quot;Climate&quot;)">
            <description lang="fr">Cf. relation RmpLimit_Climate</description>
         </static>
         <property name="Value" type="Double" nullable="true">
            <description lang="fr">Valeur de la limit dans unité spécifiée par la relation RmpLimit_RmpUnit</description>
         </property>
         <property name="Remark" type="String" length="1023">
            <description lang="fr">Remarque (En français et en anglais) de la limite.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Calendar" type="boolean" definition="SECONDARY" getter-prefix="IS" read-only="true">
            <description lang="fr">Une limite est calendaire si elle a une unité de type calendaire.</description>
         </property>
      </element>

      <element type="da.ibacs.RmpLimitType">
         <description lang="fr">Les types de limite servent à catégoriser (et ordonner) les limites.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.RmpLimitTypeId" implemented-as="int">
            <description lang="fr">Identification d'un type de limite. Il s'agit d'un autonum.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
         </constructor>
         <property name="Code" type="String" length="8">
            <description lang="fr">Code (En français et en anglais) du type de limite (U, U+S, SEUL...).</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Description" type="String" length="255">
            <description lang="fr">Description (En français et en anglais) du type de limite.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Priority" type="int">
            <description lang="fr">Entier (qui doit être unique) permettant d'ordonner les types de limites ainsi que les limites.</description>
         </property>
      </element>

      <element type="da.ibacs.RmpLimit_Climate">
         <description lang="fr">Relation permettant d'indiquer si une limite est valable pour un climat particulier.</description>
         <type-id name="RmpLimit -- MetaEnumValue (Climate)"/>
         <tip role="RmpLimit" type="da.ibacs.RmpLimit" multiplicity="*" dependency="DEFINED"/>
         <tip role="Climate" type="da.ibacs.MetaEnumValue" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.RmpLimit_RmpLimitType">
         <description lang="fr">Relation permettant d'indiquer le type de limite.</description>
         <type-id name="RmpLimit -- RmpLimitType"/>
         <tip role="Limit" type="da.ibacs.RmpLimit" multiplicity="*" dependency="DEFINED"/>
         <tip role="LimitType" type="da.ibacs.RmpLimitType" multiplicity="1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.RmpLimit_RmpUnit">
         <description lang="fr">Relation permettant d'indiquer l'unité de la limite.</description>
         <type-id name="RmpLimit -- RmpUnit"/>
         <tip role="Limit" type="da.ibacs.RmpLimit" multiplicity="*" dependency="DEFINED"/>
         <tip role="Unit" type="da.ibacs.RmpUnit" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.RmpLimit_RmpVisitType">
         <description lang="fr">Relation permettant d'associer des types de visite à une limite de Plan de Maintenance.</description>
         <type-id name="RmpLimit -- RmpVisitType"/>
         <tip role="Limit" type="da.ibacs.RmpLimit" multiplicity="*" dependency="USED_STRONG"/>
         <tip role="VisitType" type="da.ibacs.RmpVisitType" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.RmpOperation">
         <description lang="fr">Description d'une Opération Programmée.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.VersionSetGetter</implements>
         <implements>da.ibacs.Explained</implements>
         <implements>da.ibacs.LifeStatusGetter</implements>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <implements>da.ibacs.WorkshopElement</implements>
         <id type="da.ibacs.business.ids.RmpOperationId" implemented-as="int">
            <description lang="fr">Identification d'une opération. Il s'agit d'un autonum.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
            <arg name="Entry" optional="true"/>
         </constructor>
         <tip role="Entry" type="da.ibacs.RmpEntry" multiplicity="*" dependency="DEFINED" collection="LIST">
            <type-id name="RmpEntry -- RmpOperation"/>
            <xml target-export-mode="ATTACHED"/>
         </tip>
         <property name="LifeStatus" type="da.ibacs.business.enums.EntityLifeStatus" implemented-as="String" length="1" nullable="false" read-only="true" definition="SECONDARY">
            <description lang="fr">État du cycle de vie de la ressource.</description>
         </property>
         <property name="Title" type="String" length="255">
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="InternalRemark" type="String" length="255">
            <description lang="fr">Remarque interne monolingue.</description>
         </property>
         <property name="Remark" type="String" length="255">
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Consolidation" type="String" length="255">
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Mso" type="da.ibacs.business.enums.RmpMaintenanceSupportOrganisation" implemented-as="String" length="1" packed="EXTERNAL_TYPE"/>
         <property name="EffectiveMso" type="da.ibacs.business.enums.RmpMaintenanceSupportOrganisation" implemented-as="String" length="1" definition="SECONDARY" packed="EXTERNAL_TYPE">
            <description lang="fr">Correspond soit au Nti défini dans le RmpOperationType (si non nul), soit le Nti de l'opération.</description>
         </property>
         <property name="TaskFollowing" type="da.ibacs.business.enums.RmpTaskFollowing" implemented-as="String" length="1" packed="EXTERNAL_TYPE"/>
         <property name="StudyOrigin" type="da.ibacs.business.enums.RmpStudyOriginMask" implemented-as="String" length="10" packed="EXTERNAL_TYPE"/>
      </element>

      <element type="da.ibacs.RmpOperationType">
         <description lang="fr">Définition du Type d'une Opération Programmée.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.Describable</implements>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.RmpOperationTypeId" implemented-as="int">
            <description lang="fr">Identification d'un type d'opération. Il s'agit d'un autonum.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
         </constructor>
         <property name="Code" type="String" length="8">
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Description" type="String" length="255">
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Priority" type="int"/>
         <property name="Mso" type="da.ibacs.business.enums.RmpMaintenanceSupportOrganisation" implemented-as="String" length="1" packed="EXTERNAL_TYPE"/>
      </element>

      <element type="da.ibacs.RmpOperation_DocModule">
         <type-id name="RmpOperation -- DocModule"/>
         <tip role="RmpOperation" type="da.ibacs.RmpOperation" multiplicity="*" dependency="DEFINED"/>
         <tip role="DocModule" type="da.ibacs.DocModule" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.RmpOperation_LsaOperation">
         <type-id name="RmpOperation -- LsaOperation"/>
         <tip role="RmpOperation" type="da.ibacs.RmpOperation" multiplicity="*" dependency="DEFINED"/>
         <tip role="LsaOperation" type="da.ibacs.LsaOperation" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.RmpOperation_RmpOperationType">
         <type-id name="RmpOperation -- RmpOperationType"/>
         <tip role="Operation" type="da.ibacs.RmpOperation" multiplicity="*" dependency="DEFINED"/>
         <tip role="OperationType" type="da.ibacs.RmpOperationType" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.RmpOperation_VersionSet" definition="SECONDARY" read-only="true">
         <type-id name="RmpOperation -- VersionSet"/>
         <tip role="RmpOperation" type="da.ibacs.RmpOperation" multiplicity="*" dependency="DEFINED"/>
         <tip role="VersionSet" type="da.ibacs.VersionSet" multiplicity="1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.RmpSubApplicability">
         <description lang="fr">Définition d'une Sous-Applicabilité.
Une union de Sous-Applicabilités permet de définir un Applicabilité.
Une Sous-Applicabilité est définie par un ensemble de restrictions.
Ces restrictions peuvent porter sur des Versions, un Standard, une Affaire, des Rangs et des Modifications.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="USER_OR_AUTO"/>
         <implements>da.ibacs.VersionSetSetter</implements>
         <id type="da.ibacs.business.ids.RmpSubApplicabilityId" implemented-as="int">
            <description lang="fr">Identification d'une sous-applicabilité. Il s'agit d'un autonum.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
            <arg name="Applicability"/>
            <arg name="VersionSet"/>
         </constructor>
         <tip role="Applicability" type="da.ibacs.RmpApplicability" multiplicity="*" dependency="DEFINED">
            <type-id name="RmpApplicability -- RmpSubApplicability"/>
            <xml target-export-mode="ATTACHED"/>
         </tip>
         <property name="Modification" type="String" length="1052"/>
         <property name="Range" type="da.RangeSet" length="64" implemented-as="String"/>
      </element>

      <element type="da.ibacs.RmpSubApplicability_Business">
         <type-id name="RmpSubApplicability -- Business"/>
         <tip role="RmpSubApplicability" plural="RmpSubApplicabilities" type="da.ibacs.RmpSubApplicability" multiplicity="*" dependency="DEFINED"/>
         <tip role="Business" plural="Businesses" type="da.ibacs.Business" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.RmpSubApplicability_StandardSet">
         <type-id name="RmpSubApplicability -- StandardSet"/>
         <tip role="RmpSubApplicability" plural="RmpSubApplicabilities" type="da.ibacs.RmpSubApplicability" multiplicity="*" dependency="DEFINED"/>
         <tip role="StandardSet" type="da.ibacs.StandardSet" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.RmpSubApplicability_VersionSet">
         <type-id name="RmpSubApplicability -- VersionSet"/>
         <tip role="RmpSubApplicability" plural="RmpSubApplicabilities" type="da.ibacs.RmpSubApplicability" multiplicity="*" dependency="DEFINED"/>
         <tip role="VersionSet" type="da.ibacs.VersionSet" multiplicity="1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.RmpUnit">
         <description lang="fr">Définition d'une Unité de Mesure spécifique à la Maintenance Programmée.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.Describable</implements>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.RmpUnitId" implemented-as="int">
            <description lang="fr">Identification d'une unité PRE. Il s'agit d'un autonum.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
         </constructor>
         <property name="Priority" type="int"/>
         <property name="Name" type="String" length="255">
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Description" type="String" length="255">
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Calendar" type="boolean" getter-prefix="IS"/>
      </element>

      <element type="da.ibacs.RmpVisitType">
         <description lang="fr">Définition d'un type de visite.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.Describable</implements>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <implements>da.ibacs.VersionSetSetter</implements>
         <id type="da.ibacs.business.ids.RmpVisitTypeId" implemented-as="int">
            <description lang="fr">Identification d'un type de visite. Il s'agit d'un autonum.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
         </constructor>
         <property name="Priority" type="int"/>
         <property name="LifeStatus" type="da.ibacs.business.enums.EntityLifeStatus" implemented-as="String" length="1" nullable="false" packed="EXTERNAL_TYPE">
            <description lang="fr">État de définition du cycle de vie standard (Vivant ou Mort) d'un type de visite.</description>
         </property>
         <property name="Name" type="String" length="255">
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Description" type="String" length="255">
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
      </element>

      <element type="da.ibacs.RmpVisitType_VersionSet">
         <description lang="fr">Cette relation permet de configurer en version un type de visite du Plan de Maintenance.</description>
         <type-id name="RmpVisitType -- VersionSet"/>
         <tip role="RmpVisitType" type="da.ibacs.RmpVisitType" multiplicity="*" dependency="DEFINED"/>
         <tip role="VersionSet" type="da.ibacs.VersionSet" multiplicity="1" dependency="USED_WEAK" navigable="false"/>
      </element>
   </domain>

   <domain name="Management" prefix="Mgt">
      <description lang="fr">Domaine dédié aux activités de pilotage.</description>
      <depends-on>Attributes</depends-on>
      <depends-on>Commons</depends-on>
      <depends-on>External-Refs</depends-on>
      <depends-on>Impacts-Interface</depends-on>

      <element type="da.ibacs.MgtActor">
         <description lang="fr">Acteur jouant un rôle dans des activités de pilotage.
Ce peut être une personne, une entité, ...</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.MgtActorId" implemented-as="int">
            <description lang="fr">Identification de l'acteur</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
         </constructor>
         <property name="Name" type="String" length="128">
            <description lang="fr">Nom de l'acteur</description>
         </property>
         <property name="Extern" type="boolean" getter-prefix="IS">
            <description lang="fr">Vrai si l'acteur est externe à DA</description>
         </property>
      </element>

      <element type="da.ibacs.MgtContract">
         <description lang="fr">Définition d'un contrat.
Un Contrat a 2 parties prenantes : le Prescripteur et l'Exécutant.
Il est également caractérisé par des flux (fournitures).
Chaque flux doit être produit par l'une des parties prenantes. L'autre partie en est consommatrice.
Un Contrat peut être décomposé en sous-contrats.
Un Contrat peut définir des Cagnottes.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <implements>da.ibacs.EntityExternalRefSource</implements>
         <id type="da.ibacs.business.ids.MgtContractId" implemented-as="int">
            <description lang="fr">Identification du contrat.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
            <arg name="Deadline" optional="true"/>
            <arg name="StartDate" optional="true"/>
         </constructor>
         <property name="Title" type="String" length="255">
            <description lang="fr">Titre du contrat.</description>
         </property>
         <method name="isAncestor" type="boolean">
            <arg name="other" type="da.ibacs.business.MgtContract"/>
         </method>
      </element>

      <element type="da.ibacs.MgtContractActorClient">
         <description lang="fr">Définition du prescripteur d'un Marché.</description>
         <type-id name="MgtContract -- MgtActor (Client)"/>
         <tip role="ContractAsClient" plural="ContractsAsClient" type="da.ibacs.MgtContract" multiplicity="*" dependency="DEFINED"/>
         <tip role="Client" type="da.ibacs.MgtActor" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.MgtContractActorProvider">
         <description lang="fr">Définition de l'exécutant d'un Marché.</description>
         <type-id name="MgtContract -- MgtActor (Provider)"/>
         <tip role="ContractAsProvider" plural="ContractsAsExecutor" type="da.ibacs.MgtContract" multiplicity="*" dependency="DEFINED"/>
         <tip role="Provider" type="da.ibacs.MgtActor" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.MgtContractComposition">
         <description lang="fr">Description de la relation de décomposition d'un Marché en sous-marchés.</description>
         <type-id name="MgtContract -- MgtContract (Composition: Parent -- Child)"/>
         <tip role="Parent" type="da.ibacs.MgtContract" multiplicity="0..1" dependency="DEFINED"/>
         <tip role="Child" plural="Children" type="da.ibacs.MgtContract" multiplicity="*" dependency="USED_STRONG"/>
      </element>

      <element type="da.ibacs.MgtContractDeadline" read-only="true">
         <description lang="fr">Définition de la date limite d'un Contrat.</description>
         <type-id name="MgtContract -- MgtMilestone (Deadline)"/>
         <tip role="ContractAsDeadline" type="da.ibacs.MgtContract" multiplicity="0..1" dependency="DEFINED"/>
         <tip role="Deadline" type="da.ibacs.MgtMilestone" multiplicity="1" dependency="USED_STRONG" navigable="false"/>
      </element>

      <element type="da.ibacs.MgtContractPot">
         <description lang="fr">Association d'une Cagnotte à un Contrat (Marché).</description>
         <type-id name="MgtContract -- MgtPot"/>
         <tip role="Contract" type="da.ibacs.MgtContract" multiplicity="1" dependency="DEFINED"/>
         <tip role="Pot" type="da.ibacs.MgtPot" multiplicity="*" dependency="USED_STRONG">
            <xml target-export-mode="OWNED"/>
         </tip>
      </element>

      <element type="da.ibacs.MgtContractStartDate" read-only="true">
         <description lang="fr">Définition de la date de notification d'un Contrat.</description>
         <type-id name="MgtContract -- MgtMilestone (StartDate)"/>
         <tip role="ContractAsStartDate" type="da.ibacs.MgtContract" multiplicity="0..1" dependency="DEFINED"/>
         <tip role="StartDate" type="da.ibacs.MgtMilestone" multiplicity="1" dependency="USED_STRONG" navigable="false"/>
      </element>

      <element type="da.ibacs.MgtFlask" abstract="true" inheritance-strategy="SINGLE_TABLE" discriminator-length="4">
         <description lang="fr">L'utilisation de fourniture et tâche étant très proche, cet objet "Fournâche" porte tous les attributs et les relations communs:
 - Les informations de suivi;
 - La décomposition en sous-tâches ou sous-fournitures (exclusive);
 - La dépendance vers d'autres tâches ou fournitures;
 - L'allocation d'un acteur pour un rôle donné (dont 1 responsable).</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.LifeStatusSetter</implements>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactSource</implements>
         <implements>da.ibacs.Attribuable</implements>
         <implements>da.ibacs.EntityExternalRefSource</implements>
         <id type="da.ibacs.business.ids.MgtFlaskId" implemented-as="String" length="10">
            <description lang="fr">Identification d'une fournâche (fourniture ou tâche).</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
            <arg name="StartDate" optional="true"/>
            <arg name="TargetDate" optional="true"/>
            <arg name="Deadline" optional="true"/>
         </constructor>
         <static name="META_ENUM_FLASK_TYPE" type="da.ibacs.business.MetaEnumType.Value" value="MetaEnumType.INSTANCE.createOrFind(&quot;FlaskType&quot;)"/>
         <property name="MgtFlaskType" type="da.ibacs.business.enums.MgtFlaskType" implemented-as="String" length="4" packed="EXTERNAL_TYPE"/>
         <property name="LifeStatus" type="da.ibacs.business.enums.EntityLifeStatus" implemented-as="String" length="1" nullable="false" packed="EXTERNAL_TYPE">
            <description lang="fr">État de définition du cycle de vie standard (Vivant, Déprécié, Mort, ...) d'une tâche ou d'une fourniture.</description>
         </property>
         <property name="Title" type="String" length="255">
            <description lang="fr">Titre de la fournâche.</description>
         </property>

         <property name="ProgressStatus" type="da.ibacs.business.enums.MgtProgressStatus" implemented-as="String" length="1" packed="EXTERNAL_TYPE"/>

         <property name="PrivateComment" type="String" length="1024">
            <description lang="fr">Commentaire privé.</description>
         </property>
         <property name="PublicComment" type="String" length="1024">
            <description lang="fr">Commentaire public.</description>
         </property>
         <method name="isAncestor" type="boolean">
            <description lang="fr">Cette méthode permet de vérifier avant l'ajout d'un élément, s'il n'est pas un ancêtre.</description>
            <arg name="other" type="da.ibacs.business.MgtFlask"/>
         </method>
         <method name="hasAttributesForType" type="boolean">
            <description lang="fr">Cette méthode permet de vérifier que le type a bien ses attributs.</description>
            <arg name="type" type="String"/>
         </method>
      </element>

      <element type="da.ibacs.MgtFlaskActorAllocation" dao-hint="LAZY">
         <description lang="fr">Relation d'allocation d'acteurs pour une tâche.</description>
         <type-id name="MgtFlaskActorAllocation"/>
         <life-cycle created-by="USER" updated-by="USER" removed-by="USER"/>
         <id type="da.ibacs.business.ids.MgtFlaskActorAllocationId" implemented-as="da.ibacs.impl.jpa.MgtFlaskActorAllocationKey">
            <description lang="fr">Identification de la Tâche.</description>
            <field name="Actor"/>
            <field name="Flask"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <tip role="Flask" type="da.ibacs.MgtFlask" multiplicity="*" dependency="DEFINED">
            <xml target-export-mode="ATTACHED"/>
         </tip>
         <tip role="Actor" type="da.ibacs.MgtActor" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
         <static name="META_ENUM_MGT_ALLOCATION_ROLE" type="da.ibacs.business.MetaEnumType.Value" value="MetaEnumType.INSTANCE.createOrFind(&quot;MgtAllocRole&quot;)">
            <description lang="fr">Cf. relation MgtFlaskActorAllocation_Role</description>
         </static>
         <property name="Manager" type="boolean" definition="SECONDARY" getter-prefix="IS">
            <description lang="fr">Indique si l'acteur est le responsable de la tâche.
Il ne peut y avoir qu'un seul responsable par tâche.</description>
         </property>
      </element>

      <element type="da.ibacs.MgtFlaskActorAllocation_Role">
         <description lang="fr">Lorsqu'un acteur est associé à une MgtFlask, on peut indiquer quel est son rôle.</description>
         <type-id name="MgFlaskActorAllocation -- MetaEnumValue (Role)"/>
         <tip role="Allocation" type="da.ibacs.MgtFlaskActorAllocation" multiplicity="*" dependency="DEFINED"/>
         <tip role="Role" type="da.ibacs.MetaEnumValue" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.MgtFlaskComposition">
         <description lang="fr">Relation de décomposition d'une Tâche en Sous-Tâches.</description>
         <type-id name="MgtFlask -- MgtFlask (Composition: Parent -- Child)"/>
         <tip role="Parent" type="da.ibacs.MgtFlask" multiplicity="0..1" dependency="DEFINED" collection="LIST">
            <description lang="fr">Parent de la Tâche enfant.</description>
         </tip>
         <tip role="Child" plural="Children" type="da.ibacs.MgtFlask" multiplicity="*" dependency="USED_STRONG">
            <description lang="fr">Enfants de la Tâche parente.</description>
         </tip>
      </element>

      <element type="da.ibacs.MgtFlaskContract" dao-hint="LAZY">
         <description lang="fr">Suivi d'un contrat par une tâche.</description>
         <type-id name="MgtFlask -- MgtContract"/>
         <life-cycle created-by="USER" updated-by="USER" removed-by="USER"/>
         <id type="da.ibacs.business.ids.MgtFlaskContractId" implemented-as="da.ibacs.impl.jpa.MgtFlaskContractKey">
            <field name="Contract"/>
            <field name="Flask"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
            <arg name="Input"/>
         </constructor>
         <tip role="Flask" type="da.ibacs.MgtFlask" multiplicity="*" dependency="DEFINED">
            <xml target-export-mode="ATTACHED"/>
         </tip>
         <tip role="Contract" type="da.ibacs.MgtContract" multiplicity="*" dependency="USED_STRONG"/>
         <property name="Input" type="boolean" getter-prefix="IS"/>
      </element>

      <element type="da.ibacs.MgtFlaskDeadline" read-only="true">
         <description lang="fr">Définition de la date limite d'une Tâche.</description>
         <type-id name="MgtFlask -- MgtMilestone (Deadline)"/>
         <life-cycle created-by="USER" updated-by="USER" removed-by="USER"/>
         <tip role="FlaskAsDeadline" type="da.ibacs.MgtFlask" multiplicity="0..1" dependency="DEFINED"/>
         <tip role="Deadline" type="da.ibacs.MgtMilestone" multiplicity="1" dependency="USED_STRONG" navigable="false"/>
      </element>

      <element type="da.ibacs.MgtFlaskDependency" dao-hint="LAZY">
         <description lang="fr">Relation de dépendance d'une Tâche vers une autre Tâche.</description>
         <type-id name="MgtFlask -- MgtFlask (Dependency: Slave -- Master)"/>
         <life-cycle created-by="USER" updated-by="USER" removed-by="USER"/>
         <id type="da.ibacs.business.ids.MgtFlaskDependencyId" implemented-as="da.ibacs.impl.jpa.MgtFlaskDependencyKey">
            <description lang="fr">Identification de la Tâche.</description>
            <field name="Master"/>
            <field name="Slave"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <tip role="Slave" type="da.ibacs.MgtFlask" multiplicity="*" dependency="DEFINED">
            <description lang="fr">Tâches dépendante.</description>
            <xml target-export-mode="ATTACHED"/>
         </tip>
         <tip role="Master" type="da.ibacs.MgtFlask" multiplicity="*" dependency="USED_WEAK" collection="LIST" navigable="false">
            <description lang="fr">Tâches indépendante.</description>
         </tip>
         <property name="Type" type="da.ibacs.business.enums.MgtFlaskDependencyType" implemented-as="String" length="2" packed="EXTERNAL_TYPE"/>
      </element>

      <element type="da.ibacs.MgtFlaskManager" definition="SECONDARY">
         <type-id name="MgtFlask -- MgtActor (Manager)"/>
         <life-cycle created-by="AUTO" updated-by="AUTO" removed-by="AUTO"/>
         <tip role="Flask" type="da.ibacs.MgtFlask" multiplicity="*" dependency="DEFINED"/>
         <tip role="Manager" type="da.ibacs.MgtActor" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.MgtFlaskPot" dao-hint="LAZY">
         <description lang="fr">Indique qu'un élément consomme une certaine quantité d'une cagnotte </description>
         <type-id name="MgtFlask -- MgtPot (Allocation and Consumption)"/>
         <id type="da.ibacs.business.ids.MgtFlaskPotId" implemented-as="da.ibacs.impl.jpa.MgtFlaskPotKey">
            <field name="Flask"/>
            <field name="Pot"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <tip role="Flask" type="da.ibacs.MgtFlask" multiplicity="*" dependency="DEFINED">
            <xml target-export-mode="ATTACHED"/>
         </tip>
         <tip role="Pot" type="da.ibacs.MgtPot" multiplicity="*" dependency="USED_WEAK"/>
         <property name="AllocatedValue" type="int">
            <description lang="fr">Valeur allouée</description>
         </property>
         <property name="ConsumedValue" type="int">
            <description lang="fr">Valeur consommée</description>
         </property>
      </element>

      <element type="da.ibacs.MgtFlaskStartDate" read-only="true">
         <description lang="fr">Définition de la date de démarrage d'une Tâche.</description>
         <type-id name="MgtFlask -- MgtMilestone (StartDate)"/>
         <life-cycle created-by="USER" updated-by="USER" removed-by="USER"/>
         <tip role="FlaskAsStartDate" type="da.ibacs.MgtFlask" multiplicity="0..1" dependency="DEFINED"/>
         <tip role="StartDate" type="da.ibacs.MgtMilestone" multiplicity="1" dependency="USED_STRONG" navigable="false"/>
      </element>

      <element type="da.ibacs.MgtFlaskTarget">
         <description lang="fr">Permet d'associer un objet IBACS (n'importe lequel) à une Fournâche pour dire que cet objet correspond à un attendu de la Fournâche.
On peut associer autant d'objets que nécessaire.
Il s'agit en fait d'une relation (pas encore supporté par IBACS).</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="USER"/>
         <id type="da.ibacs.business.ids.MgtFlaskTargetId" implemented-as="da.ibacs.impl.jpa.MgtFlaskTargetKey">
            <field name="Flask"/>
            <field name="Target"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <tip role="Flask" type="da.ibacs.MgtFlask" multiplicity="*" dependency="USED_WEAK" navigable="false">
            <type-id name="MgtFlaskTarget -- MgtFlask"/>
         </tip>
         <property name="Target" type="da.rids.RawId" implemented-as="String" length="128" read-only="true">
            <description lang="fr">Identification de l'objet IBACS référencé.</description>
         </property>
         <property name="Version" type="String" length="255">
            <description lang="fr">Identification de la version de l'objet IBACS référencé.</description>
         </property>
      </element>

      <element type="da.ibacs.MgtFlaskTargetDate" read-only="true">
         <description lang="fr">Définition de la date cible d'une Tâche.</description>
         <type-id name="MgtFlask -- MgtMilestone (TargetDate)"/>
         <life-cycle created-by="USER" updated-by="USER" removed-by="USER"/>
         <tip role="FlaskAsTargetDate" type="da.ibacs.MgtFlask" multiplicity="0..1" dependency="DEFINED"/>
         <tip role="TargetDate" type="da.ibacs.MgtMilestone" multiplicity="1" dependency="USED_STRONG" navigable="false"/>
      </element>

      <element type="da.ibacs.MgtFlask_ExternalRef">
         <description lang="fr">Référence à un enregistrement dans la base Stress.</description>
         <type-id name="MgtFlask -- ExternalRef"/>
         <tip role="MgtFlask" type="da.ibacs.MgtFlask" multiplicity="*" dependency="DEFINED"/>
         <tip role="ExternalRef" type="da.ibacs.ExternalRef" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.MgtFlask_MetaEnumValue">
         <type-id name="MgtFlask -- MetaEnumValue (Type)"/>
         <tip role="MgtFlask" type="da.ibacs.MgtFlask" multiplicity="*" dependency="DEFINED"/>
         <tip role="Type" type="da.ibacs.MetaEnumValue" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.MgtFlow" extends="da.ibacs.MgtFlask" discriminator="FLOW">
         <description lang="fr">Permet de décrire une fourniture.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <id type="da.ibacs.business.ids.MgtFlowId" implemented-as="String">
            <description lang="fr">Identification de la fourniture.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">__TODO__ Constructeur NON minimaliste.</description>
            <arg name="Id" optional="true"/>
            <arg name="StartDate" optional="true"/>
            <arg name="TargetDate" optional="true"/>
            <arg name="Deadline" optional="true"/>
         </constructor>
      </element>

      <element type="da.ibacs.MgtMilestone">
         <description lang="fr">Définition d'un Jalon.
Certains Jalons, nommés, sont directement créés par les utilisateurs.
D'autre Jalons sont créés automatiquement et sont directement associés à des Tâches, des Contrats, ...</description>
         <description lang="fr">__TODO :__ Gérer des dates individuellement (comme ici) ou plusieurs dates à la fois ?</description>
         <life-cycle created-by="USER_OR_AUTO" updated-by="USER_OR_AUTO" removed-by="USER_OR_AUTO"/>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.MgtMilestoneId" implemented-as="int">
            <description lang="fr">Identification d'un Jalon. C'est équivalent à un numéro auto.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">__TODO__ Constructeur NON minimaliste.</description>
            <arg name="Id" optional="true"/>
            <arg name="Nature"/>
            <arg name="AnonymousContext" optional="true"/>
            <arg name="Title" optional="true"/>
         </constructor>

         <property name="LifeStatus" type="da.ibacs.business.enums.EntityLifeStatus" implemented-as="String" length="1" read-only="true" definition="SECONDARY" nullable="false">
            <description lang="fr">État de définition du cycle de vie standard d'un Jalon
 - Vivant si la date n'est pas atteinte;
 - Mort si la date est atteinte;
 - Inconnu si aucune date n'est renseignée.</description>
         </property>
         <property name="Scale" type="da.ibacs.business.enums.MgtDelayScale" implemented-as="String" length="1" packed="EXTERNAL_TYPE"/>
         <property name="Anonymous" type="boolean" read-only="true" definition="SECONDARY" getter-prefix="IS"/>
         <property name="AnonymousContext" type="da.rids.RawId" implemented-as="String" length="128" read-only="true"/>
         <property name="Title" type="String" length="255"/>
         <property name="EffectiveDate" type="java.util.Date" date-type="DATE" definition="SECONDARY" read-only="true">
            <description lang="fr">Date associée au Jalon.</description>
         </property>
         <property name="AbsoluteDate" type="java.util.Date" date-type="DATE">
            <description lang="fr">Date absolue associée au Jalon.</description>
         </property>
         <property name="Delay" type="int">
            <description lang="fr">Délais associée à un autre jalon.</description>
         </property>
         <property name="Nature" type="da.ibacs.business.enums.MgtMilestoneNature" implemented-as="String" length="1" packed="EXTERNAL_TYPE">
            <description lang="fr">Nature du Jalon : Début des Travaux, Fin des Travaux, etc.</description>
            <description lang="fr">__TODO :__ enum ou liste customizable ?
Si pas enum, on risque d'avoir du mal à faire des calculs de cohérence. </description>
         </property>
         <method name="isAncestor" type="boolean">
            <arg name="other" type="da.ibacs.business.MgtMilestone"/>
         </method>
      </element>

      <element type="da.ibacs.MgtMilestoneDependency">
         <description lang="fr">Relation permettant de définir un Jalon (Slave) relativement à un autre Jalon (Master).</description>
         <type-id name="MgtMilestone -- MgtMilestone (Dependency: Slave -- Master)"/>
         <life-cycle created-by="USER" updated-by="USER" removed-by="USER"/>
         <tip role="Slave" type="da.ibacs.MgtMilestone" multiplicity="*" dependency="DEFINED"/>
         <tip role="Master" type="da.ibacs.MgtMilestone" multiplicity="0..1" dependency="USED_STRONG" navigable="false"/>
      </element>

      <element type="da.ibacs.MgtPot">
         <description lang="fr">Une cagnotte s'apparente à un compte, avec des sommes disponibles dans une unité donnée.
Une cagnotte est associée à un marché. Un marché peut avoir plusieurs cagnottes.
La réalisation d'une tâche peut utiliser une partie d'une ou plusieurs cagnottes.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.MgtPotId" implemented-as="int">
            <description lang="fr">Identification d'une cagnotte.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">__TODO__ Constructeur NON minimaliste.</description>
            <arg name="Id" optional="true"/>
            <arg name="StartDate" optional="true"/>
            <arg name="EndDate" optional="true"/>
            <arg name="Contract"/>
         </constructor>
         <property name="Title" type="String" length="255">
            <description lang="fr">Titre de la cagnotte.</description>
         </property>
         <property name="PrivateComment" type="String" length="1024">
            <description lang="fr">Commentaire privé.</description>
         </property>
         <property name="PublicComment" type="String" length="1024">
            <description lang="fr">Commentaire public.</description>
         </property>
         <property name="Value" type="int">
            <description lang="fr">Valeur de la cagnotte, exprimée dans son unité de mesure.</description>
         </property>
         <property name="Unit" type="String" length="128">
            <description lang="fr">Unité de mesure de la cagnotte.</description>
         </property>
         <property name="ConsumedValue" type="int" definition="SECONDARY" read-only="true">
            <description lang="fr">Valeur consommée de la cagnotte.</description>
         </property>
         <property name="AvailableValue" type="int" definition="SECONDARY" read-only="true">
            <description lang="fr">Valeur restante dans la cagnotte. Peut-être négative.</description>
         </property>
      </element>

      <element type="da.ibacs.MgtPotEndDate" read-only="true">
         <description lang="fr">Définition de la Date de fin d'une Cagnotte.</description>
         <type-id name="MgtPot -- MgtMilestone (EndDate)"/>
         <life-cycle created-by="AUTO" updated-by="AUTO" removed-by="AUTO"/>
         <tip role="PotAsEndDate" type="da.ibacs.MgtPot" multiplicity="0..1" dependency="DEFINED"/>
         <tip role="EndDate" type="da.ibacs.MgtMilestone" multiplicity="1" dependency="USED_STRONG" navigable="false"/>
      </element>

      <element type="da.ibacs.MgtPotStartDate" read-only="true">
         <description lang="fr">Définition de la Date de début d'une Cagnotte.</description>
         <type-id name="MgtPot -- MgtMilestone (StartDate)"/>
         <life-cycle created-by="AUTO" updated-by="AUTO" removed-by="AUTO"/>
         <tip role="PotAsStartDate" type="da.ibacs.MgtPot" multiplicity="0..1" dependency="DEFINED"/>
         <tip role="StartDate" type="da.ibacs.MgtMilestone" multiplicity="1" dependency="USED_STRONG" navigable="false"/>
      </element>

      <element type="da.ibacs.MgtTask" extends="da.ibacs.MgtFlask" discriminator="TASK">
         <description lang="fr">Description d'une Tâche, d'un travail à réaliser, dans le cadre des activités de pilotage.
Une Tâche peut être décomposée en Sous-Tâches et/ou dépendre d'autres Tâches.
Une tâche a normalement un et un seul responsable (acteur).</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <id type="da.ibacs.business.ids.MgtTaskId" implemented-as="String">
            <description lang="fr">Identification de la Tâche.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">__TODO__ Constructeur NON minimaliste.</description>
            <arg name="Id" optional="true"/>
            <arg name="StartDate" optional="true"/>
            <arg name="TargetDate" optional="true"/>
            <arg name="Deadline" optional="true"/>
         </constructor>
      </element>
   </domain>

   <domain name="Patchs">
      <description lang="fr">Domaine dédié aux patch.</description>
      <depends-on>Commons</depends-on>
      <depends-on>Impacts-Interface</depends-on>
      <depends-on>Business-Refs</depends-on>
      <depends-on>Resources</depends-on>

      <element type="da.ibacs.ProductInstancePatch">
         <description lang="fr">Patch de la relation d'Instance ('Composition') entre Produits IBACS.</description>
         <type-id name="Product -- Product (Patch: Sup -- Inf)"/>
         <implements>da.ibacs.LifeStatusSetter</implements>
         <id type="da.ibacs.business.ids.ProductInstancePatchId" implemented-as="da.ibacs.impl.jpa.ProductInstancePatchKey">
            <field name="Child"/>
            <field name="Parent"/>
            <field name="Type"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">__TODO__ Constructeur NON minimaliste.</description>
            <arg name="Id"/>
            <arg name="PatchKind" optional="true"/>
            <arg name="ReasonType" optional="true"/>
         </constructor>
         <tip role="Parent" type="da.ibacs.Product" multiplicity="*" dependency="USED_STRONG"/>
         <tip role="Child" plural="Children" type="da.ibacs.Product" multiplicity="*" dependency="USED_WEAK"/>
         <property name="Type" type="da.business.InstanceLinkType" implemented-as="String" length="1" read-only="true"/>
         <property name="ProductInstanceSource" type="da.ibacs.business.enums.PropertySource" implemented-as="String" length="1"/>
         <property name="GlobalPatchStatus" type="da.ibacs.business.enums.PatchStatus" implemented-as="String" length="1" packed="EXTERNAL_TYPE" definition="SECONDARY" read-only="true"/>
         <property name="LifeStatus" type="da.ibacs.business.enums.EntityLifeStatus" implemented-as="String" length="1" nullable="false" packed="EXTERNAL_TYPE"/>

         <property name="CreationDate" type="java.util.Date" date-type="DATE"/>
         <property name="Reason" type="String" length="255"/>

         <property name="PatchKind" type="da.ibacs.business.enums.ProductInstancePatchKind" implemented-as="String" length="1" packed="EXTERNAL_TYPE"/>

         <property name="PatchedArgumentsMask" type="int" layer="IMPLEMENTATION"/>

         <property name="PatchQuantity" type="boolean" definition="SECONDARY"/>
         <property name="PatchStatusQuantity" type="da.ibacs.business.enums.PatchStatus" implemented-as="String" length="1" packed="EXTERNAL_TYPE" definition="SECONDARY" read-only="true"/>
         <property name="Quantity" type="da.business.Quantity" implemented-as="String" length="6"/>
         <property name="PatchSpare" type="boolean" definition="SECONDARY"/>
         <property name="PatchStatusSpare" type="da.ibacs.business.enums.PatchStatus" implemented-as="String" length="1" packed="EXTERNAL_TYPE" definition="SECONDARY" read-only="true"/>
         <property name="Spare" type="da.ibacs.business.enums.SpareCode" implemented-as="String" length="1" packed="EXTERNAL_TYPE"/>
         <property name="PatchRankApplicability" type="boolean" definition="SECONDARY"/>
         <property name="PatchStatusRankApplicability" type="da.ibacs.business.enums.PatchStatus" implemented-as="String" length="1" packed="EXTERNAL_TYPE" definition="SECONDARY" read-only="true"/>
         <property name="RankApplicability" type="da.RangeSet" implemented-as="String" length="30"/>
         <property name="PatchLastApplicable" type="boolean" definition="SECONDARY"/>
         <property name="PatchStatusLastApplicable" type="da.ibacs.business.enums.PatchStatus" implemented-as="String" length="1" packed="EXTERNAL_TYPE" definition="SECONDARY" read-only="true"/>
         <property name="LastApplicable" type="da.business.LastApplicable" implemented-as="String" length="1" packed="EXTERNAL_TYPE"/>
         <property name="PatchMultiPositionned" type="boolean" definition="SECONDARY"/>
         <property name="PatchStatusMultiPositionned" type="da.ibacs.business.enums.PatchStatus" implemented-as="String" length="1" packed="EXTERNAL_TYPE" definition="SECONDARY" read-only="true"/>
         <property name="MultiPositionned" type="boolean" getter-prefix="IS"/>
         <property name="PatchMso" type="boolean" definition="SECONDARY"/>
         <property name="PatchStatusMso" type="da.ibacs.business.enums.PatchStatus" implemented-as="String" length="1" packed="EXTERNAL_TYPE" definition="SECONDARY" read-only="true"/>
         <property name="Mso" type="da.ibacs.business.enums.MaintenanceSupportOrganisation" implemented-as="String" length="1"/>
         <property name="PatchReparConsu" type="boolean" definition="SECONDARY"/>
         <property name="PatchStatusReparConsu" type="da.ibacs.business.enums.PatchStatus" implemented-as="String" length="1" packed="EXTERNAL_TYPE" definition="SECONDARY" read-only="true"/>
         <property name="ReparConsu" type="da.ibacs.business.enums.ReparConsuCode" implemented-as="String" length="1"/>
         <property name="PatchCategory" type="boolean" definition="SECONDARY"/>
         <property name="PatchStatusCategory" type="da.ibacs.business.enums.PatchStatus" implemented-as="String" length="1" packed="EXTERNAL_TYPE" definition="SECONDARY" read-only="true"/>
         <property name="Category" type="da.ibacs.business.enums.Category" implemented-as="String" length="1" packed="EXTERNAL_TYPE"/>

         <method name="setPatchKindInternal" type="void">
            <arg name="kind" type="da.ibacs.business.enums.ProductInstancePatchKind"/>
         </method>
      </element>

      <element type="da.ibacs.ProductInstancePatch_MetaEnumValue">
         <type-id name="ProductInstancePatch -- MetaEnumValue (ReasonType)"/>
         <tip role="ProductInstancePatch" type="da.ibacs.ProductInstancePatch" multiplicity="*" dependency="DEFINED"/>
         <tip role="ReasonType" type="da.ibacs.MetaEnumValue" multiplicity="1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.RefProductPatch">
         <description lang="fr">La logique actuelle d'IBACS est de déterminer automatiquement la définition des produits à partir des référentiels sources.
Lorsque les référentiels sont incorrect un patch un être crée pour amender les attributs du produit.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="USER"/>
         <implements>da.ibacs.LifeStatusSetter</implements>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.RefProductPatchId" implemented-as="String" length="43">
            <description lang="fr">Identification d'un produit Patch (idem identifiant produit).</description>
            <field name="Product"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <arg name="Id"/>
            <arg name="ReasonType" optional="true">
               <description lang="fr">__TODO :__ ReasonType ne devrait pas être optionnel,
mais l'import générique ne permet pas encore d'utiliser des relations obligatoires en argument de construction.</description>
            </arg>
         </constructor>
         <tip role="Product" type="da.ibacs.Product" multiplicity="0..1" navigable="false" dependency="USED_WEAK">
            <type-id name="RefProductPatch -- Product"/>
         </tip>
         <static name="META_ENUM_PATCH_REASON_TYPE" type="da.ibacs.business.MetaEnumType.Value" value="MetaEnumType.INSTANCE.createOrFind(&quot;PatchReasonType&quot;)"/>
         <property name="LifeStatus" type="da.ibacs.business.enums.EntityLifeStatus" implemented-as="String" length="1" nullable="false" packed="EXTERNAL_TYPE"/>
         <property name="Designation" type="String" length="255">
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="FullSourceMask" type="da.ibacs.business.enums.RefProductTypeMask" implemented-as="String" length="4" definition="SECONDARY" read-only="true">
            <description lang="fr">Propriété dérivée récupérant le FullSourceMask du Product Ibacs.
__TODO__ A supprimer, utilisé seulement dans l'IHM</description>
         </property>
         <property name="CreationDate" type="java.util.Date" date-type="DATE"/>
         <property name="Reason" type="String" length="255"/>
         <property name="PatchedArgumentsMask" type="int" layer="IMPLEMENTATION"/>
         <property name="PatchSomething" type="boolean" definition="SECONDARY" read-only="true"/>
         <property name="PatchNsn" type="boolean" definition="SECONDARY"/>
         <property name="Nsn" type="String" length="13"/>


         <property name="PatchAtaChapterSet" type="boolean" definition="SECONDARY"/>
         <property name="AtaChapterSet" type="da.ibacs.business.ids.AtaChapterSet" implemented-as="String" length="255" packed="EXTERNAL_TYPE">
            <description lang="fr">Liste des AtaChapter d'un product.</description>
         </property>

         <property name="PatchCategoryMask" type="boolean" definition="SECONDARY"/>
         <property name="CategoryMask" type="da.ibacs.business.enums.CategoryMask" implemented-as="String" length="5"/>
         <property name="CategoryEnabled" type="boolean" definition="SECONDARY">
            <description lang="fr">Accès au masque des catégories via une propriété indexée.</description>
            <index type="da.ibacs.business.enums.Category" name="type" values="A B C D P"/>
         </property>

         <property name="PatchReplaceableUnitCodeMask" type="boolean" definition="SECONDARY"/>
         <property name="ReplaceableUnitCodeMask" type="da.ibacs.business.enums.ReplaceableUnitCodeMask" implemented-as="String" length="6"/>
         <property name="ReplaceableUnitCodeEnabled" type="boolean" definition="SECONDARY">
            <description lang="fr">Accès au masque des url ura via une propriété indexée.</description>
            <index type="da.ibacs.business.enums.ReplaceableUnitCode" name="type" values="URL URA"/>
         </property>

         <property name="PatchTypeNatureMask" type="boolean" definition="SECONDARY"/>
         <property name="TypeNatureMask" type="da.ibacs.business.enums.TypeNatureMask" implemented-as="String" length="15"/>
         <property name="TypeNatureEnabled" type="boolean" definition="SECONDARY">
            <description lang="fr">Accès au masque des Types/Natures via une propriété indexée.</description>
            <index type="da.ibacs.business.enums.TypeNature" name="type" values="AIRCRAFT AIRFRAME EQUIPMENT OPTIONNAL COMPONENT ATE IPD MS HARDWARE_MECA HARDWARE_ELEC RAW_MATERIAL TRAINING PILOT_EQUIPMENT CONTAINER"/>
         </property>

         <property name="PatchUnit" type="boolean" definition="SECONDARY"/>
         <property name="UnitOfIssue" type="da.business.ft.UnitOfIssueFt" implemented-as="String" length="2" packed="EXTERNAL_TYPE"/>
         <property name="QuantityPerUnitOfIssue" type="Integer"/>
         <property name="MeasureUnit" type="da.business.ft.MeasureUnitFt" implemented-as="String" length="2" packed="EXTERNAL_TYPE"/>

         <property name="PatchValidity" type="boolean" definition="SECONDARY"/>
         <property name="Validity" type="da.ibacs.business.enums.ProductValidity" implemented-as="String" length="1" packed="EXTERNAL_TYPE"/>

         <property name="PatchNpa" type="boolean" definition="SECONDARY"/>
         <property name="Npa" type="boolean" getter-prefix="IS"/>
         <property name="PatchMsoMask" type="boolean" definition="SECONDARY"/>
         <property name="MsoMask" type="da.ibacs.business.enums.MaintenanceSupportOrganisationMask" implemented-as="String" length="3" packed="EXTERNAL_TYPE"/>
         <property name="MsoEnabled" type="boolean" definition="SECONDARY">
            <description lang="fr">Accès au masque des nti via une propriété indexée.</description>
            <index type="da.ibacs.business.enums.MaintenanceSupportOrganisation" name="mso" values="NTI1 NTI2 NTI3"/>
         </property>

         <property name="PatchReparConsuMask" type="boolean" definition="SECONDARY"/>
         <property name="ReparConsuMask" type="da.ibacs.business.enums.ReparConsuCodeMask" implemented-as="String" length="2" packed="EXTERNAL_TYPE"/>
         <property name="ReparConsuEnabled" type="boolean" definition="SECONDARY">
            <description lang="fr">Accès au masque des repar conso via une propriété indexée.</description>
            <index type="da.ibacs.business.enums.ReparConsuCode" name="type" values="CONSUMABLE REPARABLE"/>
         </property>

         <property name="PatchLimitLifeInStorage" type="boolean" definition="SECONDARY"/>
         <property name="LimitLifeInStorage" type="int"/>

         <property name="PatchLimitLifeInUtilization" type="boolean" definition="SECONDARY"/>
         <property name="LimitLifeInUtilization" type="String" length="6"/>
      </element>

      <element type="da.ibacs.RefProductPatch_Manufacturer" read-only="true" definition="SECONDARY">
         <description lang="fr">Relation entre un Produit de Référence et un Fabricant.</description>
         <type-id name="RefProductPatch -- Manufacturer"/>
         <tip role="RefProductPatch" type="da.ibacs.RefProductPatch" multiplicity="*" dependency="DEFINED"/>
         <tip role="Manufacturer" type="da.ibacs.Manufacturer" multiplicity="1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.RefProductPatch_MetaEnumValue">
         <type-id name="RefProductPatch -- MetaEnumValue (ReasonType)"/>
         <tip role="RefProductPatch" type="da.ibacs.RefProductPatch" multiplicity="*" dependency="DEFINED"/>
         <tip role="ReasonType" type="da.ibacs.MetaEnumValue" multiplicity="1" dependency="USED_WEAK" navigable="false"/>
      </element>
   </domain>

   <domain name="Progressive-Maintenance-Inspections" prefix="Pmi">
      <description lang="fr">Domaine dédié à l'ordonnancement des visites de maintenances.</description>
      <depends-on>Commons</depends-on>
      <depends-on>Impacts-Interface</depends-on>
      <depends-on>Business-Refs</depends-on>
      <depends-on>Resources</depends-on>
      <depends-on>Lsa-Resources</depends-on>
      <depends-on>Lsa-Operations</depends-on>
      <depends-on>Maintenance-Plans</depends-on>

      <element type="da.ibacs.PmiVisit" purpose="CODE_GENERATION">
         <life-cycle created-by="USER" removed-by="USER" updated-by="USER"/>
         <implements>da.ibacs.LifeStatusSetter</implements>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.PmiVisitId" implemented-as="int">
            <description lang="fr">Identification d'une visite. Il s'agit d'un autonum.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
         </constructor>
         <static name="META_ENUM_PMI_PHASE" type="da.ibacs.business.MetaEnumType.Value" value="MetaEnumType.INSTANCE.createOrFind(&quot;PmiPhase&quot;)"/>
         <property name="LifeStatus" type="da.ibacs.business.enums.EntityLifeStatus" implemented-as="String" length="1" nullable="false"/>
      </element>

      <element type="da.ibacs.PmiVisitHlTaskOccurrence" purpose="CODE_GENERATION">
         <description lang="fr">Occurrence de HlTask (étape) dans une visite.</description>
         <type-id name="PmiVisit -- LsaHlTask"/>
         <id type="da.ibacs.business.ids.PmiVisitHlTaskOccurrenceId" implemented-as="int">
            <description lang="fr">Identification d'une occurrence de HlTask dans une visite. Il s'agit d'un autonum.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
            <arg name="PmiVisit"/>
            <arg name="LsaHlTask"/>
            <arg name="OccurrencePhase"/>
         </constructor>
         <tip role="PmiVisit" type="da.ibacs.PmiVisit" multiplicity="*" collection="LIST" dependency="DEFINED"/>
         <tip role="LsaHlTask" type="da.ibacs.LsaHlTask" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
         <property name="Rank" type="int">
            <description lang="fr">Numéro de l'occurrence dans la phase.</description>
         </property>
         <property name="PhaseId" type="String" length="10" read-only="true" definition="SECONDARY">
            <description lang="fr">Identifiant structuré d'une phase. ex: 03-052400.</description>
         </property>
         <property name="InspectionMode" type="da.ibacs.business.enums.PmiInspectionMode" implemented-as="String" length="1">
            <description lang="fr">Indique si l'inspection est éventuelle ou systématique.</description>
         </property>
         <property name="Rate" type="Float">
            <description lang="fr">Probabilité d'exécution de la HlTask durant la visite. Seulement si le mode d'inspection est éventuel.</description>
         </property>
      </element>

      <element type="da.ibacs.PmiVisitHlTaskOccurrence_Phase" purpose="CODE_GENERATION">
         <description lang="fr">Phase (et sous-phase) de l'occurrence de visite.</description>
         <type-id name="PmiVisitHlTaskOccurrence -- MetaEnumValue(Phase)"/>
         <tip role="PmiVisitHlTaskOccurrence" type="da.ibacs.PmiVisitHlTaskOccurrence" multiplicity="*" dependency="DEFINED"/>
         <tip role="OccurrencePhase" type="da.ibacs.MetaEnumValue" multiplicity="1" dependency="USED_WEAK" navigable="false"/>
      </element>
      <element type="da.ibacs.PmiVisitLogistic" dao-hint="LAZY">
         <description lang="fr">Cette relation permet de définir la logistique d'une Visite.
Cette logistique est calculée à partir de la logistique des Sous-Tâches pointée par les occurrences.</description>
         <type-id name="PmiVisitLogistic"/>
         <life-cycle created-by="AUTO" updated-by="AUTO" removed-by="AUTO"/>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.PmiVisitLogisticId" implemented-as="int">
            <description lang="fr">Identification d'une logistic de visite. Il s'agit d'un autonum.</description>
         </id>
         <functional-id name="FunctionalId" type="da.ibacs.business.ids.PmiVisitLogisticFunctionalId">
            <description lang="fr">La vrai clé d'une logistique est composée de 5 éléments or le Label et l'Unité peuvent être nuls.
               C'est pourquoi un functionalId est introduit.</description>
            <field name="Visit"/>
            <field name="Resource"/>
            <field name="Label"/>
            <field name="VersionSet"/>
            <field name="Unit"/>
         </functional-id>
         <constructor name="CONSTRUCTOR">
            <arg name="Id" optional="true"/>
            <arg name="FunctionalId" optional="true"/>
         </constructor>
         <tip role="Visit" type="da.ibacs.PmiVisit" multiplicity="*" dependency="DEFINED">
            <xml target-export-mode="ATTACHED"/>
         </tip>
         <tip role="Resource" type="da.ibacs.Resource" multiplicity="*" dependency="USED_WEAK" navigable="false" nullable="true"/>
         <tip role="Label" type="da.ibacs.Label" multiplicity="*" dependency="USED_WEAK" navigable="false" nullable="true"/>
         <tip role="VersionSet" type="da.ibacs.VersionSet" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
         <tip role="Unit" type="da.ibacs.Unit" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
         <property name="Quantity" type="float"/>
      </element>

      <element type="da.ibacs.PmiVisit_RmpVisitType" purpose="CODE_GENERATION">
         <description lang="fr">Type de visite.</description>
         <type-id name="PmiVisit -- RmpVisitType"/>
         <tip role="PmiVisit" type="da.ibacs.PmiVisit" multiplicity="*" dependency="DEFINED"/>
         <tip role="RmpVisitType" type="da.ibacs.RmpVisitType" multiplicity="1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.PmiVisit_VersionSet" purpose="CODE_GENERATION">
         <description lang="fr">Versions de la limite.</description>
         <type-id name="PmiVisit -- VersionSet"/>
         <tip role="PmiVisit" type="da.ibacs.PmiVisit" multiplicity="*" dependency="DEFINED"/>
         <tip role="VersionSet" type="da.ibacs.VersionSet" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>
   </domain>

   <domain name="Resources">
      <description lang="fr">Domaine dédié aux ressources.</description>
      <depends-on>Commons</depends-on>
      <depends-on>Impacts-Interface</depends-on>
      <depends-on>Business-Refs</depends-on>
      <depends-on>Doc</depends-on>
      <depends-on>Ipc</depends-on>
      <depends-on>Ftr</depends-on>
      <depends-on>Lsa-Resources-Interface</depends-on>

      <element type="da.ibacs.Nuclass" extends="da.ibacs.Resource" discriminator="NUCL">
         <description lang="fr">Définition d'un Nuclass IBACS.</description>
         <life-cycle created-by="AUTO" updated-by="AUTO" removed-by="AUTO"/>
         <implements>da.ibacs.LsaResource</implements>
         <id type="da.ibacs.business.ids.NuclassId" implemented-as="String">
            <description lang="fr">Identification du nuclass, il s'agit d'un code à 5 caractères "[0-9A-Z]{5}" .</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <property name="Designation" type="String" length="255">
            <description lang="fr">Désignation du Nuclass (En français et en anglais).</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
      </element>

      <element type="da.ibacs.NuclassProduct">
         <description lang="fr">Relation configurée entre une Nuclass et ses produits.</description>
         <type-id name="NuclassProduct"/>
         <implements>da.ibacs.VersionSetSetter</implements>
         <id type="da.ibacs.business.ids.NuclassProductId" implemented-as="da.ibacs.impl.jpa.NuclassProductKey">
            <field name="Nuclass"/>
            <field name="Product"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <tip role="Nuclass" type="da.ibacs.Nuclass" multiplicity="0..1" dependency="USED_STRONG">
            <type-id name="NuclassProduct -- Nuclass"/>
            <xml target-export-mode="ATTACHED"/>
         </tip>
         <tip role="Product" type="da.ibacs.Product" multiplicity="*" dependency="USED_WEAK" navigable="false">
            <type-id name="NuclassProduct -- Product"/>
         </tip>
      </element>

      <element type="da.ibacs.NuclassProduct_VersionSet">
         <description lang="fr">Cette relation permet de configurer l'association d'une Ressource à un Nuclass.</description>
         <type-id name="NuclassProduct -- VersionSet"/>
         <tip role="NuclassProduct" type="da.ibacs.NuclassProduct" multiplicity="*" dependency="DEFINED"/>
         <tip role="VersionSet" type="da.ibacs.VersionSet" multiplicity="1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.PhysicalProductSet" extends="da.ibacs.ProductSet" discriminator="PPHY">
         <description lang="fr">Définition d'une Famille de Produits (Articles).
Une Famille peut être soit directement définie par un ensemble de Produits, soit décomposée en Sous-Familles.
Ce mécanisme de décomposition d'une Famille est récursif. Il est actuellement limité à 2 niveaux pour des raisons métier.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <id type="da.ibacs.business.ids.PhysicalProductSetId" implemented-as="String"/>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
         </constructor>
      </element>

      <element type="da.ibacs.Product" extends="da.ibacs.Resource" discriminator="ITEM">
         <description lang="fr">Définition d'un Produit (Article) IBACS.
Un tel Produit ne peut exister que si un Produit de Référence lui correspond.
Les Produits IBACS sont donc automatiquement créés et la plupart de leurs attributs sont uniquement consultables.
Ce sont les Produits IBACS qui constituent la vraie référence RTA, utilisée partout ailleurs (Indicateurs, ASL, etc.).</description>
         <life-cycle created-by="AUTO" updated-by="USER_OR_AUTO" removed-by="AUTO"/>
         <implements>da.ibacs.VersionSetGetter</implements>
         <implements>da.ibacs.LsaResource</implements>
         <id type="da.ibacs.business.ids.ProductId" implemented-as="String">
            <description lang="fr">Identification d'un produit. Il s'agit de la concaténation de l'identifiant du fabriquant sur 5 caractères (format : [A-Z0-9]{5})
et de la référence du produit (format : [A-Z 0-9():;#._+,/'"=$@&amp;[-]]* maximum 32 caractères). Séparé par un tiret.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">__TODO__ Pourquoi Manufacturer ?</description>
            <arg name="Id"/>
            <arg name="Manufacturer" optional="true"/>
         </constructor>
         <property name="PartNumber" type="String" length="32" read-only="true" nullable="false" definition="SECONDARY">
            <description lang="fr">Accesseur de la Référence du produit (format : [A-Z 0-9():;#._+,/'"=$@&amp;[-]]* maximum 32 caractères)</description>
         </property>
         <property name="ManufacturerCode" type="String" length="5" read-only="true" nullable="false" definition="SECONDARY">
            <description lang="fr">Accesseur du code fabriquant du produit (format : [A-Z0-9]{5})</description>
         </property>
         <!-- Properties primary -->
         <property name="DefaultChangeRate" type="float">
            <description lang="fr">Valeur par défaut du taux de consommation du produit.
Cette valeur est utilisée pour initialiser les taux de consommation au niveau d'une Logistique de Sous-Tâche.
La valeur utilisée par la Logistique peut ensuite être modifiée.
Cet attribut sert au métier ASL.</description>
         </property>

         <property name="Root" type="boolean" getter-prefix="IS">
            <description lang="fr">Permet de définir si le produit de tête doit être utilisé comme en "Root" dans l'arborescence des produits.</description>
         </property>

         <property name="ProductType" type="da.ibacs.business.enums.ProductType" implemented-as="String" length="4" packed="EXTERNAL_TYPE">
            <description lang="fr">Type du produit : Outil (Tool), Ingrédient (Misc) ou Rechange (Part).
Sert au calcul de la synthèse logistique. Selon la nature du Produit, on utilise un algorithme différent (Max ou Somme).
Cet attribut sert au métier ASL.</description>
         </property>
         <property name="PartCategory" type="da.ibacs.business.enums.PartCategoryCode" implemented-as="String" length="1" packed="EXTERNAL_TYPE">
            <description lang="fr">Si le produit est de type Part, indique s'il s'agit d'une pièce de structure, d'un équipement...
Sinon la propriété est nulle.</description>
         </property>
         <property name="ToolCategory" type="da.ibacs.business.enums.ToolCategoryCode" implemented-as="String" length="1" packed="EXTERNAL_TYPE">
            <description lang="fr">Si le produit est de type Tool, indique s'il s'agit d'un outillage spécifique, standard...
Sinon la propriété est nulle.</description>
         </property>

         <property name="SourceMask" type="da.ibacs.business.enums.RefProductTypeMask" implemented-as="String" length="4" read-only="true">
            <description lang="fr">Masque indiquant si le produit existe dans les différentes sources (IPC/FT/DOC/PATCH).</description>
         </property>
         <property name="SourceEnabled" type="boolean" definition="SECONDARY">
            <description lang="fr">Accès au masque des sources via une propriété indexée.</description>
            <index type="da.ibacs.business.enums.RefProductType" name="type" values="FT IPC PATCH DOC"/>
         </property>

         <property name="FullSourceMask" type="da.ibacs.business.enums.RefProductTypeMask" implemented-as="String" length="4" definition="SECONDARY" read-only="true">
            <description lang="fr">Masque indiquant si le produit existe dans les différentes sources (IPC/FT/DOC/PATCH).
Ou pour le Patch, si une relation de Patch existe.</description>
         </property>

         <property name="FullSourceEnabled" type="boolean" definition="SECONDARY" read-only="true">
            <description lang="fr">Accès au masque des sources (Full) via une propriété indexée.</description>
            <index type="da.ibacs.business.enums.RefProductType" name="type" values="FT IPC PATCH DOC"/>
         </property>

         <property name="TreeNodePosition" type="da.algos.TreeNodePosition" length="1" implemented-as="String" read-only="true" nullable="false">
            <description lang="fr">Indique la position du product dans les relations "ProductProductInstance".
 - Root : Le produit n'a que des enfants.
 - Leaf : Le produit n'a que des parents.
 - Branch : Le produit a des parents et des enfants.
 - Root and Leaf : Le produit n'a ni parent ni enfant.</description>
         </property>

         <property name="Designation" type="String" length="255" read-only="true">
            <description lang="fr">Désignation du produit (En français et en anglais) déduite des différentes sources avec les priorités suivantes :
{Patch; Ipc (Seulement disponible en français); Ft; Doc}</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>

         <property name="Validity" type="da.ibacs.business.enums.ProductValidity" implemented-as="String" length="1" read-only="true" packed="EXTERNAL_TYPE">
            <description lang="fr">Indique si le produit est fictif, illustratif ou valide pour l'approvisionnement.
L'information est déduite des différentes sources avec les priorités suivantes :
{Patch; Ipc}</description>
         </property>
         <property name="ValiditySource" type="da.ibacs.business.enums.PropertySource" implemented-as="String" length="1" read-only="true" nullable="false">
            <description lang="fr">Source de la validité du produit.
{Patch; Ipc; Undefined (si nul)}.</description>
         </property>

         <property name="PatchType" type="da.ibacs.business.enums.PatchType" implemented-as="String" length="1" read-only="true" packed="EXTERNAL_TYPE">
            <description lang="fr">Indique si le produit existe comme patch, ou a des patch de relation ou les deux.</description>
         </property>

         <property name="LocallyManufactured" type="da.ibacs.business.enums.LocallyManufactured" implemented-as="String" length="1" read-only="true">
            <description lang="fr">Indique si le produit est fabriqué à partir d'un autre (Confection Local).
L'information est déduite des différentes sources avec les priorités suivantes :
{Patch; Ipc}</description>
         </property>
         <property name="LocallyManufacturedSource" type="da.ibacs.business.enums.PropertySource" implemented-as="String" length="1" read-only="true" nullable="false">
            <description lang="fr">Source du statut confection local du produit.
{Patch; Ipc; Undefined (si nul)}.</description>
         </property>

         <!-- Properties secondary -->
         <property name="VersionSynthesis" type="da.ibacs.business.VersionSynthesis" to-external="da.ibacs.business.VersionSynthesisUtil.toExternal" to-internal="da.ibacs.business.VersionSynthesisUtil.toInternal" implemented-as="String" length="100" read-only="true" definition="SECONDARY">
            <description lang="fr">Cet element permet de définir une synthèse de plusieurs VersionSet.
Par exemple les versions applicables à une ancienne configuration, et les versions rechanges sur la dernière configuration.
L'information est déduite des différentes sources avec les priorités suivantes :
{Ibacs : Relations ProductProductRoot; Ft}</description>
         </property>
         <property name="VersionSynthesisSource" type="da.ibacs.business.enums.PropertySource" implemented-as="String" length="1" read-only="true" nullable="false">
            <description lang="fr">Source du VersionSynthesis {Ibacs; Ft; Undefined (si nul)}.</description>
         </property>

         <property name="DesignationSource" type="da.ibacs.business.enums.PropertySource" implemented-as="String" length="1" read-only="true" nullable="false">
            <description lang="fr">Source des désignations française et anglaise {Patch; Ipc; Ft; Doc; Undefined (si nul)}.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>

         <property name="TypeNatureSynthesisMask" type="da.ibacs.business.enums.TypeNatureSynthesisMask" implemented-as="String" length="50">
            <description lang="fr">Masque des types du produit (avion, équipement, ingrédient, quincaillerie élec...)
Valeur du patch s'il y en a une, AIRCRAFT si le produit est une version ou bien synthèse des masques de type nature des produits FT et IPC</description>
         </property>
         <property name="TypeNatureSynthesisEnabled" type="da.enums.SynthesisStatus" implemented-as="String" length="1" read-only="true" definition="SECONDARY">
            <description lang="fr">Accès au masque de synthèse des Types/Natures via une propriété indexée.</description>
            <index type="da.ibacs.business.enums.TypeNature" name="type" values="AIRCRAFT AIRFRAME EQUIPMENT OPTIONNAL COMPONENT ATE IPD MS HARDWARE_MECA HARDWARE_ELEC RAW_MATERIAL TRAINING PILOT_EQUIPMENT CONTAINER"/>
         </property>
         <property name="TypeNatureSynthesisMaskSource" type="da.ibacs.business.enums.PropertySource" implemented-as="String" length="1" read-only="true" nullable="false">
            <description lang="fr">Source de la synthèse des Types/Natures
{Patch; Ibacs (si le produit est une version); REFS si FT et Ipc non nul, sinon FT ou Ipc; Undefined (si nul)}.</description>
         </property>

         <property name="RootTypeNatureSynthesisMask" type="da.ibacs.business.enums.TypeNatureSynthesisMask" implemented-as="String" length="50">
            <description lang="fr">Synthèse des masques Type/Nature des produits roots (ProductProductOccurrence).</description>
         </property>
         <property name="RootTypeNatureSynthesisEnabled" type="da.enums.SynthesisStatus" implemented-as="String" length="1" read-only="true" definition="SECONDARY">
            <description lang="fr">Accès au masque de synthèse des Types/Natures des Roots via une propriété indexée.</description>
            <index type="da.ibacs.business.enums.TypeNature" name="type" values="AIRCRAFT AIRFRAME EQUIPMENT OPTIONNAL COMPONENT ATE IPD MS HARDWARE_MECA HARDWARE_ELEC RAW_MATERIAL TRAINING PILOT_EQUIPMENT CONTAINER"/>
         </property>

         <property name="AtaChapterSet" type="da.ibacs.business.ids.AtaChapterSet" implemented-as="String" length="255" packed="EXTERNAL_TYPE">
            <description lang="fr">Liste des chapitres Ata d'un product des différentes sources avec les priorités suivantes :
{Patch; Ipc}</description>
         </property>
         <property name="AtaChapterSetSource" type="da.ibacs.business.enums.PropertySource" implemented-as="String" length="1" read-only="true" nullable="false">
            <description lang="fr">Source des AtaChapterSet 
{Patch; Ipc; Undefined (si nul)}.</description>
         </property>

         <property name="CategorySynthesisMask" type="da.ibacs.business.enums.CategorySynthesisMask" implemented-as="String" length="20" read-only="true">
            <description lang="fr">Synthèse des masques de catégories des différentes sources avec les priorités suivantes :
{Patch; Ibacs (issu des produits roots (ProductProductOccurrence)); Synthèse FT et Ipc}.</description>
         </property>
         <property name="CategorySynthesisEnabled" type="da.enums.SynthesisStatus" implemented-as="String" length="1" read-only="true" definition="SECONDARY">
            <description lang="fr">Accès au masque des Catégories via une propriété indexée.</description>
            <index type="da.ibacs.business.enums.Category" name="category" values="A B C D P"/>
         </property>
         <property name="CategorySynthesisMaskSource" type="da.ibacs.business.enums.PropertySource" implemented-as="String" length="1" read-only="true" nullable="false">
            <description lang="fr">Source de la synthèse des masques de catégories
{Patch; Ibacs; REFS si FT et Ipc non nul, sinon FT ou Ipc; Undefined (si nul)}.</description>
         </property>

         <property name="ReplaceableUnitSynthesisMask" type="da.ibacs.business.enums.ReplaceableUnitCodeSynthesisMask" implemented-as="String" read-only="true" length="6">
            <description lang="fr">Synthèse des masques des unités remplaçables des différentes sources avec les priorités suivantes :
{Patch; Synthèse FT et Ipc}.</description>
         </property>
         <property name="ReplaceableUnitSynthesisEnabled" type="da.enums.SynthesisStatus" implemented-as="String" length="1" read-only="true" definition="SECONDARY">
            <description lang="fr">Accès au masque de synthèse d'Unité remplaçable via une propriété indexée.</description>
            <index type="da.ibacs.business.enums.ReplaceableUnitCode" name="urlUra" values="URL URA"/>
         </property>
         <property name="ReplaceableUnitSynthesisMaskSource" type="da.ibacs.business.enums.PropertySource" implemented-as="String" length="1" read-only="true" nullable="false">
            <description lang="fr">Source de la synthèse des masques des Unités remplaçables.
{Patch; Ibacs; REFS si FT et Ipc non nul, sinon FT ou Ipc; Undefined (si nul)}.</description>
         </property>

         <property name="Nsn" type="String" length="13" read-only="true">
            <description lang="fr">NSN issu des différentes sources avec les priorités suivantes :
{Patch; Ipc; FT}.</description>
         </property>
         <property name="NsnSource" type="da.ibacs.business.enums.PropertySource" implemented-as="String" length="1" read-only="true" nullable="false">
            <description lang="fr">Source du NSN.
{Patch; Ipc; FT; Undefined (si nul)}.</description>
         </property>
         <property name="UnitOfIssue" type="String" length="2" read-only="true">
            <description lang="fr">Unité de fourniture issu des différentes sources avec les priorités suivantes :
{Patch; FT; Ipc}.</description>
         </property>
         <property name="QuantityPerUnitOfIssue" type="Integer" read-only="true">
            <description lang="fr">Quantité par unité de fourniture issu des différentes sources avec les priorités suivantes :
{Patch; FT; Ipc}.</description>
         </property>
         <property name="MeasureUnit" type="String" length="2" read-only="true">
            <description lang="fr">Unité de mesure issu des différentes sources avec les priorités suivantes :
{Patch; FT; Ipc}.</description>
         </property>
         <property name="UnitSource" type="da.ibacs.business.enums.PropertySource" implemented-as="String" length="1" read-only="true" nullable="false">
            <description lang="fr">Source des unités. Les unités de fournitures (+ quantité) et unité de mesure sont liés (ils proviennent de la même source)
{Patch; FT; Ipc; Undefined (si nul)}.</description>
         </property>

         <property name="Npa" type="boolean" read-only="true" getter-prefix="IS">
            <description lang="fr">Est égale à vrai si le produit n'est plus approvisionnable, faux sinon. Issu des différentes sources avec les priorités suivantes :
{Patch; FT}</description>
         </property>
         <property name="NpaSource" type="da.ibacs.business.enums.PropertySource" implemented-as="String" length="1" read-only="true" nullable="false">
            <description lang="fr">Source du NPA
{Patch; FT; Undefined (si nul)}.</description>
         </property>

         <property name="MsoSynthesisMask" type="da.ibacs.business.enums.MaintenanceSupportOrganisationSynthesisMask" implemented-as="String" length="10" read-only="true">
            <description lang="fr">Synthèse des masques des NTI des différentes sources avec les priorités suivantes :
{Patch; Ibacs (issu des produits roots (ProductProductOccurrence)); Synthèse FT et Ipc}.</description>
         </property>
         <property name="MsoSynthesisEnabled" type="da.enums.SynthesisStatus" implemented-as="String" length="1" read-only="true" definition="SECONDARY">
            <description lang="fr">Accès au masque de synthèse des NTI via une propriété indexée.</description>
            <index type="da.ibacs.business.enums.MaintenanceSupportOrganisation" name="mso" values="NTI1 NTI2 NTI3"/>
         </property>
         <property name="MsoSynthesisMaskSource" type="da.ibacs.business.enums.PropertySource" implemented-as="String" length="1" read-only="true" nullable="false">
            <description lang="fr">Source de la synthèse des masques des NTI
{Patch; Ibacs; REFS si FT et Ipc non nul, sinon FT ou Ipc; Undefined (si nul)}.</description>
         </property>

         <property name="ReparConsuSynthesisMask" type="da.ibacs.business.enums.ReparConsuCodeSynthesisMask" implemented-as="String" read-only="true" length="6">
            <description lang="fr">Synthèse des masques des Reparable/Consommable des différentes sources avec les priorités suivantes :
{Patch; Ibacs (issu des produits roots (ProductProductOccurrence)); Synthèse FT et Ipc}.</description>
         </property>
         <property name="ReparConsuSynthesisEnabled" type="da.enums.SynthesisStatus" implemented-as="String" length="1" read-only="true" definition="SECONDARY">
            <description lang="fr">Accès au masque de synthèse des Reparable/Consommable via une propriété indexée.</description>
            <index type="da.ibacs.business.enums.ReparConsuCode" name="reparConsu" values="CONSUMABLE REPARABLE"/>
         </property>
         <property name="ReparConsuSynthesisMaskSource" type="da.ibacs.business.enums.PropertySource" implemented-as="String" length="1" read-only="true" nullable="false">
            <description lang="fr">Source de la synthèse des masques des Reparable/Consommable
{Patch; Ibacs; REFS si FT et Ipc non nul, sinon FT ou Ipc; Undefined (si nul)}.</description>
         </property>

         <property name="LimitLifeInStorage" type="int" read-only="true">
            <description lang="fr">Limite de vie en stockage, issu des différentes sources avec les priorités suivantes :
{Patch; FT (Climat tempéré)}.</description>
         </property>
         <property name="LimitLifeInStorageSource" type="da.ibacs.business.enums.PropertySource" implemented-as="String" length="1" read-only="true" nullable="false">
            <description lang="fr">Source de la limite de vie en stockage.
{Patch; FT; Undefined (si nul)}.</description>
         </property>
         <property name="LimitLifeInUtilization" type="String" length="8" read-only="true">
            <description lang="fr">Limite de vie en utilisation, issu des différentes sources avec les priorités suivantes :
{Patch; FT (Type 1); Ipc (ALI)}.</description>
         </property>
         <property name="LimitLifeInUtilizationSource" type="da.ibacs.business.enums.PropertySource" implemented-as="String" length="1" read-only="true" nullable="false">
            <description lang="fr">Source de la limite de vie en utilisation.
{Patch; FT; Ipc; Undefined (si nul)}.</description>
         </property>
      </element>

      <element type="da.ibacs.ProductInstance">
         <description lang="fr">Cette relation supporte la relation de composition entre Produits ainsi que d'autres relations 'directes'.
Elle sert par exemple à définir les MS associés à un Produit, ses ingrédients, rivets, matériaux ou containers.</description>
         <type-id name="Product -- Product (Instance: Sup -- Inf)"/>
         <id type="da.ibacs.business.ids.ProductInstanceId" implemented-as="da.ibacs.impl.jpa.ProductInstanceKey">
            <field name="Child"/>
            <field name="Parent"/>
            <field name="Type"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <tip role="Parent" type="da.ibacs.Product" multiplicity="*" dependency="DEFINED">
            <xml target-export-mode="ATTACHED"/>
         </tip>
         <tip role="Child" plural="Children" type="da.ibacs.Product" multiplicity="*" dependency="USED_WEAK"/>
         <property name="Type" type="da.business.InstanceLinkType" implemented-as="String" length="1" read-only="true"/>
         <property name="SourceMask" type="da.ibacs.business.enums.RefProductTypeMask" implemented-as="String" length="4"/>
         <property name="Quantity" type="da.business.Quantity" implemented-as="String" length="30"/>
         <property name="RankApplicability" type="da.RangeSet" implemented-as="String" length="30"/>
         <property name="Spare" type="da.ibacs.business.enums.SpareCode" implemented-as="String" length="1" packed="EXTERNAL_TYPE"/>
         <property name="LastApplicable" type="da.business.LastApplicable" implemented-as="String" length="1"/>
         <property name="MultiPositionned" type="boolean" getter-prefix="IS"/>
         <property name="Category" type="da.ibacs.business.enums.Category" implemented-as="String" length="1" packed="EXTERNAL_TYPE">
            <description lang="fr">Indique si le produit (Child) est fourni et/ou monté par le client ou l’avionneur pour un parent donné.</description>
         </property>
         <property name="MultiEvol" type="boolean" getter-prefix="IS"/>
         <property name="Mso" type="da.ibacs.business.enums.MaintenanceSupportOrganisation" implemented-as="String" length="1"/>
         <property name="ReparConsu" type="da.ibacs.business.enums.ReparConsuCode" implemented-as="String" length="1"/>
         <property name="DefAppro" type="da.ibacs.business.enums.DefAppro" implemented-as="String" length="2" definition="SECONDARY" read-only="true"/>

         <property name="VersionSetIdSup" type="da.ibacs.business.ids.VersionSetId" implemented-as="String" length="100" definition="SECONDARY" read-only="true"/>

         <property name="VersionSynthesisSup" type="da.ibacs.business.VersionSynthesis" implemented-as="String" to-external="da.ibacs.business.VersionSynthesisUtil.toExternal" to-internal="da.ibacs.business.VersionSynthesisUtil.toInternal" length="100" definition="SECONDARY" read-only="true"/>

         <property name="LinkedWithVersion" type="boolean" definition="SECONDARY" read-only="true" getter-prefix="IS"/>

         <property name="EffectiveQuantity" type="da.business.Quantity" implemented-as="String" length="30" definition="SECONDARY" read-only="true">
            <description lang="en">Property Quantity of ProductInstancePatch if an active patch exist,
else Property Quantity of ProductInstance</description>
         </property>
         <property name="EffectiveRankApplicability" type="da.RangeSet" implemented-as="String" length="30" definition="SECONDARY" read-only="true">
            <description lang="en">Property RankApplicability of ProductInstancePatch if an active patch exist,
else Property RankApplicability of ProductInstance</description>
         </property>
         <property name="EffectiveSpare" type="da.ibacs.business.enums.SpareCode" implemented-as="String" length="1" definition="SECONDARY" read-only="true">
            <description lang="en">Property Spare of ProductInstancePatch if an active patch exist,
else Property Spare of ProductInstance</description>
         </property>
         <property name="EffectiveLastApplicable" type="da.business.LastApplicable" implemented-as="String" length="1" definition="SECONDARY" read-only="true">
            <description lang="en">Property LastApplicable of ProductInstancePatch if an active patch exist,
else Property LastApplicable of ProductInstance</description>
         </property>
         <property name="EffectiveMultiPositionned" type="boolean" definition="SECONDARY" getter-prefix="IS" read-only="true">
            <description lang="en">Property MultiPositionned of ProductInstancePatch if an active patch exist,
else Property MultiPositionned of ProductInstance</description>
         </property>
         <property name="EffectiveCategory" type="da.ibacs.business.enums.Category" implemented-as="String" length="1" definition="SECONDARY" read-only="true">
            <description lang="en">Property Category of ProductInstancePatch if an active patch exist,
else Property Category of ProductInstance</description>
         </property>
         <property name="EffectiveMso" type="da.ibacs.business.enums.MaintenanceSupportOrganisation" implemented-as="String" length="1" definition="SECONDARY" read-only="true">
            <description lang="en">Property Mso of ProductInstancePatch if an active patch exist,
else Property Mso of ProductInstance</description>
         </property>
         <property name="EffectiveReparConsu" type="da.ibacs.business.enums.ReparConsuCode" implemented-as="String" length="1" definition="SECONDARY" read-only="true">
            <description lang="en">Property ReparConsu of ProductInstancePatch if an active patch exist,
else Property ReparConsu of ProductInstance</description>
         </property>

         <property name="QuantitySource" type="da.ibacs.business.enums.PropertySource" implemented-as="String" length="1" definition="SECONDARY" read-only="true"/>
         <property name="RankApplicabilitySource" type="da.ibacs.business.enums.PropertySource" implemented-as="String" length="1" definition="SECONDARY" read-only="true"/>
         <property name="SpareSource" type="da.ibacs.business.enums.PropertySource" implemented-as="String" length="1" definition="SECONDARY" read-only="true"/>
         <property name="LastApplicableSource" type="da.ibacs.business.enums.PropertySource" implemented-as="String" length="1" definition="SECONDARY" read-only="true"/>
         <property name="MultiPositionnedSource" type="da.ibacs.business.enums.PropertySource" implemented-as="String" length="1" definition="SECONDARY" read-only="true"/>
         <property name="CategorySource" type="da.ibacs.business.enums.PropertySource" implemented-as="String" length="1" definition="SECONDARY" read-only="true"/>

         <method name="addQuantityForRange" type="void">
            <arg name="spare" type="da.ibacs.business.enums.SpareCode"/>
            <arg name="rangeSet" type="da.RangeSet"/>
            <arg name="quantity" type="da.business.Quantity"/>
            <arg name="lastApplicable" type="da.business.LastApplicable"/>
         </method>
      </element>

      <element type="da.ibacs.ProductOccurrence">
         <description lang="fr">Cette relation sert à caractériser un produit relativement à un ensemble de tête qui peut être une version.
Elle permet par exemple de quantifier un Produit pour une Version donnée.</description>
         <type-id name="Product -- Product (Occurrence: Product -- Head)"/>
         <id type="da.ibacs.business.ids.ProductOccurrenceId" implemented-as="da.ibacs.impl.jpa.ProductOccurrenceKey">
            <field name="Child"/>
            <field name="Parent"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <tip role="Child" plural="Children" type="da.ibacs.Product" multiplicity="*" dependency="DEFINED">
            <xml target-export-mode="ATTACHED"/>
         </tip>
         <tip role="Parent" type="da.ibacs.Product" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
         <property name="ProductOccurrenceSource" type="da.ibacs.business.enums.PropertySource" implemented-as="String" length="1"/>
         <property name="TypeMask" type="da.business.InstanceLinkTypeMask" implemented-as="String" length="10"/>
         <property name="SpareStatus" type="da.ibacs.business.enums.SpareStatus" implemented-as="String" length="1" packed="EXTERNAL_TYPE"/>
         <property name="Depth" type="int"/>
         <property name="RestrictedRank" type="boolean" definition="SECONDARY" read-only="true" getter-prefix="IS"/>
         <property name="SpareRankApplicability" type="da.RangeSet" implemented-as="String" length="30"/>
         <property name="SpareQuantity" type="da.business.Quantity" implemented-as="String" length="30"/>
         <!-- <property name="RankApplicability" type="da.RangeSet" implemented-as="String" length="30"/> <property name="Quantity" type="da.business.Quantity" implemented-as="String" length="30"/> -->
         <property name="Category" type="da.ibacs.business.enums.Category" implemented-as="String" length="1" packed="EXTERNAL_TYPE"/>
         <property name="MsoMask" type="da.ibacs.business.enums.MaintenanceSupportOrganisationMask" implemented-as="String" length="6"/>
         <property name="ReparConsuMask" type="da.ibacs.business.enums.ReparConsuCodeMask" implemented-as="String" length="6"/>
         <property name="LastApplicable" type="da.business.LastApplicable" implemented-as="String" length="1" packed="EXTERNAL_TYPE"/>
         <property name="MultiPositionned" type="boolean" getter-prefix="IS"/>
         <property name="MultiEvol" type="boolean" getter-prefix="IS"/>
         <property name="LocallyManufactured" type="boolean" getter-prefix="IS"/>
         <property name="ReplaceableUnitCodeMask" type="da.ibacs.business.enums.ReplaceableUnitCodeMask" implemented-as="String" length="6"/>
         <property name="DefAppro" type="da.ibacs.business.enums.DefAppro" implemented-as="String" length="2" packed="EXTERNAL_TYPE"/>
         <property name="PrefForRoot" type="da.enums.SynthesisStatus" implemented-as="String" length="1" definition="SECONDARY" read-only="true"/>
      </element>

      <element type="da.ibacs.ProductSet" abstract="true" extends="da.ibacs.Resource" inheritance-strategy="SINGLE_TABLE" discriminator-length="4">
         <description lang="fr">Définition d'une Famille de Produits (Articles).
Une Famille peut être soit directement définie par un ensemble de Produits, soit décomposée en Sous-Familles.
Ce mécanisme de décomposition d'une Famille est récursif. Il est actuellement limité à 2 niveaux pour des raisons métier.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.LsaResource</implements>
         <id type="da.ibacs.business.ids.ProductSetId" implemented-as="String"/>
         <property name="Designation" type="String" length="255">
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="SharedDesignation" type="String" length="255">
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="SharedDesignationComment" type="String" length="100">
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>

         <property name="TreeNodePosition" type="da.algos.TreeNodePosition" implemented-as="String" length="1" read-only="true"/>

         <property name="ProductSetType" type="da.ibacs.business.enums.ProductSetType" implemented-as="String" length="2" read-only="true" definition="SECONDARY"/>
         <property name="AtaChapterSet" type="da.ibacs.business.ids.AtaChapterSet" implemented-as="String" length="255" packed="EXTERNAL_TYPE" read-only="true" definition="SECONDARY">
            <description lang="fr">Synthèse des AtaChapters des products.</description>
         </property>

         <property name="TypeNatureSynthesisMask" type="da.ibacs.business.enums.TypeNatureSynthesisMask" implemented-as="String" read-only="true" definition="SECONDARY" length="50"/>
         <property name="TypeNatureSynthesisEnabled" type="da.enums.SynthesisStatus" implemented-as="String" length="1" read-only="true" definition="SECONDARY">
            <description lang="fr">Accès au masque de synthèse des Types/Natures via une propriété indexée.</description>
            <index type="da.ibacs.business.enums.TypeNature" name="type" values="AIRCRAFT AIRFRAME EQUIPMENT OPTIONNAL COMPONENT ATE IPD MS HARDWARE_MECA HARDWARE_ELEC RAW_MATERIAL TRAINING PILOT_EQUIPMENT CONTAINER"/>
         </property>
         <property name="ParentTypeNatureSynthesisMask" type="da.ibacs.business.enums.TypeNatureSynthesisMask" implemented-as="String" read-only="true" definition="SECONDARY" length="50"/>
         <property name="ParentTypeNatureSynthesisEnabled" type="da.enums.SynthesisStatus" implemented-as="String" length="1" read-only="true" definition="SECONDARY">
            <description lang="fr">Accès au masque de synthèse des Types/Natures du Parent via une propriété indexée.</description>
            <index type="da.ibacs.business.enums.TypeNature" name="type" values="AIRCRAFT AIRFRAME EQUIPMENT OPTIONNAL COMPONENT ATE IPD MS HARDWARE_MECA HARDWARE_ELEC RAW_MATERIAL TRAINING PILOT_EQUIPMENT CONTAINER"/>
         </property>
         <property name="CategorySynthesisMask" type="da.ibacs.business.enums.CategorySynthesisMask" implemented-as="String" read-only="true" definition="SECONDARY" length="30"/>
         <property name="CategorySynthesisEnabled" type="da.enums.SynthesisStatus" implemented-as="String" length="1" read-only="true" definition="SECONDARY">
            <description lang="fr">Accès au masque des Categories via une propriété indexée.</description>
            <index type="da.ibacs.business.enums.Category" name="category" values="A B C D P"/>
         </property>
         <property name="ReparConsuSynthesisMask" type="da.ibacs.business.enums.ReparConsuCodeSynthesisMask" implemented-as="String" definition="SECONDARY" read-only="true" length="20"/>
         <property name="ReparConsuSynthesisEnabled" type="da.enums.SynthesisStatus" implemented-as="String" length="1" read-only="true" definition="SECONDARY">
            <description lang="fr">Accès au masque de synthèse des Reparable/Consommable via une propriété indexée.</description>
            <index type="da.ibacs.business.enums.ReparConsuCode" name="reparConsu" values="CONSUMABLE REPARABLE"/>
         </property>

         <property name="ReparConsuCode" type="da.ibacs.business.enums.ReparConsuCode" implemented-as="String" length="1" definition="SECONDARY" read-only="true"/>
         <property name="ReplaceableUnitSynthesisMask" type="da.ibacs.business.enums.ReplaceableUnitCodeSynthesisMask" implemented-as="String" definition="SECONDARY" read-only="true" length="20"/>
         <property name="ReplaceableUnitSynthesisEnabled" type="da.enums.SynthesisStatus" implemented-as="String" length="1" read-only="true" definition="SECONDARY">
            <description lang="fr">Accès au masque de synthèse d'Unité remplaçable via une propriété indexée.</description>
            <index type="da.ibacs.business.enums.ReplaceableUnitCode" name="urlUra" values="URL URA"/>
         </property>

         <!-- <property name="RootProductSet" type="da.ibacs.business.ProductSet" definition="SECONDARY" read-only="true"/> -->

         <property name="MsoSynthesisMask" type="da.ibacs.business.enums.MaintenanceSupportOrganisationSynthesisMask" implemented-as="String" read-only="true" definition="SECONDARY" length="10"/>
         <property name="MsoSynthesisEnabled" type="da.enums.SynthesisStatus" implemented-as="String" length="1" read-only="true" definition="SECONDARY">
            <description lang="fr">Accès au masque de synthèse des Nti via une propriété indexée.</description>
            <index type="da.ibacs.business.enums.MaintenanceSupportOrganisation" name="mso" values="NTI1 NTI2 NTI3"/>
         </property>

         <property name="UnitOfIssue" type="String" length="15" read-only="true" definition="SECONDARY"/>
         <property name="QuantityPerUnitOfIssue" type="String" length="18" read-only="true" definition="SECONDARY"/>
         <property name="MeasureUnit" type="String" length="15" read-only="true" definition="SECONDARY"/>

         <property name="LimitLifeInStorage" type="String" length="25" read-only="true" definition="SECONDARY"/>
         <property name="LimitLifeInUtilization" type="String" length="25" read-only="true" definition="SECONDARY"/>
      </element>

      <element type="da.ibacs.ProductSetInstance">
         <description lang="fr">Cette relation reflète au niveau des Familles la relation dite de composition des Produits constitutifs des Familles.</description>
         <type-id name="ProductSet -- ProductSet (Instance: Sup -- Inf)"/>
         <id type="da.ibacs.business.ids.ProductSetInstanceId" implemented-as="da.ibacs.impl.jpa.ProductSetInstanceKey">
            <field name="Child"/>
            <field name="Parent"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <tip role="Parent" type="da.ibacs.ProductSet" multiplicity="*" dependency="DEFINED">
            <xml target-export-mode="ATTACHED"/>
         </tip>
         <tip role="Child" plural="Children" type="da.ibacs.ProductSet" multiplicity="*" dependency="USED_WEAK"/>
         <!-- VersionSet au lieu de version ?! <tip role="Version" navigable="false"> <type-id name=" type="da.ibacs.Version" multiplicity="1" ProductSetInstance - - Version"/> </tip> -->
         <property name="Quantity" type="int"/>
      </element>

      <element type="da.ibacs.ProductSetOccurrence">
         <description lang="fr">Cette relation sert à synthétiser au niveau des Familles la relation d'occurrence des Produits constitutifs des Familles.</description>
         <type-id name="ProductSet -- ProductSet (Occurrence: ProductSet -- Head)"/>
         <id type="da.ibacs.business.ids.ProductSetOccurrenceId" implemented-as="da.ibacs.impl.jpa.ProductSetOccurrenceKey">
            <field name="Child"/>
            <field name="Parent"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <tip role="Child" plural="Children" type="da.ibacs.ProductSet" multiplicity="*" dependency="DEFINED">
            <xml target-export-mode="ATTACHED"/>
         </tip>
         <tip role="Parent" type="da.ibacs.ProductSet" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
         <property name="Comment" type="String" length="255"/>
         <property name="Quantity" type="da.business.Quantity" implemented-as="String" length="30"/>
         <property name="RankApplicability" type="da.RangeSet" implemented-as="String" length="30"/>
         <property name="Category" type="da.ibacs.business.enums.Category" implemented-as="String" length="1" packed="EXTERNAL_TYPE"/>
         <property name="LastApplicable" type="da.business.LastApplicable" implemented-as="String" length="1"/>
         <property name="MultiPositionned" type="boolean" getter-prefix="IS"/>
         <property name="ReplaceableUnitCodeMask" type="da.ibacs.business.enums.ReplaceableUnitCodeMask" implemented-as="String" length="6"/>
      </element>

      <element type="da.ibacs.ProductSetSplit">
         <description lang="fr">Cette relation sert à décomposer une Famille en Sous-Familles.</description>
         <type-id name="ProductSet -- ProductSet (Split: Parent -- Child)"/>
         <tip role="SplitParent" type="da.ibacs.PhysicalProductSet" multiplicity="0..1" dependency="DEFINED"/>
         <tip role="SplitChild" plural="SplitChildren" type="da.ibacs.TechnicalProductSet" multiplicity="*" dependency="USED_WEAK"/>
      </element>

      <element type="da.ibacs.ProductSet_Product" definition="SECONDARY" read-only="true">
         <description lang="fr">Cette relation sert à définir les Produits à d'une Famille terminale (feuille).</description>
         <type-id name="ProductSet -- Product"/>
         <tip role="AllProductSet" type="da.ibacs.ProductSet" multiplicity="*" dependency="DEFINED"/>
         <tip role="AllProduct" type="da.ibacs.Product" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.ProductSet_RootProductSet" definition="SECONDARY" read-only="true">
         <description lang="fr">Cette relation dérivée (calculée) permet de rattacher directement une Famille à sa Famille racine.
Cette Famille racine est trouvée en remontant l'arbre de composition des Familles en Sous-Familles.</description>
         <type-id name="ProductSet -- ProductSet (ProductSet -- Root)"/>
         <tip role="SubProductSet" type="da.ibacs.ProductSet" multiplicity="*" dependency="DEFINED"/>
         <tip role="RootProductSet" type="da.ibacs.ProductSet" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.ProductSet_WorkshopType">
         <type-id name="ProductSet -- WorkshopType"/>
         <tip role="ProductSet" type="da.ibacs.ProductSet" multiplicity="*" dependency="DEFINED"/>
         <tip role="WorkshopType" type="da.ibacs.WorkshopType" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.Product_Manufacturer" read-only="true" definition="SECONDARY">
         <description lang="fr">Relation entre un Produit IBACS et un Fabricant.</description>
         <type-id name="Product -- Manufacturer"/>
         <tip role="Product" type="da.ibacs.Product" multiplicity="*" dependency="DEFINED"/>
         <tip role="Manufacturer" type="da.ibacs.Manufacturer" multiplicity="1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.Product_StandardSet">
         <description lang="fr">Relation permettant d'associer un Ensemble de Standards à un Article.</description>
         <type-id name="Product -- StandardSet"/>
         <tip role="Product" type="da.ibacs.Product" multiplicity="*" dependency="DEFINED"/>
         <tip role="StandardSet" type="da.ibacs.StandardSet" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.Product_VersionSet" read-only="true">
         <description lang="fr">Relation permettant d'associer un Ensemble de Versions à un Article.</description>
         <type-id name="Product -- VersionSet"/>
         <tip role="Product" type="da.ibacs.Product" multiplicity="*" dependency="DEFINED"/>
         <tip role="VersionSet" type="da.ibacs.VersionSet" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.Product_VersionSetApplicable" read-only="true">
         <type-id name="Product -- VersionSet (Applicable)"/>
         <tip role="ProductAsApplicable" plural="ProductsAsApplicable" type="da.ibacs.Product" multiplicity="*" dependency="DEFINED"/>
         <tip role="VersionSetApplicable" type="da.ibacs.VersionSet" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.Resource" abstract="true" inheritance-strategy="JOINED" discriminator-length="4">
         <description lang="fr">Classe de base (abstraite) de toutes les ressources qui peuvent être utilisées comme logistique d'une opération de maintenance.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.LifeStatusSetter</implements>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.ResourceId" implemented-as="String" length="43">
            <description lang="fr">Identificateur d'une ressource.
Il permet de retrouver le type de la ressource. Pour cela, il est constitué d'un préfixe, dépendant du type, et d'une partie spécifique à chaque type. </description>
         </id>
         <property name="Comment" type="String" length="255">
            <description lang="fr">Commentaire sur la ressource.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="LifeStatus" type="da.ibacs.business.enums.EntityLifeStatus" implemented-as="String" length="1" nullable="false" packed="EXTERNAL_TYPE">
            <description lang="fr">État du cycle de vie de la ressource.</description>
         </property>
      </element>

      <element type="da.ibacs.Resource_DefaultUnit">
         <description lang="fr">Cette relation permet d'associer une Unité par défaut à une Resource.
Cette unité par défaut sera par exemple utilisée lors de la création d'une Logistique de Sous-Tâche ASL.</description>
         <type-id name="Resource -- DefaultUnit"/>
         <tip role="Resource" type="da.ibacs.Resource" multiplicity="*" dependency="DEFINED"/>
         <tip role="DefaultUnit" type="da.ibacs.Unit" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.Resource_EffectiveDefaultUnit" definition="SECONDARY" read-only="true">
         <description lang="fr">Cette relation permet de lire l'Unité par défaut d'une ressource.
Cette unité par défaut sera par exemple utilisée lors de la création d'une Logistique de Sous-Tâche ASL.</description>
         <type-id name="Product -- EffectiveDefaultUnit"/>
         <tip role="Resource" type="da.ibacs.Resource" multiplicity="*" dependency="DEFINED"/>
         <tip role="EffectiveDefaultUnit" type="da.ibacs.Unit" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.RnjSheet">
         <description lang="fr">Définition d'une Fiche de Remarques, de Besoins ou de Justification.</description>
         <type-id name="RnjSheet"/>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.Describable</implements>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.RnjSheetId" implemented-as="int"/>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <property name="Title" type="String" length="126"/>
         <property name="Description" type="String" length="2048">
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Subject" type="da.ibacs.business.enums.SheetSubjectCode" implemented-as="String" length="6" packed="EXTERNAL_TYPE"/>
         <property name="Origin" type="da.ibacs.business.enums.SheetOriginCode" implemented-as="String" length="1" packed="EXTERNAL_TYPE"/>
         <property name="CustomerInterest" type="da.ibacs.business.enums.SheetCustomerInterestCode" implemented-as="String" length="1" packed="EXTERNAL_TYPE"/>
         <property name="Type" type="da.ibacs.business.enums.SheetTypeCode" implemented-as="String" length="1" packed="EXTERNAL_TYPE"/>
      </element>

      <element type="da.ibacs.Sip">
         <description lang="fr">L'entité Sip (Separate Initial Provisioning) permet de décrire un ensemble de tête qui peut être présent à l'Ipc ou au fichier technique (ou dans les 2).
Il contient le type de l'équipement et, si besoin, les liens (IPP et IPL) vers les référentiels sources.</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <implements>da.ibacs.LifeStatusSetter</implements>
         <implements>da.ibacs.TagTarget</implements>
         <id type="da.ibacs.business.ids.SipId" implemented-as="int">
            <description lang="fr">Numéro automatique identifiant un Sip</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <arg name="Id" optional="true"/>
            <arg name="IppId" optional="true"/>
            <arg name="IplId" optional="true"/>
         </constructor>
         <property name="LifeStatus" type="da.ibacs.business.enums.EntityLifeStatus" implemented-as="String" length="1" nullable="false" packed="EXTERNAL_TYPE">
            <description lang="fr">Énumération indiquant l'état de vie du Sip</description>
         </property>
         <property name="IppId" type="da.ibacs.business.ids.IppId" implemented-as="String" length="9">
            <description lang="fr">L'IPP (Initial Provisioning Project) est la référence d'un ensemble de tête à l'IPC</description>
         </property>
         <property name="IplId" type="da.ibacs.business.ids.IplId" implemented-as="String" length="6">
            <description lang="fr">L'IPL (Illustrated Parts List) est la référence d'un ensemble de tête au fichier technique.
Tous les Ipl renseignés dans les Sip sont chargés depuis le FT et utilisés dans le calcul des relations ProductProductInstance, si et seulement si le status du Sip est ALIVE.</description>
         </property>
         <property name="TypeNature" type="da.ibacs.business.enums.TypeNature" implemented-as="String" length="1" packed="EXTERNAL_TYPE">
            <description lang="fr">Le type/nature permet de définir le type de l'ensemble de tête (GSE, EQT...)</description>
         </property>
         <property name="Root" type="boolean" getter-prefix="IS">
            <description lang="fr">Permet de définir si l'ensemble de tête doit être utilisé comme en "Root" dans l'arborescence des produits.</description>
         </property>
      </element>

      <element type="da.ibacs.Sip_IplProduct" read-only="true" definition="SECONDARY">
         <description lang="fr">Liste dérivée des produits correspondant à l'ipl (FT)</description>
         <type-id name="Sip -- IplProduct"/>
         <tip role="IplSip" type="da.ibacs.Sip" multiplicity="0..1" collection="LIST" dependency="DEFINED"/>
         <tip role="IplProduct" type="da.ibacs.Product" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.Sip_IppProduct" read-only="true" definition="SECONDARY">
         <description lang="fr">Liste dérivée des produits correspondant à l'ipp (IPC)</description>
         <type-id name="Sip -- IppProduct"/>
         <tip role="IppSip" type="da.ibacs.Sip" multiplicity="0..1" collection="LIST" dependency="DEFINED"/>
         <tip role="IppProduct" type="da.ibacs.Product" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.Sip_LastProduct" read-only="true" definition="SECONDARY">
         <description lang="fr">Dernier pn de la liste avec en priorité les produits Ipp</description>
         <type-id name="Sip -- Product (Last)"/>
         <tip role="Sip" type="da.ibacs.Sip" multiplicity="0..1" dependency="DEFINED"/>
         <tip role="LastProduct" type="da.ibacs.Product" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.SystemTypeHeadProduct">
         <description lang="fr">Relation d'équivalence entre un Type de Système et un Produit (fictif).</description>
         <description lang="fr">__TODO__Devrait être doublement non navigable (Relation d'équivalence).</description>
         <type-id name="SystemType -- Product (Head)"/>
         <tip role="Product" type="da.ibacs.Product" multiplicity="0..1" dependency="DEFINED"/>
         <tip role="SystemType" type="da.ibacs.SystemType" multiplicity="0..1" dependency="USED_WEAK"/>
      </element>

      <element type="da.ibacs.TechnicalProductSet" extends="da.ibacs.ProductSet" discriminator="PTEC">
         <description lang="fr">Définition d'une Famille Technique de Produits (Articles).
         C'est un regroupement d'Articles partageant certaines caractéristiques de maintenance communes.
         --> (??)( A enlever je crois) : Une Famille peut être soit directement définie par un ensemble de Produits, soit décomposée en Sous-Familles.
         Ce mécanisme de décomposition d'une Famille est récursif. Il est actuellement limité à 2 niveaux pour des raisons métier.
         </description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <id type="da.ibacs.business.ids.TechnicalProductSetId" implemented-as="String"/>
         <constructor name="CONSTRUCTOR">
            <arg name="Id" optional="true"/>
            <arg name="SplitParent"/>
         </constructor>
      </element>

      <element type="da.ibacs.TechnicalProductSet_Product">
         <description lang="fr">Cette relation sert à définir les Produits à d'une Famille technique (feuille).</description>
         <type-id name="TechnicalProductSet -- Product"/>
         <tip role="ProductSet" type="da.ibacs.TechnicalProductSet" multiplicity="0..1" dependency="DEFINED"/>
         <tip role="Product" type="da.ibacs.Product" multiplicity="*" dependency="USED_WEAK"/>
      </element>

      <element type="da.ibacs.VersionHeadProduct">
         <description lang="fr">Relation d'équivalence entre une Version et un Produit (fictif).</description>
         <description lang="fr">__TODO__Devrait être doublement non navigable (Relation d'équivalence).</description>
         <type-id name="Version -- Product (Head)"/>
         <tip role="Product" type="da.ibacs.Product" multiplicity="0..1" dependency="DEFINED"/>
         <tip role="Version" type="da.ibacs.Version" multiplicity="0..1" dependency="USED_WEAK"/>
      </element>
   </domain>

   <domain name="Security" purpose="DOCUMENTATION">
      <description lang="fr">Domaine dédié à la sécurité.</description>
      <element type="da.ibacs.DbConfig" purpose="DOCUMENTATION">
         <description lang="fr">Configuration de base de données.</description>
         <id type="da.ibacs.business.ids.DbConfigId" implemented-as="String">
            <description lang="fr">Identification d'une configuration de base de données.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
      </element>

      <element type="da.ibacs.InstancePermission" extends="da.ibacs.Permission" purpose="DOCUMENTATION">
         <description lang="fr">Définition d'une permission d'instance.
         Actions possibles : create,read,update,delete</description>
         <id type="da.ibacs.business.ids.PropertyPermissionId" implemented-as="String">
            <description lang="fr">Nom du propriétaire de l'objet concerné par cette permission.
            Il s'agit normalement de l'organisation.
            Supporte les jokers, ex: *</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
         </constructor>
      </element>

      <element type="da.ibacs.InstancePermissionOrganization" read-only="true" definition="SECONDARY" purpose="DOCUMENTATION">
         <description lang="fr">Relation permettant de définir l'organisation concernée par une permission.</description>
         <type-id name="InstancePermission -- Organization"/>
         <tip role="InstancePermission" type="da.ibacs.InstancePermission" multiplicity="*" dependency="DEFINED"/>
         <tip role="Organization" type="da.ibacs.Organization" multiplicity="1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.LifeStatusPermission" extends="da.ibacs.Permission" purpose="DOCUMENTATION">
         <description lang="fr">Définition d'une permission d'accès aux objets ayant un statut autre que "alive".
         Pas de liste d'actions : soit on a la permission, soit on ne l'a pas.</description>
         <id type="da.ibacs.business.ids.LifeStatusPermissionId" implemented-as="String">
            <description lang="fr">Nom du statut concerné par cette permission.
            Supporte les jokers, ex: *</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
         </constructor>
      </element>

      <element type="da.ibacs.MethodPermission" extends="da.ibacs.Permission" purpose="DOCUMENTATION">
         <description lang="fr">Définition d'une permission de méthode.
         Pas de liste d'actions : soit on a la permission, soit on ne l'a pas.</description>
         <id type="da.ibacs.business.ids.MethodPermissionId" implemented-as="String">
            <description lang="fr">Nom de la méthode concernée par cette permission.
            Supporte les jokers, ex: *</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
         </constructor>
      </element>

      <element type="da.ibacs.Organization" purpose="DOCUMENTATION">
         <description lang="fr">Définition d'une organisation IBACS.</description>
         <id type="da.ibacs.business.ids.OrganizationId" implemented-as="String">
            <description lang="fr">Identification d'une organisation.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <property name="Designation" type="String" length="255">
            <description lang="fr">Désignation de l'organisation.</description>
         </property>
      </element>

      <interface type="da.ibacs.Owned" referenceable="true" purpose="DOCUMENTATION">
         <description lang="fr">Interface implémentée par les entités qui appartiennent à une organisation.</description>
         <method name="getOrganization" type="da.ibacs.business.Organization"/>
      </interface>

      <element type="da.ibacs.OwnedOrganization" read-only="true" definition="SECONDARY" purpose="DOCUMENTATION">
         <description lang="fr">Relation associant un objet à l'organisation à laquelle il appartient.</description>
         <type-id name="Owned -- Organization"/>
         <tip role="Entity" type="da.ibacs.Owned" multiplicity="*" dependency="DEFINED"/>
         <tip role="Organization" type="da.ibacs.Organization" multiplicity="1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.Permission" purpose="DOCUMENTATION">
         <description lang="fr">Définition d'une permission.</description>
         <id type="da.ibacs.business.ids.PermissionId" implemented-as="String">
            <description lang="fr">Nom de la ressource concernée par cette permission.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
         </constructor>
         <property name="Action" type="String" length="255" read-only="true">
            <description lang="fr">Liste d'actions concernées par cette permission.</description>
         </property>
      </element>

      <element type="da.ibacs.PropertyPermission" extends="da.ibacs.Permission" purpose="DOCUMENTATION">
         <description lang="fr">Définition d'une permission de propriété.
         Actions possibles : read,write</description>
         <id type="da.ibacs.business.ids.PropertyPermissionId" implemented-as="String">
            <description lang="fr">Nom de la propriété concernée par cette permission.
            Peut être composé, ex: domain.entity.property
            Supporte les jokers, ex: * ou domain.* ou domain.entity.*</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
         </constructor>
      </element>

      <element type="da.ibacs.Role" purpose="DOCUMENTATION">
         <description lang="fr">Définition d'un rôle IBACS.</description>
         <id type="da.ibacs.business.ids.RoleId" implemented-as="String">
            <description lang="fr">Identification d'un rôle.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <property name="Description" type="String" length="255">
            <description lang="fr">Description du rôle (En français et en anglais).</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
      </element>

      <element type="da.ibacs.RolePermission" purpose="DOCUMENTATION">
         <description lang="fr">Relation permettant de lister les permissions d'un rôle.</description>
         <type-id name="Role -- Permission"/>
         <tip role="Role" type="da.ibacs.Role" multiplicity="*" dependency="DEFINED"/>
         <tip role="Permission" type="da.ibacs.Permission" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.User" purpose="DOCUMENTATION">
         <description lang="fr">Définition d'un utilisateur IBACS.</description>
         <id type="da.ibacs.business.ids.UserId" implemented-as="String">
            <description lang="fr">Identification d'un utilisateur.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <property name="FirstName" type="String" length="255">
            <description lang="fr">Prénom de l'utilisateur.</description>
         </property>
         <property name="Name" type="String" length="255">
            <description lang="fr">Nom de l'utilisateur.</description>
         </property>
         <property name="Active" type="boolean" getter-prefix="IS">
            <description lang="fr">Statut de l'utilisateur.</description>
         </property>
         <property name="Mail" type="String" length="255">
            <description lang="fr">Mail de l'utilisateur.</description>
         </property>
      </element>

      <element type="da.ibacs.UserOrganization" purpose="DOCUMENTATION">
         <description lang="fr">Relation permettant de définir l'organisation d'un utilisateur.
         Les objets créés par cet utilisateur auront pour propriétaire cette organisation.</description>
         <type-id name="User -- Organization"/>
         <tip role="User" type="da.ibacs.User" multiplicity="*" dependency="DEFINED"/>
         <tip role="Organization" type="da.ibacs.Organization" multiplicity="1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.UserRole" purpose="DOCUMENTATION">
         <description lang="fr">Relation permettant de lister les rôles d'un utilisateur.</description>
         <type-id name="User -- Role"/>
         <tip role="User" type="da.ibacs.User" multiplicity="*" dependency="DEFINED"/>
         <tip role="DbConfig" type="da.ibacs.DbConfig" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
         <tip role="Role" type="da.ibacs.Role" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>
   </domain>

   <domain name="Sew">
      <depends-on>Configuration</depends-on>
      <element type="da.ibacs.BreakdownGroup">
         <description lang="fr">Groupe de Composition.  
C'est un ensemble d'Articles ou de Produits partageant une décomposition proche (via les Points d'Emploi Relatifs).  
Un Article appartient à au plus un Groupe de Composition.
Un Groupe de Composition peut n'être associé à aucun Article. C'est ce qui se passe pour le Rafale (il n'existe pas d'Article correspondant au Rafale).   
Associer un Article à un Groupe de Composition n'est nécessaire que s'il y a besoin de décomposer l'Article.
Par exemple, il n'est pas nécessaire de définir un Groupe de Composition pour la quincaillerie.
Cependant, même s'il n'y a pas de décomposition, définir un Groupe de Composition peut être utile pour signifier que des Articles sont des évolutions les uns des autres.  
Il est possible d'associer explicitement une Politique de Configuration à un Groupe de Composition.  
Dans ce cas, la Politique de Configuration effective du Groupe de Composition est celle-ci.  
En absence de Politique de Configuration explicite, la Politique de Configuration effective est calculée automatiquement.</description>
         <implements>da.ibacs.Tracked</implements>
         <id type="da.ibacs.business.ids.BreakdownGroupId" implemented-as="int"/>
         <constructor name="CONSTRUCTOR">
            <arg name="Id" optional="true"/>
         </constructor>

         <property name="Designation" type="String" length="130">
            <description lang="fr">Désignation du Groupe de Composition (En français et en anglais).</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Root" type="boolean"/>
      </element>

      <element type="da.ibacs.BreakdownGroup_EffectivePolicy" definition="SECONDARY" read-only="true" purpose="DOCUMENTATION">
         <description lang="fr">Politique de configuration Effective du Groupe de Composition.  
S'applique aux éléments liés au Groupe de Composition et ayant une Applicabilité.  
Si  Le Groupe de Composition a une Politique de Configuration, alors c'est sa Politique Effective.  
Sinon, la Politique Effective est automatiquement définie de cette manière :  
Elle a une seule Propriété dont les valeurs possibles sont les BI des Articles du Groupe de Composition.</description>
         <tip type="da.ibacs.BreakdownGroup" role="BreakdownGroup" multiplicity="?" dependency="DEFINED"/>
         <tip type="da.ibacs.CfgPolicy" role="EffectivePolicy" multiplicity="1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.BreakdownGroup_Part">
         <description lang="fr">Relation permettant d'associer des Articles à un Groupe de Composition.  
Un Article appartient à au plus un Groupe de Composition.</description>
         <tip role="BreakdownGroup" type="da.ibacs.BreakdownGroup" multiplicity="0..1" dependency="DEFINED"/>
         <tip role="Part" type="da.ibacs.Part" multiplicity="*" dependency="USED_WEAK">
            <description lang="fr">__TODO__ Supprimer navigation quand Generateur OK.</description>
         </tip>
      </element>

      <element type="da.ibacs.BreakdownGroup_Policy" purpose="DOCUMENTATION">
         <description lang="fr">Politique (optionnelle) de configuration du Groupe de Composition.  
N'a besoin d'être définie que de manière exceptionnelle, par exemple pour un Avion.</description>
         <tip type="da.ibacs.BreakdownGroup" role="BreakdownGroup" multiplicity="?" dependency="DEFINED"/>
         <tip type="da.ibacs.CfgPolicy" role="Policy" multiplicity="?" dependency="USED_STRONG" navigable="false"/>
      </element>

      <interface type="da.ibacs.DelegationTracked" referenceable="true">
         <description lang="fr">
         Interface implémentée par les objets dont les évolutions doivent être tracées et reportées à un autre objet.
         </description>
         <description lang="en">
         This Interface implemented by Objects whose change must be traced and also delegated to another Object.
         </description>
      </interface>

      <element type="da.ibacs.Part">
         <id type="da.ibacs.business.ids.PartId" implemented-as="String" length="43"/>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <tip role="Product" type="da.ibacs.Product" multiplicity="1" navigable="false" dependency="USED_WEAK"/>
         <!-- <property name="Name" type="String" length="100"/> -->
         <property name="Designation" type="String" length="255">
            <description lang="fr">Désignation de l'Article (En français et en anglais).</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
      </element>

      <element type="da.ibacs.PartDefRupDependent">
         <description lang="fr">Caractéristiques contextuelles d'un Article dépendantes de Chemins de Points d'Emploi.  
Les changements relatifs à cet objet sont transférés à son Article.</description>
         <implements>da.ibacs.CfgConfigurable</implements>
         <implements>da.ibacs.DelegationTracked</implements>
         <id type="da.ibacs.business.ids.PartDefRupDependentId" implemented-as="int"/>
         <constructor name="CONSTRUCTOR">
            <arg name="Id" optional="true"/>
            <arg name="Part"/>
         </constructor>
         <tip type="da.ibacs.Part" role="Part" multiplicity="*" dependency="DEFINED">
            <description lang="fr">L'Article caractérisé.</description>
         </tip>
         <property name="SpareSelection" type="da.ibacs.business.enums.SpareCode" implemented-as="String" length="1"/>
         <property name="SmrCode" type="da.ibacs.business.enums.SmrCode" implemented-as="String" length="5"/>
         <property name="ReparabilityRate" type="float">
            <index name="level" type="da.ibacs.business.enums.MaintenanceSupportOrganisation" values="NTI1 NTI2 NTI3"/>
         </property>
         <property name="Category" type="da.ibacs.business.enums.Category" implemented-as="String" length="1"/>
         <!-- THM 23/09/2016 Classe inconnue.. Je sèche, et je commente -->
         <!--<property name="Responsibility" type="???"/> -->
         <property name="Applicability" type="da.business.expressions.Expression" implemented-as="String" length="1024">
            <description lang="fr">Expression de la restriction d'Applicabilité.</description>
         </property>
      </element>

      <!-- Decision Damien, on enleve ce lien car on passera via CfgConfigurable.getEfectivePolicy() -->
      <!-- <element type="da.ibacs.PartDefRupDependent_Policy" definition="SECONDARY" purpose="DOCUMENTATION"> <description lang="fr">Politique de Configuration des Caractéristiques contextuelles d'un Article de type 1. C'est la Politique Effective de configuration du Groupe de Composition auquel appartient
         l'Article.</description> <tip type="da.ibacs.PartDefRupDependent" role="PartDefRupDependent" multiplicity="0..1" dependency="DEFINED"/> <tip type="da.ibacs.CfgPolicy" role="Policy" multiplicity="?" dependency="USED_WEAK" navigable="false"/> </element> -->

      <element type="da.ibacs.PartDefRupDependent_RupPath">
         <description lang="fr">Relation permettant de décrire le contexte de composition auquel s'applique la Définition de Maintenance.</description>
         <tip type="da.ibacs.PartDefRupDependent" role="Def" multiplicity="*" dependency="DEFINED"/>
         <tip type="da.ibacs.RupPath" role="RupPath" multiplicity="+" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.PartDefRupIndependent">
         <description lang="fr">Caractéristiques Contextuelles d'un Article indépendantes du Chemin de Points d'Emploi.  
Les changements relatifs à cet objet sont transférés à son Article.</description>
         <implements>da.ibacs.CfgConfigurable</implements>
         <id type="da.ibacs.business.ids.PartDefRupIndependentId" implemented-as="int"/>
         <constructor name="CONSTRUCTOR">
            <arg name="Id" optional="true"/>
            <arg name="Part"/>
         </constructor>
         <tip type="da.ibacs.Part" role="Part" multiplicity="*" dependency="DEFINED">
            <description lang="fr">L'Article caractérisé.</description>
         </tip>
         <property name="PackagedWeight" type="float"/>
         <!-- TODO relation à créer -->
         <!-- <property name="PackagedWeightUnit" type="da.ibacs.business.Unit"/> -->
         <property name="Applicability" type="da.business.expressions.Expression" implemented-as="String" length="1024">
            <description lang="fr">Expression de la restriction d'Applicabilité.</description>
         </property>
      </element>

      <!-- Decision Damien, on enleve ce lien car on passera via CfgConfigurable.getEfectivePolicy() -->
      <!-- <element type="da.ibacs.PartDefRupIndependent_Policy" definition="SECONDARY" purpose="DOCUMENTATION"> <description lang="fr">Politique de configuration des Caractéristiques contextuelles d'un Article de type 2. C'est la Politique Effective de configuration du Groupe de Composition auquel appartient
         l'Article.</description> <tip type="da.ibacs.PartDefRupIndependent" role="PartDefRupIndependent" multiplicity="0..1" dependency="DEFINED"/> <tip type="da.ibacs.CfgPolicy" role="Policy" multiplicity="?" dependency="USED_WEAK" navigable="false"/> </element> -->

      <element type="da.ibacs.PartEvolution">
         <description lang="fr">Description, à un Point d'Emploi Relatif donné, d'une évolution d'emploi d'un Article.</description>
         <implements>da.ibacs.CfgConfigurable</implements>
         <implements>da.ibacs.Tracked</implements>
         <id type="da.ibacs.business.ids.PartEvolutionId" implemented-as="int"/>
         <constructor name="CONSTRUCTOR">
            <arg name="Id" optional="true"/>
            <arg name="Rup"/>
            <arg name="Pred"/>
            <arg name="Succ"/>
         </constructor>
         <tip type="da.ibacs.Rup" role="Rup" multiplicity="*" dependency="DEFINED">
            <description lang="fr">Point D'Emploi Relatif auquel s'applique l'Evolution.</description>
         </tip>
         <tip type="da.ibacs.Part" role="Pred" multiplicity="*" dependency="USED_WEAK" navigable="false">
            <description lang="fr">Article d'origine.</description>
         </tip>
         <tip type="da.ibacs.Part" role="Succ" multiplicity="*" dependency="USED_WEAK" navigable="false">
            <description lang="fr">Article de remplacement.</description>
         </tip>
         <property name="Applicability" type="da.business.expressions.Expression" implemented-as="String" length="1024">
            <description lang="fr">Expression de la restriction d'Applicabilité de l'évolution.</description>
         </property>
      </element>

      <!-- Decision Damien, on enleve ce lien car on passera via CfgConfigurable.getEfectivePolicy() -->
      <!-- <element type="da.ibacs.PartEvolution_Policy" definition="SECONDARY" purpose="DOCUMENTATION"> <description lang="fr">Politique de configuration d'un Évolution d'Article. C'est celle du Point d'Emploi Relatif (donc la Politique Effective du Groupe de Composition de celui-ci).</description>
         <tip type="da.ibacs.PartEvolution" role="PartEvolution" multiplicity="0..1" dependency="DEFINED"/> <tip type="da.ibacs.CfgPolicy" role="Policy" multiplicity="?" dependency="USED_WEAK" navigable="false"/> </element> -->

      <element type="da.ibacs.PartInstance">
         <description lang="fr">Utilisation d'un Article à un Point d'Emploi Relatif.  
Les changements relatifs à cet objet sont transférés à son Point d'Emploi Relatif.</description>
         <implements>da.ibacs.CfgConfigurable</implements>
         <implements>da.ibacs.DelegationTracked</implements>
         <id type="da.ibacs.business.ids.PartInstanceId" implemented-as="int"/>
         <constructor name="CONSTRUCTOR">
            <arg name="Id" optional="true"/>
            <arg name="Rup"/>
            <arg name="Part"/>
         </constructor>
         <tip type="da.ibacs.Rup" role="Rup" multiplicity="*" dependency="DEFINED">
            <description lang="fr">Point d'Emploi Relatif sur lequel l'Article est monté.</description>
         </tip>
         <tip type="da.ibacs.Part" role="Part" multiplicity="*" dependency="USED_WEAK" navigable="false">
            <description lang="fr">Article monté / montable.</description>
         </tip>
         <property name="Applicability" type="da.business.expressions.Expression" implemented-as="String" length="1024">
            <description lang="fr">Expression d'Applicabilité associée à l'instance".</description>
         </property>
      </element>

      <element type="da.ibacs.Part_Manufacturer" read-only="true" definition="SECONDARY">
         <description lang="fr">Relation entre un Produit de Référence et un Fabricant.</description>
         <type-id name="Part -- Manufacturer"/>
         <tip role="Part" type="da.ibacs.Part" multiplicity="*" dependency="DEFINED"/>
         <tip role="Manufacturer" type="da.ibacs.Manufacturer" multiplicity="1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <!-- Decision Damien, on enleve ce lien car on passera via CfgConfigurable.getEfectivePolicy() -->
      <!-- <element type="da.ibacs.PartInstance_Policy" definition="SECONDARY" purpose="DOCUMENTATION"> <description lang="fr">Politique de configuration de l'Utilisation d'un Article à un Point d'Emploi Relatif. C'est celle du Point d'Emploi Relatif (donc la Politique Effective du Groupe de Composition
         de celui-ci).</description> <tip type="da.ibacs.PartInstance" role="PartInstance" multiplicity="0..1" dependency="DEFINED"/> <tip type="da.ibacs.CfgPolicy" role="Policy" multiplicity="?" dependency="USED_WEAK" navigable="false"/> </element> -->

      <element type="da.ibacs.Rup">
         <description lang="fr">Point d'Emploi Relatif à un Groupe de Composition.  
Il n'existe que dans le cadre d'un Groupe de Composition donné.  
Il a une Applicabilité.  
On peut y associer un nombre quelconque d'Articles.  
Il peut servir à définir une relation de composition, mais également
à associer un conteneur, de la matière première, ... à un Groupe de Composition.</description>
         <implements>da.ibacs.CfgConfigurable</implements>
         <implements>da.ibacs.Tracked</implements>
         <id type="da.ibacs.business.ids.RupId" implemented-as="int"/>
         <constructor name="CONSTRUCTOR">
            <arg name="Id" optional="true"/>
            <arg name="BreakdownGroup"/>
            <arg name="Kind"/>
         </constructor>
         <tip type="da.ibacs.BreakdownGroup" role="BreakdownGroup" multiplicity="*" dependency="DEFINED"/>
         <property name="Kind" type="da.ibacs.business.enums.RupKind" read-only="true" implemented-as="String" length="2">
            <description lang="fr">Type du Point d'Emploi Relatif : Composition, Matière Première, Conteneur, ...</description>
         </property>
         <property name="Designation" type="String" length="100">
            <description lang="fr">Désignation du Ppint d'Emploi Relatif (En français et en anglais).</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Quantity" type="int"/>
         <property name="Applicability" type="da.business.expressions.Expression" implemented-as="String" length="1024">
            <description lang="fr">Expression d'Aplicabilité associée au Rup.</description>
         </property>
      </element>

      <!-- Decision Damien, on enleve ces deux liens -->
      <!-- <element type="da.ibacs.Rup_Ata" purpose="DOCUMENTATION"> <description lang="fr">Association d'Ata à un Point d'Emploi Relatif.</description> <tip type="da.ibacs.Rup" role="Rup" multiplicity="*" dependency="DEFINED"/> <tip type="da.ibacs.Ata" role="Ata" multiplicity="*" dependency="USED_WEAK"
         navigable="false"/> </element> <element type="da.ibacs.Rup_EngineeringZone" purpose="DOCUMENTATION"> <description lang="fr">Association d'une Zone BE à un Point d'Emploi Relatif.</description> <tip type="da.ibacs.Rup" role="Rup" multiplicity="*" dependency="DEFINED"/> <tip type="da.ibacs.EngineeringZone"
         role="EngineeringZone" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/> </element> -->

      <!-- Decision Damien, on enleve ce lien car on passera via CfgConfigurable.getEfectivePolicy() -->
      <!-- <element type="da.ibacs.Rup_Policy" definition="SECONDARY" purpose="DOCUMENTATION"> <description lang="fr">Politique de configuration du Point d'Emploi Relatif. C'est la Politique Effective de son Groupe de Composition.</description> <tip type="da.ibacs.Rup" role="Rup" multiplicity="*" dependency="DEFINED"/>
         <tip type="da.ibacs.CfgPolicy" role="Policy" multiplicity="?" dependency="USED_WEAK" navigable="false"/> </element> -->

      <element type="da.ibacs.RupPath">
         <description lang="fr">Succession de Points d'Emploi Relatifs (correspondant à la réalité de composition).  
Le point de départ peut être n'importe quel Point d'Emploi.</description>
         <id type="da.ibacs.business.ids.RupPathId" implemented-as="int"/>
         <constructor name="CONSTRUCTOR">
            <arg name="Id" optional="true"/>
         </constructor>
      </element>

      <interface type="da.ibacs.Tracked" referenceable="true">
         <description lang="fr">
         Interface implémentée par les objets dont les évolutions doivent être tracées.
         A priori, tout objet implémentant cette interface ne peut évoluer sans que cette évolution ne soit tracée par un Tracker.
         Note THM 22/09/2016 : Cette entité était avant dans new-appro-dm.xml dans le domaine Management. 
         </description>
         <description lang="en">
         This Interface implemented by Objects whose change must be traced.
         </description>
      </interface>

      <element type="da.ibacs.UsePath_Rup" purpose="DOCUMENTATION">
         <description lang="fr">Relation ordonnée permettant de définir un Chemin d'Emploi.</description>
         <tip type="da.ibacs.RupPath" role="RupPath" multiplicity="*" dependency="DEFINED"/>
         <tip type="da.ibacs.Rup" role="Rup" multiplicity="*" dependency="USED_WEAK" navigable="false" collection="LIST"/>
      </element>
   </domain>

   <domain name="SymptomFiltering" prefix="Sf">
      <depends-on>Commons</depends-on>
      <depends-on>Impacts-Interface</depends-on>
      <depends-on>Hums</depends-on>
      <depends-on>Troubleshooting-Interface</depends-on>

      <element type="da.ibacs.SfAsk">
         <description lang="fr">Entité contenant l'ensemble des demandes de confirmation de l'utilisateur pour valider un filtre</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.SfAskId" implemented-as="String" length="255">
            <description lang="fr">Identification d'une demande de confirmation appliqué à un filtre</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <arg name="Id" optional="true"/>
         </constructor>
         <tip role="HumsMaintenanceVersion" type="da.ibacs.HumsMaintenanceVersion" multiplicity="*" dependency="DEFINED" navigable="false"/>
         <property name="Code" type="String" definition="SECONDARY" length="30" read-only="true">
            <description lang="fr">Code d'identification du filtre</description>
         </property>
         <property name="Label" type="String" length="255">
            <description lang="fr">Description de la demande de filtrage</description>
         </property>
      </element>

      <element type="da.ibacs.SfFilter">
         <description lang="fr">Entité contenant l'ensemble des fenêtres temporelles d'appartion d'une panne CRM</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <implements>da.ibacs.VersionSetSetter</implements>
         <id type="da.ibacs.business.ids.SfFilterId" implemented-as="String" length="255">
            <description lang="fr">Identification d'un filtre appliqué à un bit CRM</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <tip role="HumsMaintenanceVersion" type="da.ibacs.HumsMaintenanceVersion" multiplicity="*" dependency="DEFINED" navigable="false"/>
         <property name="Code" type="String" definition="SECONDARY" length="30" read-only="true">
            <description lang="fr">Code d'identification du filtre</description>
         </property>
         <property name="FilterType" type="da.ibacs.business.enums.SfFilterType" implemented-as="String" length="3">
            <description lang="fr">Type de filtre appliqué à la fenêtre temporelle</description>
         </property>
         <property name="RaisePhasis" type="da.ibacs.business.enums.SfFilterPhasis" implemented-as="String" length="3">
            <description lang="fr">Phase de montée de la panne</description>
         </property>
         <property name="RaisePhasisOriginType" type="da.ibacs.business.enums.SfFilterOriginFollowingType" implemented-as="String" length="5">
            <description lang="fr">Origine de la phase de montée de la panne</description>
         </property>
         <property name="RaisePhasisMinTime" type="Integer">
            <description lang="fr">Temps minimum de la phase de montée de la panne</description>
         </property>
         <property name="RaisePhasisMaxTime" type="Integer">
            <description lang="fr">Temps maximum de la phase de montée de la panne</description>
         </property>
         <property name="DownPhasis" type="da.ibacs.business.enums.SfFilterPhasis" implemented-as="String" length="3">
            <description lang="fr">Phase de descente de la panne</description>
         </property>
         <property name="DownPhasisOriginType" type="da.ibacs.business.enums.SfFilterOriginFollowingType" implemented-as="String" length="5">
            <description lang="fr">Origine de la phase de descente de la panne</description>
         </property>
         <property name="DownPhasisMinTime" type="Integer">
            <description lang="fr">Temps minimum de la phase de descente de la panne</description>
         </property>
         <property name="DownPhasisMaxTime" type="Integer">
            <description lang="fr">Temps maximum de la phase de descente de la panne</description>
         </property>
      </element>

      <element type="da.ibacs.SfFilterForbiddenSymptom">
         <description lang="fr">Relation lourde entre un filtre et un symptôme.</description>
         <id type="da.ibacs.business.ids.SfFilterForbiddenSymptomId" implemented-as="da.ibacs.impl.jpa.SfFilterForbiddenSymptomKey">
            <description lang="fr">Identification composite de la relation</description>
            <field name="SfFilter"/>
            <field name="ForbiddenSymptom"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <tip role="SfFilter" type="da.ibacs.SfFilter" multiplicity="*" dependency="DEFINED"/>
         <tip role="ForbiddenSymptom" type="da.ibacs.Symptom" multiplicity="*" navigable="false" dependency="USED_WEAK"/>
         <property name="Before" type="boolean" getter-prefix="IS"></property>
         <property name="During" type="boolean" getter-prefix="IS"></property>
         <property name="After" type="boolean" getter-prefix="IS"></property>
      </element>

      <element type="da.ibacs.SfFilterSfSubFilter">
         <description lang="fr">Relation lourde entre un filtre et un sous filtre.</description>
         <id type="da.ibacs.business.ids.SfFilterSfSubFilterId" implemented-as="da.ibacs.impl.jpa.SfFilterSfSubFilterKey">
            <description lang="fr">Identification composite de la relation</description>
            <field name="SfFilter"/>
            <field name="SfSubFilter"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <tip role="SfFilter" type="da.ibacs.SfFilter" multiplicity="*" dependency="DEFINED"/>
         <tip role="SfSubFilter" type="da.ibacs.SfSubFilter" multiplicity="*" navigable="false" dependency="USED_WEAK"/>
         <property name="Systematic" type="boolean" getter-prefix="IS"></property>
         <property name="Unique" type="boolean" getter-prefix="IS"></property>
      </element>

      <element type="da.ibacs.SfFilterSfSubFilterConstraint">
         <description lang="fr">Relation lourde entre un filtre et un sous filtre.</description>
         <id type="da.ibacs.business.ids.SfFilterSfSubFilterConstraintId" implemented-as="da.ibacs.impl.jpa.SfFilterSfSubFilterConstraintKey">
            <description lang="fr">Identification composite de la relation</description>
            <field name="SfFilter"/>
            <field name="OriginSubFilter"/>
            <field name="FollowingSubFilter"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="false"/>
         </constructor>
         <tip role="SfFilter" type="da.ibacs.SfFilter" multiplicity="*" dependency="DEFINED"/>
         <tip role="OriginSubFilter" type="da.ibacs.SfSubFilter" multiplicity="*" navigable="false" dependency="USED_WEAK"/>
         <tip role="FollowingSubFilter" type="da.ibacs.SfSubFilter" multiplicity="*" navigable="false" dependency="USED_WEAK"/>
         <property name="OriginType" type="da.ibacs.business.enums.SfFilterOriginFollowingType" implemented-as="String" length="5">
            <description lang="fr">Nature du front du sous filtre d'origine</description>
         </property>
         <property name="FollowingType" type="da.ibacs.business.enums.SfFilterOriginFollowingType" implemented-as="String" length="5">
            <description lang="fr">Nature du front du sous filtre suivant</description>
         </property>
         <property name="MinTime" type="Integer">
            <description lang="fr">Temps minimum appliqué au sous filtre</description>
         </property>
         <property name="MaxTime" type="Integer">
            <description lang="fr">Temps maximum appliqué au sous filtre</description>
         </property>
      </element>

      <element type="da.ibacs.SfFilter_SfAsk">
         <description lang="fr">Lien dérivé entre les demande de confirmation de validation d'un filtre et un filtre.</description>
         <type-id name="SfFilter -- SfAsk"/>
         <tip role="SfFilter" type="da.ibacs.SfFilter" multiplicity="*" dependency="USED_WEAK"/>
         <tip role="SfAsk" type="da.ibacs.SfAsk" multiplicity="*" navigable="false" dependency="DEFINED"/>
      </element>

      <element type="da.ibacs.SfFilter_VersionSet">
         <description lang="fr">VersionSet associé au filtre.</description>
         <type-id name="SfFilter -- VersionSet"/>
         <tip role="SfFilter" type="da.ibacs.SfFilter" multiplicity="*" dependency="DEFINED"/>
         <tip role="VersionSet" type="da.ibacs.VersionSet" multiplicity="1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.SfSubFilter">
         <description lang="fr">Entité contenant l'ensemble des sous éléments d'un filtre</description>
         <life-cycle created-by="USER" updated-by="USER" removed-by="NOBODY"/>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.SfSubFilterId" implemented-as="String" length="255">
            <description lang="fr">Identification d'un filtre appliqué à un bit CRM</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <tip role="HumsMaintenanceVersion" type="da.ibacs.HumsMaintenanceVersion" multiplicity="*" dependency="DEFINED" navigable="false"/>
         <property name="Code" type="String" definition="SECONDARY" length="30" read-only="true">
            <description lang="fr">Code d'identification du sous filtre</description>
         </property>
         <property name="FrontType" type="da.ibacs.business.enums.SfSubFilterFrontType" implemented-as="String" length="1">
            <description lang="fr">Type de front du sous filtre</description>
         </property>
         <property name="MinTime" type="Integer">
            <description lang="fr">Temps minimum appliqué au sous filtre</description>
         </property>
         <property name="MaxTime" type="Integer">
            <description lang="fr">Temps maximum appliqué au sous filtre</description>
         </property>
         <property name="RaiseAreaPhasis" type="da.ibacs.business.enums.SfFilterPhasis" implemented-as="String" length="3">
            <description lang="fr">Phase de montée de la panne</description>
         </property>
         <property name="RaiseAreaMinTime" type="Integer">
            <description lang="fr">Temps minimum de la phase de montée de la panne</description>
         </property>
         <property name="RaiseAreaMaxTime" type="Integer">
            <description lang="fr">Temps maximum de la phase de montée de la panne</description>
         </property>
         <property name="DownAreaPhasis" type="String" length="255">
            <description lang="fr">Phase de descente de la panne</description>
         </property>
         <property name="DownAreaMinTime" type="Integer">
            <description lang="fr">Temps minimum de la phase de descente de la panne</description>
         </property>
         <property name="DownAreaMaxTime" type="Integer">
            <description lang="fr">Temps maximum de la phase de descente de la panne</description>
         </property>
      </element>

      <element type="da.ibacs.SfSubFilterSymptomConstraint">
         <description lang="fr">Relation lourde entre un sous filtre et un symptôme.</description>
         <id type="da.ibacs.business.ids.SfSubFilterSymptomConstraintId" implemented-as="da.ibacs.impl.jpa.SfSubFilterSymptomConstraintKey">
            <description lang="fr">Identification composite de la relation</description>
            <field name="SfSubFilter"/>
            <field name="OriginSymptom"/>
            <field name="FollowingSymptom"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="false"/>
         </constructor>
         <tip role="SfSubFilter" type="da.ibacs.SfSubFilter" multiplicity="*" dependency="DEFINED"/>
         <tip role="OriginSymptom" type="da.ibacs.Symptom" multiplicity="*" navigable="false" dependency="USED_WEAK"/>
         <tip role="FollowingSymptom" type="da.ibacs.Symptom" multiplicity="*" navigable="false" dependency="USED_WEAK"/>
         <property name="OriginType" type="boolean" getter-prefix="IS"></property>
         <property name="FollowingType" type="boolean" getter-prefix="IS"></property>
         <property name="MinTime" type="Integer">
            <description lang="fr">Temps minimum appliqué au sous filtre</description>
         </property>
         <property name="MaxTime" type="Integer">
            <description lang="fr">Temps maximum appliqué au sous filtre</description>
         </property>
      </element>

      <element type="da.ibacs.SfSubFilter_Symptom">
         <description lang="fr">Symptômes d'un sous filtre.</description>
         <type-id name="SfSubFilter -- Symptom"/>
         <tip role="SfSubFilter" type="da.ibacs.SfSubFilter" multiplicity="*" dependency="DEFINED"/>
         <tip role="Symptom" type="da.ibacs.Symptom" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>

   </domain>

   <domain name="Traceability">
      <description lang="fr">Domaine contenant des informations de traçabilité entre les autres domaines.</description>
      <depends-on>Doc</depends-on>
      <depends-on>Ipc</depends-on>
      <depends-on>Lsa-Resources</depends-on>

      <element type="da.ibacs.CsnLsac" dao-hint="LAZY">
         <description lang="fr">Relation de correspondance entre Csn et Lsac.  
Cette relation n'est pas native et est gérée dans IBACS.  
Les concepts de Lsac et de Csn sont proches, mais définis par des métiers et des standards différents.  
Cette relation permet donc de les rapprocher.</description>
         <type-id name="Csn -- Lsac"/>
         <id type="da.ibacs.business.ids.CsnLsacId" implemented-as="da.ibacs.impl.jpa.CsnLsacKey">
            <description lang="fr">Identifiant de la relation Csn -- Lsac.</description>
            <field name="Csn"/>
            <field name="Lsac"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <tip role="Csn" type="da.ibacs.Csn" multiplicity="*" navigable="false" dependency="USED_WEAK"/>
         <tip role="Lsac" type="da.ibacs.Lsac" multiplicity="*" navigable="false" dependency="USED_WEAK"/>
      </element>

      <element type="da.ibacs.DocModuleLsac" dao-hint="LAZY">
         <description lang="fr">Relation permettant de décrire sur quel(s) Lsac porte le contenu d'un Module Documentaire.</description>
         <type-id name="DocModule -- Lsac"/>
         <id type="da.ibacs.business.ids.DocModuleLsacId" implemented-as="da.ibacs.impl.jpa.DocModuleLsacKey">
            <description lang="fr">Identifiant de la relation de DocModule -- Lsac.</description>
            <field name="DocModule"/>
            <field name="Lsac"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <tip role="DocModule" type="da.ibacs.DocModule" multiplicity="*" navigable="false" dependency="DEFINED"/>
         <tip role="Lsac" type="da.ibacs.Lsac" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.RfdLsac">
         <description lang="fr">Relation permettant de faire correspondre des REG (Rfd) et des Lsac.</description>
         <type-id name="Rfd -- Lsac"/>
         <id type="da.ibacs.business.ids.RfdLsacId" implemented-as="da.ibacs.impl.jpa.RfdLsacKey">
            <description lang="fr">Identifiant de la relation Rfd -- Lsac.</description>
            <field name="Lsac"/>
            <field name="Rfd"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <tip role="Rfd" type="da.ibacs.Rfd" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
         <tip role="Lsac" type="da.ibacs.Lsac" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>
   </domain>

   <domain name="Troubleshooting-Analyses" prefix="Trbl">
      <description lang="fr">Domaine contenant l'ensemble des éléments définissant l'analyse métier.
On identifie le Lsac qui sera utilisé lors de l'analyse grâce au TrblElement. 
On y accroche ensuite un ou plusieurs ConstituentTemplate. Celui-ci est composé d'un ensemble de modes de défaillances (FailureMode). 
On lie aussi à ce TrblElement, des symptômes qui serviront au calcul des cas de pannes (FailureSets).</description>

      <depends-on>Commons</depends-on>
      <depends-on>Impacts-Interface</depends-on>
      <depends-on>Business-Refs</depends-on>
      <depends-on>Resources</depends-on>
      <depends-on>Troubleshooting-Interface</depends-on>
      <depends-on>Troubleshooting-Resources</depends-on>
      <depends-on>Troubleshooting-Analyses-Ref</depends-on>

      <element type="da.ibacs.TrblAnalysisSet">
         <description lang="fr">Définition d'une analyse de testabilité.</description>
         <type-id name="TrblAnalysisSet"/>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.TrblAnalysisSetId" implemented-as="int">
            <description lang="fr">Identificateur d'un TrblAnalysisSet</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
         </constructor>
         <property name="PublicId" type="int">
            <description lang="fr">Identifiant public de l'analyse.</description>
         </property>
         <property name="Name" type="String" length="255">
            <description lang="fr">Dénomination de l'analyse.</description>
         </property>
         <property name="SubStandard" type="String" length="50">
            <description lang="fr">Sous-Standard / LOAD de l'analyse.</description>
         </property>
         <property name="LifeStatus" type="da.ibacs.business.enums.EntityLifeStatus" implemented-as="String" length="1" nullable="false">
            <description lang="fr">État du cycle de vie de l'analyse.</description>
         </property>
      </element>

      <element type="da.ibacs.TrblAnalysisSet_TrblElement">
         <description lang="fr">Cette relation sert à décrire quels sont les TrblElements associés à un AnalysisSet donné.</description>
         <type-id name="TrblAnalysisSet -- TrblElement"/>
         <tip role="AnalysisSet" type="da.ibacs.TrblAnalysisSet" multiplicity="*" dependency="DEFINED"/>
         <tip role="Element" type="da.ibacs.TrblElement" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.TrblDoc" abstract="true" inheritance-strategy="JOINED" discriminator-length="4">
         <description lang="fr">Définition de base des documents de testabilité. De cet élément dérivront les FIP-Element et les ValidationTest.</description>
         <implements>da.ibacs.LifeStatusSetter</implements>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <implements>da.ibacs.CfgConfigurable</implements>
         <id type="da.ibacs.business.ids.TrblDocId" implemented-as="String" length="32">
            <description lang="fr">Identificateur d'un document.</description>
         </id>
         <property name="DocType" type="da.ibacs.business.enums.TrblDocType" implemented-as="String" length="4" read-only="true" definition="SECONDARY">
            <description lang="fr">Type de document : VT ou FIPE</description>
         </property>
         <property name="AtaChapter" type="int">
            <description lang="fr">Chapitre ATA du test</description>
         </property>
         <property name="AtaSection" type="int">
            <description lang="fr">Section ATA du test</description>
         </property>
         <property name="TestNumber" read-only="true" type="int">
            <description lang="fr">Numéro du test dans ce chapitre/section ATA.</description>
         </property>
         <property name="Content" type="String" length="32000">
            <description lang="fr">Description du test (pré-requis / action).</description>
         </property>
         <property name="Remark" type="String" length="4096">
            <description lang="fr">Complément de description.</description>
         </property>
         <property name="Duration" type="da.ibacs.business.enums.TrblTestDuration" implemented-as="String" length="4">
            <description lang="fr">Durée forfaitaire du test.</description>
         </property>
         <property name="Type" type="da.ibacs.business.enums.TrblTestType" implemented-as="String" length="4">
            <description lang="fr">Type de test.</description>
         </property>
         <property name="Applicability" type="da.business.expressions.Expression" implemented-as="String" length="1024">
            <description lang="fr">Expression associée au nom.</description>
         </property>
         <property name="LifeStatus" type="da.ibacs.business.enums.EntityLifeStatus" implemented-as="String" length="1" nullable="false">
            <description lang="fr">État du cycle de vie du doucument de test (FIPE/VT).</description>
         </property>
      </element>

      <element type="da.ibacs.TrblElement">
         <description lang="fr"> Objet intermédiaire entre un Lsac/Rfd et le LruFmNode. 
Il est le représentant du Lsac/Rfd dans le domaine des études de diagnostic.</description>
         <type-id name="TrblElement"/>
         <implements>da.ibacs.TrblElementTarget</implements>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.TrblElementId" implemented-as="int">
            <description lang="fr"> Identificateur d'un TrblElement qui est créé à partir de l'identificateur du LSAC.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
            <arg name="Target" optional="true"/>
         </constructor>
         <!-- <property name="Target" type="da.rids.RawId" implemented-as="String" length="255" nullable="false" read-only="true" definition="SECONDARY"> <description lang="fr">LSAC qui sert à la définition de l'Élément.</description> </property> -->
         <!-- <property name="Target" type="da.ibacs.TrblElementTarget"> <description lang="fr">LSAC qui sert à la définition de l'Élément.</description> </property> -->
         <property name="Title" type="String" length="255" nullable="true" read-only="false">
            <description lang="fr">Description (En français et en anglais) de l'élément target (LSAC).</description>
         </property>
         <property name="Applicability" type="da.business.expressions.Expression" implemented-as="String" length="1024">
            <description lang="fr">Expression associée au nom.</description>
         </property>
         <property name="Workpackage" type="String" length="255" nullable="true" definition="SECONDARY" read-only="true">
            <description lang="fr"></description>
         </property>         
      </element>

      <element type="da.ibacs.TrblElement_TrblElementTarget">
         <description lang="fr">Liaison entre un TrblElmeent et un TrblElementTArget qui peut être un Lsac ou un Rfd.</description>
         <type-id name="TrblElement --TrblElementTarget"/>
         <tip role="TrblElement" type="da.ibacs.TrblElement" multiplicity="*"/>
        <!--  <tip role="Target" type="da.ibacs.TrblElementTarget" navigable="false" multiplicity="1"/> -->
         <tip role="Target" type="da.ibacs.TrblElementTarget" navigable="false" multiplicity="*"/>
      </element>

      <element type="da.ibacs.TrblFailureSet">
         <description lang="fr">Définition de l'ensemble des modes de défaillances des LSAC partageant une même signature des cas de panne.</description>
         <type-id name="TrblFailureSet"/>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.TrblFailureSetId" implemented-as="String" length="30">
            <description lang="fr">Identificateur d'un cas de panne. 
Il est calculé à partir d'une fonction de hashage de l'ensemmble des identificateurs des symptômes qui constituent la signature du LruFmNode ; ce qui permet l'unicité de l'id.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <property name="Number" type="int">
            <description lang="fr">Numéro unique du FailureSet. 
Lors de l'étude, les FailureSet sont créés et peuvent être supprimés. Mais dès lors qu'ils ont été validés et numérotés, ils ne peuvent plus être supprimés.</description>
         </property>
         <property name="LifeStatus" type="da.ibacs.business.enums.EntityLifeStatus" implemented-as="String" length="1" nullable="false">
            <description lang="fr">État du cycle de vie du TrblFailureSet.</description>
         </property>
         <property name="Complete" type="da.ibacs.business.enums.TrblFailureSetStatus" implemented-as="String" length="1" definition="SECONDARY" read-only="true">
            <description lang="fr">Test si le FS a tous els FIP / VT / ni l'un ni l'autre.</description>
         </property>
         <property name="FailureSetValidity" type="da.ibacs.business.enums.TrblFailureSetValidity" implemented-as="String" length="1">
            <description lang="fr">Test de la validité => action du specialiste soutien.</description>
         </property>
         <property name="Valid" type="boolean" definition="SECONDARY" read-only="true">
            <description lang="fr">Test si la liste des symptomes est cohérente avec l'id.</description>
         </property>
      </element>

      <element type="da.ibacs.TrblFailureSet_Symptom">
         <description lang="fr">Cette relation sert à définir les symptômes associés à un cas de panne.</description>
         <type-id name="TrblFailureSet -- Symptom"/>
         <tip role="TrblFailureSet" type="da.ibacs.TrblFailureSet" multiplicity="*"/>
         <tip role="TrblSymptom" type="da.ibacs.TrblSymptom" multiplicity="*" navigable="false"/>
      </element>

      <element type="da.ibacs.TrblFailureSet_ValidationTest" definition="SECONDARY" read-only="true">
         <description lang="fr">Cette relation sert à définir les tests de validation associés à un cas de panne.</description>
         <type-id name="TrblFailureSet -- TrblValidationTest"/>
         <tip role="FailureSet" type="da.ibacs.TrblFailureSet" multiplicity="*"/>
         <tip role="ValidationTest" type="da.ibacs.TrblValidationTest" multiplicity="*" navigable="false"/>
      </element>

      <element type="da.ibacs.TrblFipElement" extends="da.ibacs.TrblDoc" discriminator="FIPE">
         <description lang="fr">Définition d'un test de réduction d'incertitude qui est associé à une LruFmNode.</description>
         <type-id name="TrblFipElement"/>
         <id type="da.ibacs.business.ids.TrblFipElementId" implemented-as="String">
            <description lang="fr">Identificateur d'un test de réduction d'incertitude.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
      </element>

      <element type="da.ibacs.TrblLink">
         <description lang="fr">Définition des liens du graphe inter-système : les liens lruFmNode-Symptoms, les liens LruFmNode-LocalisedSymptoms etc.
Ce graphe contient 3 noeuds pricipaux : le LruFmNode, les symptômes réels et les symptômes virtuels localisés. Ainsi que tous les liens entre ces entités.
Ce graphe sert à l'étude de la propagation des pannes.</description>
         <type-id name="TrblLink"/>
         <id type="da.ibacs.business.ids.TrblLinkId" implemented-as="int">
            <description lang="fr">Identificateur d'un lien inter-système</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
            <arg name="Source"/>
            <arg name="Target"/>
         </constructor>
         <tip role="Source" type="da.ibacs.TrblNode" multiplicity="*" navigable="false"/>
         <tip role="Target" type="da.ibacs.TrblNode" multiplicity="*" navigable="false"/>
         <property name="Type" type="da.ibacs.business.enums.TrblLinkType" implemented-as="String" length="1" definition="SECONDARY" read-only="true">
            <description lang="fr">Type de lien (lien Lru-Symptom, lien inter-système ...)</description>
         </property>
         <property name="AlwaysVisible" type="da.ibacs.business.enums.TrblVisibility" implemented-as="String" length="1" nullable="false">
            <description lang="fr">Visibilité du lien</description>
         </property>
         <property type="int" name="Rank">
            <description lang="fr">Rang</description>
         </property>
         <property name="ModificationApplicability" type="da.ibacs.business.enums.TrblModificationApplicability" implemented-as="String" length="1">
            <description lang="fr">Applicabilité du lien.</description>
         </property>
         <property name="Applicability" type="da.business.expressions.Expression" implemented-as="String" length="1024">
            <description lang="fr">Expression associée au nom.</description>
         </property>
         <property name="Remark" type="String" length="255">
            <description lang="fr">Remarques</description>
         </property>
         <method name="getSLRelevance" type="da.ibacs.business.enums.TrblRelevance">
            <description lang="fr">Méthode calculant la pertinence des liens qui associent les symptômes à un LruFmNode avec ou sans inter-système, et avant ou après les modifications, pour le calcul des FailureSets.</description>
            <arg name="withInterSystem" type="boolean"/>
            <arg name="afterModification" type="boolean"/>
         </method>
      </element>

      <element type="da.ibacs.TrblLink_AnalysisSet">
         <description lang="fr">Cette relation sert à définir les analyses associées à un lien du graphe.</description>
         <type-id name="TrblLink -- TrblAnalysisSet"/>
         <tip role="TrblLink" type="da.ibacs.TrblLink" multiplicity="*" dependency="DEFINED"/>
         <tip role="AnalysisSet" type="da.ibacs.TrblAnalysisSet" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.TrblLocalisedVirtualSymptom">
         <description lang="fr">Cette relation sert à définir la liaison entre un TrblElement (Lsac) et un symptôme virtuel dans le graphe inter-système.
On crée ainsi le symptôme virtuel localisé, qui est un des noeuds du graphe (avec le LruFmNode et le symtôme réel).</description>
         <implements>da.ibacs.TrblNode</implements>
         <id type="da.ibacs.business.ids.TrblLocalisedVirtualSymptomId" implemented-as="int">
            <description lang="fr">Identificateur d'un symptôme localisé.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
            <arg name="TrblElement"/>
            <arg name="VirtualSymptom"/>
         </constructor>
         <tip role="TrblElement" type="da.ibacs.TrblElement" multiplicity="*" dependency="DEFINED"/>
         <tip role="VirtualSymptom" type="da.ibacs.VirtualSymptom" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
         <property name="Rank" type="int">
            <description lang="fr">Rang</description>
         </property>
      </element>

      <element type="da.ibacs.TrblLruFmNode">
         <description lang="fr">Un LruFmNode est une instance localisée de FailureMode. (Mode de défaillance associé à un LSAC).</description>
         <type-id name="TrblLruFmNode"/>
         <implements>da.ibacs.TrblNode</implements>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.TrblLruFmNodeId" implemented-as="int">
            <description lang="fr">Identificateur du LruFmNode.</description>
         </id>
         <functional-id name="FunctionalId" type="da.ibacs.business.ids.TrblLruFmNodeFunctionalId">
            <description lang="fr">L'identificateur fonctionnel regroupant les identificateurs du FailureMode, du ConstituentTemplate, du TrblElement et du LruBreakdown</description>
            <field name="Element"/>
            <field name="ConstituentTemplate"/>
            <field name="FailureMode"/>
            <field name="LruBreakdown"/>
         </functional-id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
            <arg name="FunctionalId"/>
         </constructor>
         <tip role="FailureMode" type="da.ibacs.TrblFailureMode" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
         <tip role="ConstituentTemplate" type="da.ibacs.TrblConstituentTemplate" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
         <tip role="Element" type="da.ibacs.TrblElement" multiplicity="*" dependency="USED_WEAK"/>
         <property name="LruBreakdown" type="String" length="256">
            <description lang="fr">LruBreakDown associé au LSAC : sous Lru représentant une fonction du LRU (URL en français).</description>
         </property>
         <property name="FailureRateUnit" type="da.ibacs.business.enums.TrblFailureRateUnit" implemented-as="String" length="2">
            <description lang="fr">Taux de défaillance (unités).</description>
         </property>
         <property name="Status" type="da.ibacs.business.enums.TrblLruFmNodeStatus" implemented-as="String" length="1">
            <description lang="fr">Statut du LruFmNode. Deux états possibles : "Draft" ou bien "Validated". __TO DO: Explication des etats.</description>
         </property>
         <property name="FailureRateValue" type="String" length="256">
            <description lang="fr">Taux de défaillance (valeur).</description>
         </property>
         <property name="LifeStatus" type="da.ibacs.business.enums.EntityLifeStatus" implemented-as="String" length="1" nullable="false">
            <description lang="fr">État du cycle de vie du TrblLruFmNode.</description>
         </property>
         <property name="Description" type="String" length="256">
            <description lang="fr">Description</description>
         </property>
         <property name="Comments" type="String" length="256">
            <description lang="fr">Informations supplémentaires sur le FailureMode</description>
         </property>
         <property name="Virtual" type="boolean" definition="SECONDARY" read-only="true" getter-prefix="IS">
            <description lang="fr">Virtualité du LruFmNode calculée à partir de la valeur du FailureMode.</description>
         </property>
         <property name="AlwaysVisibleSymptoms" type="boolean" definition="SECONDARY" read-only="true" getter-prefix="HAS">
            <description lang="fr">Méthode retournant vrai si le LruFmNode contient des symptômes réels ET dont la visibilité est Always Visible</description>
         </property>
         <property name="Applicability" type="da.business.expressions.Expression" implemented-as="String" length="1024">
            <description lang="fr">Expression associée au nom.</description>
         </property>
         <property name="Workpackage" type="String" length="255" nullable="true" read-only="true">
            <description lang="fr"></description>
         </property> 
         <method name="canRenameLruBreakdown" type="boolean">
            <description lang="fr">Méthode qui permet de savoir si on peut renommer un lruBreakdown</description>
            <arg name="newName" type="String"/>
         </method>
      </element>

      <element type="da.ibacs.TrblLruFmNodeFailureSet">
         <description lang="fr">Cette relation sert à lier les cas de panne à chaque Lien Lsac-FailureMode (via leur signature).</description>
         <type-id name="TrblLruFmNodeFailureSet"/>
         <id type="da.ibacs.business.ids.TrblLruFmNodeFailureSetId" implemented-as="int">
            <description lang="fr">Identificateur de la relation TrblLruFmNode-TrblFailureSet</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
            <arg name="LruFmNode"/>
            <arg name="FailureSet"/>
         </constructor>
         <tip role="LruFmNode" type="da.ibacs.TrblLruFmNode" multiplicity="*"/>
         <tip role="FailureSet" type="da.ibacs.TrblFailureSet" multiplicity="*"/>
         <property name="Applied" type="da.ibacs.business.enums.TrblModificationApplicability" implemented-as="String" length="1" read-only="true">
            <description lang="fr">Applicabilité de fiches de modification sur le lien LruFmNode-FailureSet.</description>
         </property>
         <property name="Applicability" type="da.business.expressions.Expression" implemented-as="String" length="1024">
            <description lang="fr">Expression associée au nom.</description>
         </property>
      </element>

      <element type="da.ibacs.TrblLruFmNodeFailureSet_AnalysisSet">
         <description lang="fr">Cette relation sert à définir les liens LRUFM-FS associés à une Analyse.</description>
         <type-id name="TrblLruFmNodeFailureSet -- TrblAnalysisSet"/>
         <tip role="LruFmNodeFailureSet" type="da.ibacs.TrblLruFmNodeFailureSet" multiplicity="*" dependency="DEFINED"/>
         <tip role="AnalysisSet" type="da.ibacs.TrblAnalysisSet" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.TrblLruFmNodeFipElement">
         <description lang="fr">Cette relation sert à lier les tests de réduction d'incertitude au mode de défaillance de l'équipement qu'ils considèrent.</description>
         <type-id name="TrblLruFmNodeFipElement"/>
         <id type="da.ibacs.business.ids.TrblLruFmNodeFipElementId" implemented-as="int">
            <description lang="fr">Identificateur de la relation TrblLruFmNode-FipElement.
Ne peut pas avoir d'id composé car la relation est référencée.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste</description>
            <arg name="Id" optional="true"/>
            <arg name="LruFmNode"/>
            <arg name="FipElement"/>
         </constructor>
         <tip role="LruFmNode" type="da.ibacs.TrblLruFmNode" multiplicity="*" collection="LIST" dependency="DEFINED">
            <xml target-export-mode="ATTACHED"/>
         </tip>
         <tip role="FipElement" type="da.ibacs.TrblFipElement" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
         <property name="Remark" type="String" length="255">
            <description lang="fr">Remarques</description>
         </property>
      </element>

      <element type="da.ibacs.TrblLruFmNodeFipElement_AnalysisSet">
         <description lang="fr">Cette relation sert à définir les liens LRUFM-FipElement associés à une Analyse.</description>
         <type-id name="TrblLruFmNodeFipElement -- TrblAnalysisSet"/>
         <tip role="LruFmNodeFipElement" type="da.ibacs.TrblLruFmNodeFipElement" multiplicity="*"/>
         <tip role="AnalysisSet" type="da.ibacs.TrblAnalysisSet" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.TrblLruFmNodeValidationTest">
         <description lang="fr">Cette relation sert à lier tests de validation aux liens LSAC-Mode de défaillance.</description>
         <type-id name="TrblLruFmNodeValidationTest"/>
         <id type="da.ibacs.business.ids.TrblLruFmNodeValidationTestId" implemented-as="int">
            <description lang="fr">Identificateur de la relation TrblLruFmNode-ValidationTest
Ne peut pas avoir d'id composé car la relation est référencée.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
            <arg name="LruFmNode"/>
            <arg name="ValidationTest"/>
         </constructor>
         <tip role="LruFmNode" type="da.ibacs.TrblLruFmNode" multiplicity="*" collection="LIST" dependency="DEFINED">
            <xml target-export-mode="ATTACHED"/>
         </tip>
         <tip role="ValidationTest" type="da.ibacs.TrblValidationTest" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
         <property name="Remark" type="String" length="255">
            <description lang="fr">Remarques</description>
         </property>
      </element>

      <element type="da.ibacs.TrblLruFmNodeValidationTest_AnalyisSet">
         <description lang="fr">Cette relation sert à définir les liens LRUFM-ValidationTest associés à une Analyse.</description>
         <type-id name="TrblLruFmNodeValidationTest -- TrblAnalysisSet"/>
         <tip role="LruFmNodeValidationTest" type="da.ibacs.TrblLruFmNodeValidationTest" multiplicity="*"/>
         <tip role="AnalysisSet" type="da.ibacs.TrblAnalysisSet" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.TrblLruFmNode_AnalysisSet">
         <description lang="fr">Cette relation sert à définir les liens LSAC-Mode de défaillance associés à une Analyse.</description>
         <type-id name="TrblLruFmNode -- TrblAnalysisSet"/>
         <tip role="LruFmNode" type="da.ibacs.TrblLruFmNode" multiplicity="*" dependency="DEFINED"/>
         <tip role="AnalysisSet" type="da.ibacs.TrblAnalysisSet" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.TrblLruFmNode_VersionSet">
         <description lang="fr">Cette relation sert à définir les versions associées à un lien LRU-FM.</description>
         <type-id name="TrblLruFmNode - - VersionSet"/>
         <tip role="TrblLruFmNode" type="da.ibacs.TrblLruFmNode" multiplicity="*" dependency="DEFINED"/>
         <tip role="VersionSet" type="da.ibacs.VersionSet" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.TrblValidationTest" extends="da.ibacs.TrblDoc" discriminator="VT">
         <description lang="fr">Définition d'un test de validation.</description>
         <type-id name="TrblValidationTest"/>
         <id type="da.ibacs.business.ids.TrblValidationTestId" implemented-as="String">
            <description lang="fr">Identificateur d'un test de validation.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
      </element>
   </domain>

   <domain name="Troubleshooting-Analyses-Ref">
      <description lang="fr">Domaine contenant des éléments réutilisables pour une analyse et valables pour tous les avions.</description>
      <depends-on>Commons</depends-on>
      <depends-on>Impacts-Interface</depends-on>

      <element type="da.ibacs.TrblConstituentTemplate">
         <description lang="fr">Définition d'un équipement générique (au sens fonctionnel) qui est caractérisé par un ensemble de modes de défaillances.
Un ConstituentTemplate désigne un équipement de façon générique (il ne doit pas y avoir plusieurs ConstituentTemplate qui remplissent la même fonction).</description>
         <type-id name="TrblConstituentTemplate"/>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.TrblConstituentTemplateId" implemented-as="int">
            <description lang="fr">Identificateur d'un équipement générique.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
         </constructor>
         <property name="Name" type="String" length="255">
            <description lang="fr">Nom (En français et/ou en anglais) de l'équipement générique.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Description" type="String" length="255">
            <description lang="fr">Description (En français et/ou en anglais) de l'équipement générique.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="LifeStatus" type="da.ibacs.business.enums.EntityLifeStatus" implemented-as="String" length="1" nullable="false">
            <description lang="fr">État du cycle de vie du TrblConstituentTemplate..</description>
         </property>
         <method name="canRemoveFailureMode" type="boolean">
            <description lang="fr">Méthode qui permet de supprimer un FailureMode contenu dans un ConstituentTemplate</description>
            <arg name="failureMode" type="da.ibacs.business.TrblFailureMode"/>
         </method>
      </element>

      <element type="da.ibacs.TrblConstituentTemplate_FailureMode">
         <description lang="fr">Cette relation sert à décrire quels sont les modes de défaillance disponibles pour un équipement générique.</description>
         <type-id name="TrblConstituentTemplate -- TrblFailureMode"/>
         <tip role="ConstituentTemplate" type="da.ibacs.TrblConstituentTemplate" multiplicity="*" dependency="DEFINED"/>
         <tip role="FailureMode" type="da.ibacs.TrblFailureMode" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.TrblFailureMode">
         <description lang="fr">Définition d'un mode de défaillance.</description>
         <type-id name="TrblFailureMode"/>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.TrblFailureModeId" implemented-as="int">
            <description lang="fr">Identificateur d'un mode de défaillance.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <description lang="fr">__TODO__ Pourquoi Virtual est optionnel ?</description>
            <arg name="Id" optional="true"/>
            <arg name="Virtual" optional="false"/>
         </constructor>
         <property name="Name" type="String" length="255">
            <description lang="fr">Nom (En français et/ou en anglais) d'un mode de défaillance.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Description" type="String" length="255">
            <description lang="fr">Description (En français et/ou en anglais) d'un mode de défaillance.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="LifeStatus" type="da.ibacs.business.enums.EntityLifeStatus" implemented-as="String" length="1" nullable="false">
            <description lang="fr">État du cycle de vie du TrblFailureMode.</description>
         </property>
         <property name="Virtual" type="boolean" getter-prefix="IS" read-only="true">
            <description lang="fr">Virtualité du FailureMode</description>
         </property>
      </element>
   </domain>

   <domain name="Troubleshooting-Interface">
      <description lang="fr">Il s'agit d'un domaine virtuel permettant de déclarer les interfaces du domaine Troubleshooting.
 Le but est de supprimer les dépendances inter-domaine.</description>

      <interface type="da.ibacs.Symptom" referenceable="true">
         <description lang="fr">Interface implémentée par tous les symptômes.</description>
      </interface>

      <interface type="da.ibacs.TrblElementTarget" referenceable="true">
         <description lang="fr">Interface implémentée par les classes des objets qui peuvent être la cible d'un TrblElement. ( RFD, LSAC).</description>
      </interface>

   </domain>


   <domain name="Troubleshooting-Resources">
      <description lang="fr">Domaine contenant l'ensemble des éléments de référence. (Symptômes)</description>
      <depends-on>Commons</depends-on>
      <depends-on>Impacts-Interface</depends-on>
      <depends-on>Business-Refs</depends-on>

      <element type="da.ibacs.BitFalbala" discriminator="BF">
         <description lang="fr">Définition d'un bit de panne (FaultCode). Un bit de panne est un symptôme d'applicabilité militaire.
Cette classe définit les données spécifique à un bit de panne.</description>
         <type-id name="BitFalbala"/>
         <implements>da.ibacs.Symptom</implements>
         <implements>da.ibacs.TrblNode</implements>

         <id type="da.ibacs.business.ids.BitFalbalaId" implemented-as="String" length="255">
            <description lang="fr">Identificateur d'un bit de panne.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <property name="LifeStatus" type="da.ibacs.business.enums.EntityLifeStatus" implemented-as="String" length="1" nullable="false">
            <description lang="fr">État du cycle de vie du Bit importé de Falbala".</description>
         </property>
         <property name="AtaSystem" type="String" length="4">
            <description lang="fr">AtaSystem</description>
         </property>
         <property name="Origin" type="da.ibacs.business.enums.EntityOrigin" implemented-as="String" length="1" nullable="false">
            <description lang="fr">Origine du symptôme de type Bit.</description>
         </property>
         <property name="Type" type="da.ibacs.business.enums.SymptomType" implemented-as="String" length="3" read-only="true" definition="SECONDARY">
            <description lang="fr">Type de symptôme (BIT).</description>
         </property>
         <property name="Name" type="String" length="255">
            <description lang="fr">Nom (En français et/ou en anglais) du Bit Falbala.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Meaning" type="String" length="1024">
            <description lang="fr">Description du Bit Falbala.</description>
         </property>
         <property name="System" type="String" length="255">
            <description lang="fr">Description du Bit Falbala.</description>
         </property>
         <property name="Word" type="String" length="255">
            <description lang="fr">Description du Bit Falbala.</description>
         </property>
         <property name="Bit" type="String" length="255">
            <description lang="fr">Description du Bit Falbala.</description>
         </property>
      </element>

      <element type="da.ibacs.Cas" discriminator="CAS">
         <description lang="fr">Définition d'une Alarme (CAS). Une alarme est un symptôme d'applicabilité civile, elle est destinée au pilote pendant le vol. Cette classe définit les données spécifique à une alarme.</description>
         <type-id name="Cas"/>
         <implements>da.ibacs.Symptom</implements>
         <id type="da.ibacs.business.ids.CasId" implemented-as="String" length="255">
            <description lang="fr">Identificateur d'une alarme.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <static name="META_ENUM_CASSEVERITY_TYPE" type="da.ibacs.business.MetaEnumType.Value" value="MetaEnumType.INSTANCE.createOrFind(&quot;CasSeverity&quot;)">
            <description lang="fr">Sévérité de l'alarme.</description>
         </static>
         <static name="META_ENUM_ATA_CHAPTER" type="da.ibacs.business.MetaEnumType.Value" value="MetaEnumType.INSTANCE.createOrFind(&quot;AtaChapter&quot;)">
            <description lang="fr">AtaSystem</description>
         </static>
         <property name="LifeStatus" type="da.ibacs.business.enums.EntityLifeStatus" implemented-as="String" length="1" nullable="false">
            <description lang="fr">État du cycle de vie de l'alarme.</description>
         </property>
         <property name="VariableName" type="String" length="255">
            <description lang="fr">Id de l'alarme dans la base de données Falbala. Identificateur de l'alarme que utilise des utilisaeurs.</description>
         </property>
         <property name="Origin" type="da.ibacs.business.enums.EntityOrigin" implemented-as="String" length="1" nullable="false">
            <description lang="fr">Origine du symptôme du type Alarme.</description>
         </property>
         <property name="Type" type="da.ibacs.business.enums.SymptomType" implemented-as="String" length="3" read-only="true" definition="SECONDARY">
            <description lang="fr">Type de symptôme (CAS).</description>
         </property>
         <property name="Name" type="String" length="255">
            <description lang="fr">Nom (En français et/ou en anglais) de l'alarme.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Localisation" type="String" length="255">
            <description lang="fr">Localisation de l'alarme.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Meaning" type="String" length="1024">
            <description lang="fr">Descripton de l'alarme.</description>
         </property>
         <property name="Category" type="String" length="255">
            <description lang="fr">La sévérité de l'alarme.</description>
         </property>
      </element>

      <element type="da.ibacs.Cas_AtaSystem">
         <description lang="fr">Cette relation sert à définir l'AtaSystem auquel se rapporte l'alarme.</description>
         <type-id name="Cas -- AtaSystem"/>
         <tip role="Cas" type="da.ibacs.Cas" multiplicity="*" dependency="DEFINED"/>
         <tip role="AtaChapter" type="da.ibacs.MetaEnumValue" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.Cas_Severity">
         <description lang="fr">Cette relation sert à définir la sévérité d'une alarme.</description>
         <type-id name="Cas -- Severity"/>
         <tip role="Cas" type="da.ibacs.Cas" multiplicity="*" dependency="DEFINED"/>
         <tip role="Severity" type="da.ibacs.MetaEnumValue" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.FailureCode" discriminator="LCM">
         <description lang="fr">Définition d'un code de maintenance. Un code de maintenance est un symptôme. Cette classe définit les données spécifique à un code de maintenance.</description>
         <type-id name="FailureCode"/>
         <implements>da.ibacs.Symptom</implements>
         <id type="da.ibacs.business.ids.FailureCodeId" implemented-as="String" length="255">
            <description lang="fr">Identificateur d'un code de maintenance.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <static name="META_ENUM_ATA_CHAPTER" type="da.ibacs.business.MetaEnumType.Value" value="MetaEnumType.INSTANCE.createOrFind(&quot;AtaChapter&quot;)">
            <description lang="fr">AtaSystem</description>
         </static>
         <property name="LifeStatus" type="da.ibacs.business.enums.EntityLifeStatus" implemented-as="String" length="1" nullable="false">
            <description lang="fr">État du cycle de vie du FailureCode.</description>
         </property>
         <property name="VariableName" type="String" length="255">
            <description lang="fr">Le code de panne importé de la base de données Falbala. </description>
         </property>
         <property name="Origin" type="da.ibacs.business.enums.EntityOrigin" implemented-as="String" length="1" nullable="false">
            <description lang="fr">Origine du symptôme de type code de panne.</description>
         </property>
         <property name="Type" type="da.ibacs.business.enums.SymptomType" implemented-as="String" length="3" read-only="true" definition="SECONDARY">
            <description lang="fr">Type de symptôme (FailureCode).</description>
         </property>
         <property name="Name" type="String" length="255">
            <description lang="fr">Nom (En français et/ou en anglais) du symptôme code de panne.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Meaning" type="String" length="1024">
            <description lang="fr">Description du code de panne.</description>
         </property>
         <property name="Category" type="String" length="255">
            <description lang="fr">Catégorie du symptôme (Armement).</description>
         </property>
      </element>

      <element type="da.ibacs.FailureCode_AtaSystem">
         <description lang="fr">Cette relation sert à définir l'AtaSystem auquel se rapporte le code de panne.</description>
         <type-id name="FailureCode -- AtaSystem"/>
         <tip role="FailureCode" type="da.ibacs.FailureCode" multiplicity="*" dependency="DEFINED"/>
         <tip role="AtaChapter" type="da.ibacs.MetaEnumValue" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.FaultRootCause" discriminator="RC">
         <description lang="fr">Définition d'un fault/RootCause. Un fault/RootCause est un symptôme. Cette classe définit les données spécifique à un fault/RootCause.</description>
         <type-id name="FaultRootCause"/>
         <implements>da.ibacs.Symptom</implements>
         <id type="da.ibacs.business.ids.FaultRootCauseId" implemented-as="String" length="255">
            <description lang="fr">Identificateur d'un fault/RootCause.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <property name="LifeStatus" type="da.ibacs.business.enums.EntityLifeStatus" implemented-as="String" length="1" nullable="false">
            <description lang="fr">État du cycle de vie du Fault/Root Cause.</description>
         </property>
         <property name="AtaSystem" type="String" length="4">
            <description lang="fr">AtaSystem</description>
         </property>
         <property name="VariableName" type="String" length="255">
            <description lang="fr"></description>
         </property>
         <property name="Origin" type="da.ibacs.business.enums.EntityOrigin" implemented-as="String" length="1" nullable="false">
            <description lang="fr">Origine du symptôme de type Fault/Root Cause.</description>
         </property>
         <property name="Type" type="da.ibacs.business.enums.SymptomType" implemented-as="String" length="3" read-only="true" definition="SECONDARY">
            <description lang="fr">Type de symptôme (FRC).</description>
         </property>
         <property name="Name" type="String" length="255">
            <description lang="fr">Nom (En français et/ou en anglais) d'un symptôme de type RC.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Meaning" type="String" length="1024">
            <description lang="fr"></description>
         </property>
      </element>

      <element type="da.ibacs.FlightControlSystemBit" discriminator="FCS">
         <description lang="fr">Définition d'un bit commande de vol. Un bit commande de vol est un symptôme. Cette classe définit les données spécifique à un bit commande de vol.</description>
         <type-id name="FlightControlSystemBit"/>
         <implements>da.ibacs.Symptom</implements>
         <id type="da.ibacs.business.ids.FlightControlSystemBitId" implemented-as="String" length="255">
            <description lang="fr">Identificateur d'un bit commande de vol.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <static name="META_ENUM_ATA_CHAPTER" type="da.ibacs.business.MetaEnumType.Value" value="MetaEnumType.INSTANCE.createOrFind(&quot;AtaChapter&quot;)">
            <description lang="fr">AtaSystem</description>
         </static>
         <property name="LifeStatus" type="da.ibacs.business.enums.EntityLifeStatus" implemented-as="String" length="1" nullable="false">
            <description lang="fr">État du cycle de vie de la ressource.</description>
         </property>
         <property name="VariableName" type="String" length="255">
            <description lang="fr">L'id de FCS dans Falbala : concaténation du Mnémo_Mot et du Bit séparés par un point.</description>
         </property>
         <property name="Origin" type="da.ibacs.business.enums.EntityOrigin" implemented-as="String" length="1" nullable="false">
            <description lang="fr">Origine du symptôme de type bit commande de vol.</description>
         </property>
         <property name="Type" type="da.ibacs.business.enums.SymptomType" implemented-as="String" length="3" read-only="true" definition="SECONDARY">
            <description lang="fr">Type de symptôme (FCS).</description>
         </property>
         <property name="Name" type="String" length="255">
            <description lang="fr">Nom (En français et/ou en anglais) du bit commande de vol.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Description" type="String" length="255">
            <description lang="fr">Description (En français et/ou en anglais) du symptôme bit commande de vol.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Meaning" type="String" length="1024">
            <description lang="fr">Description du symptôme.</description>
         </property>
         <property name="Category" type="String" length="255">
            <description lang="fr">Echelle de catégories variant de 1 à 6. (Premier chiffre du Mnémo_Mot).</description>
         </property>
      </element>

      <element type="da.ibacs.FlightControlSystemBit_AtaSystem">
         <description lang="fr">Cette relation sert à définir l'AtaSystem auquel se rapporte le bit commande de vol.</description>
         <type-id name="FlightControlSystemBit -- AtaSystem"/>
         <tip role="FlightControlSystemBit" type="da.ibacs.FlightControlSystemBit" multiplicity="*" dependency="DEFINED"/>
         <tip role="AtaChapter" type="da.ibacs.MetaEnumValue" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.Modification">
         <description lang="fr">Définition d'une modification (EPI).</description>
         <type-id name="Modification"/>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.ModificationId" implemented-as="int">
            <description lang="fr">Identificateur d'une modification.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
         </constructor>
         <property name="SupportName" type="String" length="256">
            <description lang="fr">Nom soutien (En français et/ou en anglais).</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Description" type="String" length="256">
            <description lang="fr">Description (En français et/ou en anglais).</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="ClientEffectivityWith" type="String" length="256">
            <description lang="fr">Effectivité cliente avec (En français et/ou en anglais).</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="ClientEffectivityWithout" type="String" length="256">
            <description lang="fr">Effectivité cliente sans (En français et/ou en anglais).</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="FormalEffectivityWith" type="String" length="256">
            <description lang="fr">Effectivité formelle avec.</description>
         </property>
         <property name="FormalEffectivityWithout" type="String" length="256">
            <description lang="fr">Effectivité formelle sans.</description>
         </property>
         <property name="LifeStatus" type="da.ibacs.business.enums.EntityLifeStatus" implemented-as="String" length="1" nullable="false">
            <description lang="fr">État du cycle de vie de la modification.</description>
         </property>
      </element>

      <element type="da.ibacs.ScvElaborate" discriminator="SCVELAB">
         <description lang="fr"></description>
         <type-id name="ScvElaborate"/>
         <implements>da.ibacs.Symptom</implements>
         <id type="da.ibacs.business.ids.ScvElaborateId" implemented-as="String" length="255">
            <description lang="fr">Identificateur d'un .</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <property name="LifeStatus" type="da.ibacs.business.enums.EntityLifeStatus" implemented-as="String" length="1" nullable="false">
            <description lang="fr">État du cycle de vie de l'observable.</description>
         </property>
         <property name="VariableName" type="String" length="255">
            <description lang="fr"></description>
         </property>
         <property name="Origin" type="da.ibacs.business.enums.EntityOrigin" implemented-as="String" length="1" nullable="false">
            <description lang="fr">Origine du symptôme de type scv élaboré.</description>
         </property>
         <property name="Type" type="da.ibacs.business.enums.SymptomType" implemented-as="String" length="3" read-only="true" definition="SECONDARY">
            <description lang="fr">Type de symptôme (SNS).</description>
         </property>
         <property name="Name" type="String" length="255">
            <description lang="fr">Nom (En français et/ou en anglais) d'un symptôme de type observable.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Way" type="String" length="1024">
            <description lang="fr">Description du symptôme de type observable.</description>
         </property>
      </element>

      <element type="da.ibacs.Sensitive" discriminator="SNS">
         <description lang="fr">Définition d'un observable (Sensitive). Un observable est un symptôme. Cette classe définit les données spécifique à un observable.</description>
         <type-id name="Sensitive"/>
         <implements>da.ibacs.Symptom</implements>
         <id type="da.ibacs.business.ids.SensitiveId" implemented-as="String" length="255">
            <description lang="fr">Identificateur d'un observable.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <static name="META_ENUM_ATA_CHAPTER" type="da.ibacs.business.MetaEnumType.Value" value="MetaEnumType.INSTANCE.createOrFind(&quot;AtaChapter&quot;)">
            <description lang="fr">AtaSystem auquel est appliqué le symptôme "Sensitive".</description>
         </static>
         <property name="LifeStatus" type="da.ibacs.business.enums.EntityLifeStatus" implemented-as="String" length="1" nullable="false">
            <description lang="fr">État du cycle de vie de l'observable.</description>
         </property>
         <property name="VariableName" type="String" length="255">
            <description lang="fr"></description>
         </property>
         <property name="Origin" type="da.ibacs.business.enums.EntityOrigin" implemented-as="String" length="1" nullable="false">
            <description lang="fr">Origine du symptôme de type observable.</description>
         </property>
         <property name="Type" type="da.ibacs.business.enums.SymptomType" implemented-as="String" length="3" read-only="true" definition="SECONDARY">
            <description lang="fr">Type de symptôme (SNS).</description>
         </property>
         <property name="Name" type="String" length="255">
            <description lang="fr">Nom (En français et/ou en anglais) d'un symptôme de type observable.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Localisation" type="String" length="255">
            <description lang="fr">Localisation du symptôme de type observable.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Category" type="String" length="255">
            <description lang="fr">Catégorie du symptôme. (équivalent à l'AtaSystem).</description>
         </property>
         <property name="Debriefing" type="boolean">
            <description lang="fr">Debriefing.</description>
         </property>
         <property name="Meaning" type="String" length="1024">
            <description lang="fr">Description du symptôme de type observable.</description>
         </property>
      </element>

      <element type="da.ibacs.Sensitive_AtaSystem">
         <description lang="fr">Cette relation sert à définir l'AtaSystem auquel se rapporte le symptôme observable.</description>
         <type-id name="Sensitive -- AtaSystem"/>
         <tip role="Sensitive" type="da.ibacs.Sensitive" multiplicity="*" dependency="DEFINED"/>
         <tip role="AtaChapter" type="da.ibacs.MetaEnumValue" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.Sensitive_Reporter">
         <description lang="fr">Cette relation sert à définir le reporter d'un observable.</description>
         <type-id name="Sensitive -- Reporter"/>
         <tip role="Sensitive" type="da.ibacs.Sensitive" multiplicity="*" dependency="DEFINED"/>
         <tip role="Reporter" type="da.ibacs.MetaEnumValue" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <interface type="da.ibacs.TrblNode" referenceable="true">
         <description lang="fr">Interface implémentée par les noeuds du graphe inter-système.</description>
      </interface>

      <element type="da.ibacs.TrblSymptom" discriminator-length="3">
         <description lang="fr">Objet intermédiaire pointant vers un Symptôme de la bibliothèque. 
Le TrblSymptom est le symptôme qui est utilisé dans l'analyse de diagnostic.</description>
         <type-id name="TrblSymptom"/>
         <implements>da.ibacs.TrblNode</implements>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.TrblSymptomId" implemented-as="String" length="255">
            <description lang="fr">Identificateur d'un TrblSymptom</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <property name="TargetSymptom" type="da.rids.RawId" implemented-as="String" length="255" nullable="false" read-only="true" definition="SECONDARY">
            <description lang="fr"> Symptôme qui sert à la définition du TrblSymptom.</description>
         </property>
         <property name="Type" type="da.ibacs.business.enums.SymptomType" implemented-as="String" length="3" read-only="true" definition="SECONDARY">
            <description lang="fr">Type du symptôme target.</description>
         </property>
         <property name="Name" type="String" length="255">
            <description lang="fr">Nom (En français et/ou en anglais) du TrblSymptom.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Description" type="String" length="255">
            <description lang="fr">Description (En français et/ou en anglais) du TrblSymptom.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Meaning" type="String" length="1024">
            <description lang="fr">Récupération de la description du symptôme target.</description>
         </property>
         <property name="Virtual" type="boolean" definition="SECONDARY" read-only="true" getter-prefix="IS">
            <description lang="fr">Virtualité du symptôme.</description>
         </property>
      </element>

      <element type="da.ibacs.TrblSymptom_Location">
         <description lang="fr">Cette relation sert à définir la localisation d'un symptôme.</description>
         <type-id name="TrblSymptom -- Location"/>
         <tip role="TrblSymptom" type="da.ibacs.TrblSymptom" multiplicity="*" dependency="DEFINED"/>
         <tip role="Location" type="da.ibacs.MetaEnumValue" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.TrblSymptom_VersionSet">
         <description lang="fr">Cette relation sert à définir les versions associées à un Symptôme.</description>
         <type-id name="TrblSymptom -- VersionSet"/>
         <tip role="TrblSymptom" type="da.ibacs.TrblSymptom" multiplicity="*" dependency="DEFINED"/>
         <tip role="VersionSet" type="da.ibacs.VersionSet" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.VirtualSymptom" discriminator="VTS">
         <description lang="fr"> Définition d'un symptôme virtuel </description>
         <type-id name="VirtualSymptom"/>
         <implements>da.ibacs.Symptom</implements>
         <id type="da.ibacs.business.ids.VirtualSymptomId" implemented-as="String" length="255">
            <description lang="fr">Identificateur d'un symptôme virtuel.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id"/>
         </constructor>
         <property name="LifeStatus" type="da.ibacs.business.enums.EntityLifeStatus" implemented-as="String" length="1" nullable="false">
            <description lang="fr">État du cycle de vie du VirtualSymptom.</description>
         </property>
         <property name="AtaSystem" type="String" length="4">
            <description lang="fr">AtaSystem auquel est relier le VirtualSymptom.</description>
         </property>
         <property name="VariableName" type="String" length="255">
            <description lang="fr"></description>
         </property>
         <property name="Origin" type="da.ibacs.business.enums.EntityOrigin" implemented-as="String" length="1" nullable="false">
            <description lang="fr">Origine du VirtualSymptom.</description>
         </property>
         <property name="Type" type="da.ibacs.business.enums.SymptomType" implemented-as="String" length="3" read-only="true" definition="SECONDARY">
            <description lang="fr">Type de symptôme (VTS)</description>
         </property>
         <property name="Name" type="String" length="255">
            <description lang="fr">Nom (En français et/ou en anglais) d'un symptôme virtuel.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Description" type="String" length="255">
            <description lang="fr">Description (En français et/ou en anglais) du symptôme virtuel.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Meaning" type="String" length="1024">
            <description lang="fr">Description du symptôme virtuel.</description>
         </property>
      </element>
   </domain>

   <domain name="Workshops" prefix="Wks">
      <description lang="fr">Domaine dédié à la gestion des Ateliers de Maintenance.</description>
      <depends-on>Commons</depends-on>
      <depends-on>Impacts-Interface</depends-on>
      <depends-on>Business-Refs</depends-on>
      <depends-on>Resources</depends-on>
      <depends-on>Lsa-Operations</depends-on>
      <depends-on>Workshops-Interface</depends-on>

      <element type="da.ibacs.Workshop">
         <implements>da.ibacs.LifeStatusSetter</implements>
         <implements>da.ibacs.DataChangeTarget</implements>
         <implements>da.ibacs.TagTarget</implements>
         <implements>da.ibacs.ImpactTarget</implements>
         <id type="da.ibacs.business.ids.WorkshopId" implemented-as="int">
            <description lang="fr">Identification de l'atelier. Il s'agit d'un autonum.</description>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
         </constructor>
         <static name="META_ENUM_CATEGORY" type="da.ibacs.business.MetaEnumType.Value" value="MetaEnumType.INSTANCE.createOrFind(&quot;WorkshopCategory&quot;)"/>
         <property name="Name" type="String" length="255">
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="Description" type="String" length="1024">
            <description lang="fr">Description (En français et en anglais) de l'atelier.</description>
            <index type="da.ibacs.business.Language" name="language" values="FRENCH ENGLISH"/>
         </property>
         <property name="LifeStatus" type="da.ibacs.business.enums.EntityLifeStatus" implemented-as="String" length="1" nullable="false" packed="EXTERNAL_TYPE"/>
         <method name="isAncestor" type="boolean">
            <description lang="fr">Cette méthode permet de vérifier avant l'ajout d'un élément, s'il n'est pas un ancêtre.</description>
            <arg name="other" type="da.ibacs.business.Workshop"/>
         </method>
         <method name="getProductSetOrigin" type="da.ibacs.business.enums.DefinitionOrigin">
            <arg name="productSet" type="da.ibacs.business.ProductSet"/>
         </method>
         <method name="updateWorkshopLogistic" type="boolean">
            <description lang="fr">Cette méthode permet de mettre à jour la logistique de l'atelier.</description>
         </method>
      </element>

      <element type="da.ibacs.WorkshopLogistic">
         <description lang="fr">Relation lourde portant la logistique de l'atelier.</description>
         <id type="da.ibacs.business.ids.WorkshopLogisticId" implemented-as="da.ibacs.impl.jpa.WorkshopLogisticKey">
            <description lang="fr">Identification de l'atelier</description>
            <field name="Resource"/>
            <field name="Unit"/>
            <field name="Workshop"/>
         </id>
         <constructor name="CONSTRUCTOR">
            <description lang="fr">Constructeur minimaliste.</description>
            <arg name="Id" optional="true"/>
         </constructor>
         <tip role="Workshop" type="da.ibacs.Workshop" multiplicity="*" dependency="DEFINED"/>
         <tip role="Resource" type="da.ibacs.Resource" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
         <tip role="Unit" type="da.ibacs.Unit" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
         <property name="MaxQuantity" type="float">
            <description lang="fr">Quantité maximum de ressource pour une tâche.</description>
         </property>
      </element>

      <element type="da.ibacs.Workshop_Business">
         <description lang="fr">Applicabilité en Affaires d'un Atelier.</description>
         <type-id name="Workshop -- Business"/>
         <tip role="Workshop" type="da.ibacs.Workshop" multiplicity="*" dependency="DEFINED"/>
         <tip role="Business" type="da.ibacs.Business" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.Workshop_MetaEnumValueCategory">
         <description lang="fr">Catégorie de l'atelier.</description>
         <type-id name="Workshop -- MetaEnumValue (Category)"/>
         <life-cycle created-by="AUTO" updated-by="AUTO" removed-by="AUTO"/>
         <tip role="Workshop" type="da.ibacs.Workshop" multiplicity="*" dependency="DEFINED"/>
         <tip role="Category" type="da.ibacs.MetaEnumValue" multiplicity="0..1" navigable="false" dependency="USED_WEAK"/>
      </element>

      <element type="da.ibacs.Workshop_ProductSet">
         <description lang="fr">Famille de Produits de l'atelier.</description>
         <type-id name="Workshop -- ProductSet"/>
         <tip role="Workshop" type="da.ibacs.Workshop" multiplicity="*" dependency="DEFINED"/>
         <tip role="ProductSet" type="da.ibacs.ProductSet" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.Workshop_ProductSet_Derived" definition="SECONDARY" read-only="true">
         <description lang="fr">Famille de Produits dérivés de l'atelier.</description>
         <type-id name="Workshop -- ProductSet (Derived)"/>
         <tip role="Workshop" type="da.ibacs.Workshop" multiplicity="*" dependency="DEFINED"/>
         <tip role="DerivedProductSet" type="da.ibacs.ProductSet" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.Workshop_VersionSet">
         <description lang="fr">Applicabilité en Versions d'un Atelier.</description>
         <type-id name="Workshop -- VersionSet"/>
         <tip role="Workshop" type="da.ibacs.Workshop" multiplicity="*" dependency="DEFINED"/>
         <tip role="VersionSet" type="da.ibacs.VersionSet" multiplicity="0..1" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.Workshop_Workshop">
         <description lang="fr">Sous-ateliers.</description>
         <type-id name="Workshop_Workshop (Composition: Parent -- Child)"/>
         <tip role="Parent" type="da.ibacs.Workshop" multiplicity="*" dependency="DEFINED"/>
         <tip role="Child" plural="Children" type="da.ibacs.Workshop" multiplicity="*" dependency="USED_WEAK"/>
      </element>

      <element type="da.ibacs.Workshop_WorkshopElement">
         <description lang="fr">Tâches de l'atelier.</description>
         <type-id name="Workshop -- WorkshopElement"/>
         <tip role="Workshop" type="da.ibacs.Workshop" multiplicity="*" dependency="DEFINED"/>
         <tip role="WorkshopElement" type="da.ibacs.WorkshopElement" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>

      <element type="da.ibacs.Workshop_WorkshopElement_Derived" definition="SECONDARY" read-only="true">
         <description lang="fr">Tâches de l'atelier.</description>
         <type-id name="Workshop -- WorkshopElement (Derived)"/>
         <tip role="Workshop" type="da.ibacs.Workshop" multiplicity="*" dependency="DEFINED"/>
         <tip role="DerivedWorkshopElement" type="da.ibacs.WorkshopElement" multiplicity="*" dependency="USED_WEAK" navigable="false"/>
      </element>
   </domain>

   <domain name="Workshops-Interface">
      <description lang="fr">Il s'agit d'un domaine virtuel permettant de déclarer les interfaces du domaine Workshop.
Le but est de supprimer les dépendances inter-domaine.</description>
      <interface type="da.ibacs.WorkshopElement" referenceable="true">
         <description lang="fr">Interface implémentée par les classes des objets auxquels sont attachées des Workshop.</description>
         <method name="getType" type="da.ibacs.business.enums.WorkshopElementType"/>
      </interface>
   </domain>
</model>